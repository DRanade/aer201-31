

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Feb 01 16:27:57 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1,inline
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           ; Version 2.05
    60                           ; Generated 20/12/2018 GMT
    61                           ; 
    62                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4620 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	mediumconst
    95  00FE7A                     __pmediumconst:
    96                           	opt callstack 0
    97  00FE7A  00                 	db	0
    98  00FE7B                     _keys:
    99                           	opt callstack 0
   100  00FE7B  31                 	db	49
   101  00FE7C  32                 	db	50
   102  00FE7D  33                 	db	51
   103  00FE7E  41                 	db	65
   104  00FE7F  34                 	db	52
   105  00FE80  35                 	db	53
   106  00FE81  36                 	db	54
   107  00FE82  42                 	db	66
   108  00FE83  37                 	db	55
   109  00FE84  38                 	db	56
   110  00FE85  39                 	db	57
   111  00FE86  43                 	db	67
   112  00FE87  2A                 	db	42
   113  00FE88  30                 	db	48
   114  00FE89  23                 	db	35
   115  00FE8A  44                 	db	68
   116  00FE8B  00                 	db	0
   117  00FE8C                     __end_of_keys:
   118                           	opt callstack 0
   119  00FE8C                     _happynewyear:
   120                           	opt callstack 0
   121  00FE8C  00                 	db	0
   122  00FE8D  25                 	db	37
   123  00FE8E  16                 	db	22
   124  00FE8F  01                 	db	1
   125  00FE90  28                 	db	40
   126  00FE91  01                 	db	1
   127  00FE92  19                 	db	25
   128  00FE93                     __end_of_happynewyear:
   129                           	opt callstack 0
   130  00FE93                     _LCD_LINE1_ADDR:
   131                           	opt callstack 0
   132  00FE93  00                 	db	0
   133  00FE94                     __end_of_LCD_LINE1_ADDR:
   134                           	opt callstack 0
   135  00FE94                     _LCD_SIZE_VERT:
   136                           	opt callstack 0
   137  00FE94  04                 	db	4
   138  00FE95                     __end_of_LCD_SIZE_VERT:
   139                           	opt callstack 0
   140  00FE95                     _LCD_SIZE_HORZ:
   141                           	opt callstack 0
   142  00FE95  10                 	db	16
   143  00FE96                     __end_of_LCD_SIZE_HORZ:
   144                           	opt callstack 0
   145  00FE96  50                 	db	80
   146  00FE97                     __end_of_LCD_LINE4_ADDR:
   147                           	opt callstack 0
   148  00FE97  10                 	db	16
   149  00FE98                     __end_of_LCD_LINE3_ADDR:
   150                           	opt callstack 0
   151  00FE98  40                 	db	64
   152  00FE99                     __end_of_LCD_LINE2_ADDR:
   153                           	opt callstack 0
   154  0000                     _LATDbits	set	3980
   155  0000                     _SSPBUF	set	4041
   156  0000                     _SSPCON2bits	set	4037
   157  0000                     _SSPCON1	set	4038
   158  0000                     _SSPADD	set	4040
   159  0000                     _TRISCbits	set	3988
   160  0000                     _SSPCON1bits	set	4038
   161  0000                     _SSPCON2	set	4037
   162  0000                     _SSPSTAT	set	4039
   163  0000                     _PORTB	set	3969
   164  0000                     _INTCONbits	set	4082
   165  0000                     _ADCON1	set	4033
   166  0000                     _TRISD	set	3989
   167  0000                     _LATD	set	3980
   168  0000                     _INT1IF	set	32640
   169  0000                     _INT1IE	set	32643
   170  00FE99                     STR_2:
   171  00FE99  20                 	db	32
   172  00FE9A  20                 	db	32
   173  00FE9B  20                 	db	32
   174  00FE9C  20                 	db	32
   175  00FE9D  25                 	db	37
   176  00FE9E  30                 	db	48	;'0'
   177  00FE9F  32                 	db	50	;'2'
   178  00FEA0  78                 	db	120	;'x'
   179  00FEA1  2F                 	db	47
   180  00FEA2  25                 	db	37
   181  00FEA3  30                 	db	48	;'0'
   182  00FEA4  32                 	db	50	;'2'
   183  00FEA5  78                 	db	120	;'x'
   184  00FEA6  2F                 	db	47
   185  00FEA7  25                 	db	37
   186  00FEA8  30                 	db	48	;'0'
   187  00FEA9  32                 	db	50	;'2'
   188  00FEAA  78                 	db	120	;'x'
   189  00FEAB  20                 	db	32
   190  00FEAC  20                 	db	32
   191  00FEAD  20                 	db	32
   192  00FEAE  20                 	db	32
   193  00FEAF  00                 	db	0
   194  00FEB0                     STR_3:
   195  00FEB0  20                 	db	32
   196  00FEB1  20                 	db	32
   197  00FEB2  20                 	db	32
   198  00FEB3  20                 	db	32
   199  00FEB4  25                 	db	37
   200  00FEB5  30                 	db	48	;'0'
   201  00FEB6  32                 	db	50	;'2'
   202  00FEB7  78                 	db	120	;'x'
   203  00FEB8  3A                 	db	58	;':'
   204  00FEB9  25                 	db	37
   205  00FEBA  30                 	db	48	;'0'
   206  00FEBB  32                 	db	50	;'2'
   207  00FEBC  78                 	db	120	;'x'
   208  00FEBD  3A                 	db	58	;':'
   209  00FEBE  25                 	db	37
   210  00FEBF  30                 	db	48	;'0'
   211  00FEC0  32                 	db	50	;'2'
   212  00FEC1  78                 	db	120	;'x'
   213  00FEC2  20                 	db	32
   214  00FEC3  20                 	db	32
   215  00FEC4  20                 	db	32
   216  00FEC5  20                 	db	32
   217  00FEC6  00                 	db	0
   218  00FEC7                     STR_19:
   219  00FEC7  50                 	db	80	;'P'
   220  00FEC8  6F                 	db	111	;'o'
   221  00FEC9  6C                 	db	108	;'l'
   222  00FECA  65                 	db	101	;'e'
   223  00FECB  25                 	db	37
   224  00FECC  30                 	db	48	;'0'
   225  00FECD  31                 	db	49	;'1'
   226  00FECE  78                 	db	120	;'x'
   227  00FECF  20                 	db	32
   228  00FED0  50                 	db	80	;'P'
   229  00FED1  6F                 	db	111	;'o'
   230  00FED2  73                 	db	115	;'s'
   231  00FED3  3A                 	db	58	;':'
   232  00FED4  25                 	db	37
   233  00FED5  30                 	db	48	;'0'
   234  00FED6  31                 	db	49	;'1'
   235  00FED7  64                 	db	100	;'d'
   236  00FED8  2E                 	db	46
   237  00FED9  25                 	db	37
   238  00FEDA  30                 	db	48	;'0'
   239  00FEDB  33                 	db	51	;'3'
   240  00FEDC  64                 	db	100	;'d'
   241  00FEDD  00                 	db	0
   242  00FEDE                     STR_20:
   243  00FEDE  54                 	db	84	;'T'
   244  00FEDF  69                 	db	105	;'i'
   245  00FEE0  72                 	db	114	;'r'
   246  00FEE1  65                 	db	101	;'e'
   247  00FEE2  73                 	db	115	;'s'
   248  00FEE3  20                 	db	32
   249  00FEE4  53                 	db	83	;'S'
   250  00FEE5  75                 	db	117	;'u'
   251  00FEE6  70                 	db	112	;'p'
   252  00FEE7  70                 	db	112	;'p'
   253  00FEE8  3A                 	db	58	;':'
   254  00FEE9  20                 	db	32
   255  00FEEA  20                 	db	32
   256  00FEEB  20                 	db	32
   257  00FEEC  25                 	db	37
   258  00FEED  30                 	db	48	;'0'
   259  00FEEE  31                 	db	49	;'1'
   260  00FEEF  64                 	db	100	;'d'
   261  00FEF0  20                 	db	32
   262  00FEF1  00                 	db	0
   263  00FEF2                     STR_21:
   264  00FEF2  54                 	db	84	;'T'
   265  00FEF3  69                 	db	105	;'i'
   266  00FEF4  72                 	db	114	;'r'
   267  00FEF5  65                 	db	101	;'e'
   268  00FEF6  73                 	db	115	;'s'
   269  00FEF7  20                 	db	32
   270  00FEF8  6F                 	db	111	;'o'
   271  00FEF9  6E                 	db	110	;'n'
   272  00FEFA  20                 	db	32
   273  00FEFB  50                 	db	80	;'P'
   274  00FEFC  6F                 	db	111	;'o'
   275  00FEFD  6C                 	db	108	;'l'
   276  00FEFE  65                 	db	101	;'e'
   277  00FEFF  3A                 	db	58	;':'
   278  00FF00  25                 	db	37
   279  00FF01  30                 	db	48	;'0'
   280  00FF02  31                 	db	49	;'1'
   281  00FF03  64                 	db	100	;'d'
   282  00FF04  20                 	db	32
   283  00FF05  00                 	db	0
   284  00FF06                     STR_16:
   285  00FF06  54                 	db	84	;'T'
   286  00FF07  69                 	db	105	;'i'
   287  00FF08  72                 	db	114	;'r'
   288  00FF09  65                 	db	101	;'e'
   289  00FF0A  73                 	db	115	;'s'
   290  00FF0B  20                 	db	32
   291  00FF0C  53                 	db	83	;'S'
   292  00FF0D  75                 	db	117	;'u'
   293  00FF0E  70                 	db	112	;'p'
   294  00FF0F  70                 	db	112	;'p'
   295  00FF10  3A                 	db	58	;':'
   296  00FF11  20                 	db	32
   297  00FF12  20                 	db	32
   298  00FF13  25                 	db	37
   299  00FF14  30                 	db	48	;'0'
   300  00FF15  32                 	db	50	;'2'
   301  00FF16  78                 	db	120	;'x'
   302  00FF17  20                 	db	32
   303  00FF18  00                 	db	0
   304  00FF19                     STR_17:
   305  00FF19  50                 	db	80	;'P'
   306  00FF1A  6F                 	db	111	;'o'
   307  00FF1B  6C                 	db	108	;'l'
   308  00FF1C  65                 	db	101	;'e'
   309  00FF1D  20                 	db	32
   310  00FF1E  43                 	db	67	;'C'
   311  00FF1F  6F                 	db	111	;'o'
   312  00FF20  75                 	db	117	;'u'
   313  00FF21  6E                 	db	110	;'n'
   314  00FF22  74                 	db	116	;'t'
   315  00FF23  3A                 	db	58	;':'
   316  00FF24  20                 	db	32
   317  00FF25  20                 	db	32
   318  00FF26  25                 	db	37
   319  00FF27  30                 	db	48	;'0'
   320  00FF28  32                 	db	50	;'2'
   321  00FF29  78                 	db	120	;'x'
   322  00FF2A  20                 	db	32
   323  00FF2B  00                 	db	0
   324  00FF2C                     STR_15:
   325  00FF2C  54                 	db	84	;'T'
   326  00FF2D  6F                 	db	111	;'o'
   327  00FF2E  74                 	db	116	;'t'
   328  00FF2F  61                 	db	97	;'a'
   329  00FF30  6C                 	db	108	;'l'
   330  00FF31  20                 	db	32
   331  00FF32  54                 	db	84	;'T'
   332  00FF33  69                 	db	105	;'i'
   333  00FF34  6D                 	db	109	;'m'
   334  00FF35  65                 	db	101	;'e'
   335  00FF36  3A                 	db	58	;':'
   336  00FF37  20                 	db	32
   337  00FF38  25                 	db	37
   338  00FF39  30                 	db	48	;'0'
   339  00FF3A  33                 	db	51	;'3'
   340  00FF3B  78                 	db	120	;'x'
   341  00FF3C  73                 	db	115	;'s'
   342  00FF3D  00                 	db	0
   343  00FF3E                     STR_8:
   344  00FF3E  20                 	db	32
   345  00FF3F  20                 	db	32
   346  00FF40  20                 	db	32
   347  00FF41  20                 	db	32
   348  00FF42  20                 	db	32
   349  00FF43  20                 	db	32
   350  00FF44  20                 	db	32
   351  00FF45  20                 	db	32
   352  00FF46  20                 	db	32
   353  00FF47  20                 	db	32
   354  00FF48  20                 	db	32
   355  00FF49  20                 	db	32
   356  00FF4A  20                 	db	32
   357  00FF4B  20                 	db	32
   358  00FF4C  20                 	db	32
   359  00FF4D  20                 	db	32
   360  00FF4E  00                 	db	0
   361  00FF4F                     STR_7:
   362  00FF4F  20                 	db	32
   363  00FF50  20                 	db	32
   364  00FF51  20                 	db	32
   365  00FF52  69                 	db	105	;'i'
   366  00FF53  6E                 	db	110	;'n'
   367  00FF54  20                 	db	32
   368  00FF55  70                 	db	112	;'p'
   369  00FF56  72                 	db	114	;'r'
   370  00FF57  6F                 	db	111	;'o'
   371  00FF58  67                 	db	103	;'g'
   372  00FF59  72                 	db	114	;'r'
   373  00FF5A  65                 	db	101	;'e'
   374  00FF5B  73                 	db	115	;'s'
   375  00FF5C  73                 	db	115	;'s'
   376  00FF5D  20                 	db	32
   377  00FF5E  20                 	db	32
   378  00FF5F  00                 	db	0
   379  00FF60                     STR_6:
   380  00FF60  20                 	db	32
   381  00FF61  20                 	db	32
   382  00FF62  69                 	db	105	;'i'
   383  00FF63  73                 	db	115	;'s'
   384  00FF64  20                 	db	32
   385  00FF65  63                 	db	99	;'c'
   386  00FF66  75                 	db	117	;'u'
   387  00FF67  72                 	db	114	;'r'
   388  00FF68  72                 	db	114	;'r'
   389  00FF69  65                 	db	101	;'e'
   390  00FF6A  6E                 	db	110	;'n'
   391  00FF6B  74                 	db	116	;'t'
   392  00FF6C  6C                 	db	108	;'l'
   393  00FF6D  79                 	db	121	;'y'
   394  00FF6E  20                 	db	32
   395  00FF6F  20                 	db	32
   396  00FF70  00                 	db	0
   397  00FF71                     STR_5:
   398  00FF71  20                 	db	32
   399  00FF72  20                 	db	32
   400  00FF73  54                 	db	84	;'T'
   401  00FF74  68                 	db	104	;'h'
   402  00FF75  65                 	db	101	;'e'
   403  00FF76  20                 	db	32
   404  00FF77  6F                 	db	111	;'o'
   405  00FF78  70                 	db	112	;'p'
   406  00FF79  65                 	db	101	;'e'
   407  00FF7A  72                 	db	114	;'r'
   408  00FF7B  61                 	db	97	;'a'
   409  00FF7C  74                 	db	116	;'t'
   410  00FF7D  69                 	db	105	;'i'
   411  00FF7E  6F                 	db	111	;'o'
   412  00FF7F  6E                 	db	110	;'n'
   413  00FF80  20                 	db	32
   414  00FF81  00                 	db	0
   415  00FF82                     STR_11:
   416  00FF82  31                 	db	49	;'1'
   417  00FF83  3A                 	db	58	;':'
   418  00FF84  20                 	db	32
   419  00FF85  47                 	db	71	;'G'
   420  00FF86  65                 	db	101	;'e'
   421  00FF87  6E                 	db	110	;'n'
   422  00FF88  65                 	db	101	;'e'
   423  00FF89  72                 	db	114	;'r'
   424  00FF8A  61                 	db	97	;'a'
   425  00FF8B  6C                 	db	108	;'l'
   426  00FF8C  20                 	db	32
   427  00FF8D  49                 	db	73	;'I'
   428  00FF8E  6E                 	db	110	;'n'
   429  00FF8F  66                 	db	102	;'f'
   430  00FF90  6F                 	db	111	;'o'
   431  00FF91  20                 	db	32
   432  00FF92  00                 	db	0
   433  00FF93                     STR_12:
   434  00FF93  32                 	db	50	;'2'
   435  00FF94  3A                 	db	58	;':'
   436  00FF95  20                 	db	32
   437  00FF96  50                 	db	80	;'P'
   438  00FF97  6F                 	db	111	;'o'
   439  00FF98  6C                 	db	108	;'l'
   440  00FF99  65                 	db	101	;'e'
   441  00FF9A  20                 	db	32
   442  00FF9B  44                 	db	68	;'D'
   443  00FF9C  65                 	db	101	;'e'
   444  00FF9D  74                 	db	116	;'t'
   445  00FF9E  61                 	db	97	;'a'
   446  00FF9F  69                 	db	105	;'i'
   447  00FFA0  6C                 	db	108	;'l'
   448  00FFA1  73                 	db	115	;'s'
   449  00FFA2  20                 	db	32
   450  00FFA3  00                 	db	0
   451  00FFA4                     STR_4:
   452  00FFA4  2D                 	db	45
   453  00FFA5  2D                 	db	45
   454  00FFA6  2D                 	db	45
   455  00FFA7  2D                 	db	45
   456  00FFA8  30                 	db	48	;'0'
   457  00FFA9  3A                 	db	58	;':'
   458  00FFAA  53                 	db	83	;'S'
   459  00FFAB  54                 	db	84	;'T'
   460  00FFAC  41                 	db	65	;'A'
   461  00FFAD  52                 	db	82	;'R'
   462  00FFAE  54                 	db	84	;'T'
   463  00FFAF  2D                 	db	45
   464  00FFB0  2D                 	db	45
   465  00FFB1  2D                 	db	45
   466  00FFB2  2D                 	db	45
   467  00FFB3  2D                 	db	45
   468  00FFB4  00                 	db	0
   469  00FFB5                     STR_14:
   470  00FFB5  2D                 	db	45
   471  00FFB6  2D                 	db	45
   472  00FFB7  2D                 	db	45
   473  00FFB8  2D                 	db	45
   474  00FFB9  2D                 	db	45
   475  00FFBA  30                 	db	48	;'0'
   476  00FFBB  3A                 	db	58	;':'
   477  00FFBC  44                 	db	68	;'D'
   478  00FFBD  6F                 	db	111	;'o'
   479  00FFBE  6E                 	db	110	;'n'
   480  00FFBF  65                 	db	101	;'e'
   481  00FFC0  2D                 	db	45
   482  00FFC1  2D                 	db	45
   483  00FFC2  2D                 	db	45
   484  00FFC3  2D                 	db	45
   485  00FFC4  2D                 	db	45
   486  00FFC5  00                 	db	0
   487  00FFC6                     STR_18:
   488  00FFC6  2D                 	db	45
   489  00FFC7  2D                 	db	45
   490  00FFC8  2D                 	db	45
   491  00FFC9  2D                 	db	45
   492  00FFCA  2D                 	db	45
   493  00FFCB  30                 	db	48	;'0'
   494  00FFCC  3A                 	db	58	;':'
   495  00FFCD  4D                 	db	77	;'M'
   496  00FFCE  65                 	db	101	;'e'
   497  00FFCF  6E                 	db	110	;'n'
   498  00FFD0  75                 	db	117	;'u'
   499  00FFD1  2D                 	db	45
   500  00FFD2  2D                 	db	45
   501  00FFD3  2D                 	db	45
   502  00FFD4  2D                 	db	45
   503  00FFD5  2D                 	db	45
   504  00FFD6  00                 	db	0
   505  00FFD7                     STR_22:
   506  00FFD7  3C                 	db	60	;'<'
   507  00FFD8  2A                 	db	42
   508  00FFD9  20                 	db	32
   509  00FFDA  20                 	db	32
   510  00FFDB  20                 	db	32
   511  00FFDC  30                 	db	48	;'0'
   512  00FFDD  3A                 	db	58	;':'
   513  00FFDE  4D                 	db	77	;'M'
   514  00FFDF  65                 	db	101	;'e'
   515  00FFE0  6E                 	db	110	;'n'
   516  00FFE1  75                 	db	117	;'u'
   517  00FFE2  20                 	db	32
   518  00FFE3  20                 	db	32
   519  00FFE4  20                 	db	32
   520  00FFE5  23                 	db	35
   521  00FFE6  3E                 	db	62	;'>'
   522  00FFE7  00                 	db	0
   523  00FFE8                     STR_1:
   524  00FFE8  54                 	db	84	;'T'
   525  00FFE9  65                 	db	101	;'e'
   526  00FFEA  61                 	db	97	;'a'
   527  00FFEB  6D                 	db	109	;'m'
   528  00FFEC  20                 	db	32
   529  00FFED  33                 	db	51	;'3'
   530  00FFEE  31                 	db	49	;'1'
   531  00FFEF  20                 	db	32
   532  00FFF0  20                 	db	32
   533  00FFF1  20                 	db	32
   534  00FFF2  20                 	db	32
   535  00FFF3  20                 	db	32
   536  00FFF4  54                 	db	84	;'T'
   537  00FFF5  49                 	db	73	;'I'
   538  00FFF6  52                 	db	82	;'R'
   539  00FFF7  45                 	db	69	;'E'
   540  00FFF8  00                 	db	0
   541  00FFF9                     STR_9:
   542  00FFF9  25                 	db	37
   543  00FFFA  30                 	db	48	;'0'
   544  00FFFB  32                 	db	50	;'2'
   545  00FFFC  78                 	db	120	;'x'
   546  00FFFD  00                 	db	0
   547  0000                     
   548                           ; #config settings
   549  00FFFE  00                 	db	0	; dummy byte at the end
   550  0000                     
   551                           	psect	cinit
   552  001908                     __pcinit:
   553                           	opt callstack 0
   554  001908                     start_initialization:
   555                           	opt callstack 0
   556  001908                     __initialization:
   557                           	opt callstack 0
   558                           
   559                           ; Clear objects allocated to BANK1 (75 bytes)
   560  001908  EE01  F000         	lfsr	0,__pbssBANK1
   561  00190C  0E4B               	movlw	75
   562  00190E                     clear_0:
   563  00190E  6AEE               	clrf	postinc0,c
   564  001910  06E8               	decf	wreg,f,c
   565  001912  E1FD               	bnz	clear_0
   566                           
   567                           ; Clear objects allocated to BANK0 (46 bytes)
   568  001914  EE00  F080         	lfsr	0,__pbssBANK0
   569  001918  0E2E               	movlw	46
   570  00191A                     clear_1:
   571  00191A  6AEE               	clrf	postinc0,c
   572  00191C  06E8               	decf	wreg,f,c
   573  00191E  E1FD               	bnz	clear_1
   574  001920                     end_of_initialization:
   575                           	opt callstack 0
   576  001920                     __end_of__initialization:
   577                           	opt callstack 0
   578  001920  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   579  001922  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   580  001924  0E00               	movlw	low (__Lmediumconst shr (0+16))
   581  001926  6EF8               	movwf	tblptru,c
   582  001928  0100               	movlb	0
   583  00192A  EFE1  F001         	goto	_main	;jump to C main() function
   584                           
   585                           	psect	bssBANK0
   586  000080                     __pbssBANK0:
   587                           	opt callstack 0
   588  000080                     _nout:
   589                           	opt callstack 0
   590  000080                     	ds	2
   591  000082                     _width:
   592                           	opt callstack 0
   593  000082                     	ds	2
   594  000084                     _prec:
   595                           	opt callstack 0
   596  000084                     	ds	2
   597  000086                     _flags:
   598                           	opt callstack 0
   599  000086                     	ds	2
   600  000088                     _totalTime:
   601                           	opt callstack 0
   602  000088                     	ds	2
   603  00008A                     _currPole:
   604                           	opt callstack 0
   605  00008A                     	ds	1
   606  00008B                     _poleCount:
   607                           	opt callstack 0
   608  00008B                     	ds	1
   609  00008C                     _tiresSupp:
   610                           	opt callstack 0
   611  00008C                     	ds	1
   612  00008D                     _key_was_pressed:
   613                           	opt callstack 0
   614  00008D                     	ds	1
   615  00008E                     _dbuf:
   616                           	opt callstack 0
   617  00008E                     	ds	32
   618                           
   619                           	psect	bssBANK1
   620  000100                     __pbssBANK1:
   621                           	opt callstack 0
   622  000100                     _poleInfoArr:
   623                           	opt callstack 0
   624  000100                     	ds	75
   625                           
   626                           	psect	cstackBANK0
   627  0000AE                     __pcstackBANK0:
   628                           	opt callstack 0
   629  0000AE                     ??_scrDonePoleDet:
   630  0000AE                     showTime@i:
   631                           	opt callstack 0
   632  0000AE                     scrRunning@i:
   633                           	opt callstack 0
   634                           
   635                           ; 2 bytes @ 0x0
   636  0000AE                     	ds	3
   637  0000B1                     _scrDonePoleDet$1344:
   638                           	opt callstack 0
   639                           
   640                           ; 2 bytes @ 0x3
   641  0000B1                     	ds	2
   642  0000B3                     _scrDonePoleDet$1345:
   643                           	opt callstack 0
   644                           
   645                           ; 2 bytes @ 0x5
   646  0000B3                     	ds	2
   647  0000B5                     _scrDonePoleDet$1343:
   648                           	opt callstack 0
   649                           
   650                           ; 2 bytes @ 0x7
   651  0000B5                     	ds	2
   652  0000B7                     ??_main:
   653                           
   654                           ; 1 bytes @ 0x9
   655  0000B7                     	ds	2
   656  0000B9                     main@time:
   657                           	opt callstack 0
   658                           
   659                           ; 7 bytes @ 0xB
   660  0000B9                     	ds	7
   661  0000C0                     main@startTimeInt:
   662                           	opt callstack 0
   663                           
   664                           ; 3 bytes @ 0x12
   665  0000C0                     	ds	3
   666  0000C3                     main@ticks:
   667                           	opt callstack 0
   668                           
   669                           ; 2 bytes @ 0x15
   670  0000C3                     	ds	2
   671  0000C5                     main@i:
   672                           	opt callstack 0
   673                           
   674                           ; 2 bytes @ 0x17
   675  0000C5                     	ds	2
   676  0000C7                     main@keypress:
   677                           	opt callstack 0
   678                           
   679                           ; 1 bytes @ 0x19
   680  0000C7                     	ds	1
   681  0000C8                     main@dispMode:
   682                           	opt callstack 0
   683                           
   684                           ; 2 bytes @ 0x1A
   685  0000C8                     	ds	2
   686                           
   687                           	psect	cstackCOMRAM
   688  000001                     __pcstackCOMRAM:
   689                           	opt callstack 0
   690  000001                     ??_I2C_Master_Wait:
   691  000001                     ?_strlen:
   692                           	opt callstack 0
   693  000001                     ?_isupper:
   694                           	opt callstack 0
   695  000001                     ?_isalpha:
   696                           	opt callstack 0
   697  000001                     ?_isdigit:
   698                           	opt callstack 0
   699  000001                     ?_isspace:
   700                           	opt callstack 0
   701  000001                     ?_islower:
   702                           	opt callstack 0
   703  000001                     ?___wmul:
   704                           	opt callstack 0
   705  000001                     ?___lldiv:
   706                           	opt callstack 0
   707  000001                     ?___aodiv:
   708                           	opt callstack 0
   709  000001                     ?___aomod:
   710                           	opt callstack 0
   711  000001                     pulse_e@interruptState:
   712                           	opt callstack 0
   713  000001                     ___wmul@multiplier:
   714                           	opt callstack 0
   715  000001                     isalpha@c:
   716                           	opt callstack 0
   717  000001                     isdigit@c:
   718                           	opt callstack 0
   719  000001                     isspace@c:
   720                           	opt callstack 0
   721  000001                     isupper@c:
   722                           	opt callstack 0
   723  000001                     strlen@s:
   724                           	opt callstack 0
   725  000001                     islower@c:
   726                           	opt callstack 0
   727  000001                     ___lldiv@dividend:
   728                           	opt callstack 0
   729  000001                     ___aodiv@dividend:
   730                           	opt callstack 0
   731  000001                     ___aomod@dividend:
   732                           	opt callstack 0
   733                           
   734                           ; 8 bytes @ 0x0
   735  000001                     	ds	1
   736  000002                     I2C_Master_Read@ackBit:
   737                           	opt callstack 0
   738  000002                     send_nibble@data:
   739                           	opt callstack 0
   740  000002                     I2C_Master_Write@byteToWrite:
   741                           	opt callstack 0
   742                           
   743                           ; 2 bytes @ 0x1
   744  000002                     	ds	1
   745  000003                     ??_isupper:
   746  000003                     ??_isalpha:
   747  000003                     ??_isdigit:
   748  000003                     ??_isspace:
   749  000003                     ??_islower:
   750  000003                     I2C_Master_Read@receivedByte:
   751                           	opt callstack 0
   752  000003                     send_byte@data:
   753                           	opt callstack 0
   754  000003                     ___wmul@multiplicand:
   755                           	opt callstack 0
   756  000003                     strlen@a:
   757                           	opt callstack 0
   758                           
   759                           ; 2 bytes @ 0x2
   760  000003                     	ds	1
   761  000004                     lcdInst@data:
   762                           	opt callstack 0
   763  000004                     putch@data:
   764                           	opt callstack 0
   765  000004                     getTime@pTime:
   766                           	opt callstack 0
   767                           
   768                           ; 2 bytes @ 0x3
   769  000004                     	ds	1
   770  000005                     ??_initLCD:
   771  000005                     ___wmul@product:
   772                           	opt callstack 0
   773  000005                     fputc@c:
   774                           	opt callstack 0
   775  000005                     ___lldiv@divisor:
   776                           	opt callstack 0
   777                           
   778                           ; 4 bytes @ 0x4
   779  000005                     	ds	1
   780  000006                     getTime@i:
   781                           	opt callstack 0
   782                           
   783                           ; 1 bytes @ 0x5
   784  000006                     	ds	1
   785  000007                     ?_toupper:
   786                           	opt callstack 0
   787  000007                     ?___awdiv:
   788                           	opt callstack 0
   789  000007                     ?___awmod:
   790                           	opt callstack 0
   791  000007                     _isspace$1034:
   792                           	opt callstack 0
   793  000007                     ___awdiv@dividend:
   794                           	opt callstack 0
   795  000007                     ___awmod@dividend:
   796                           	opt callstack 0
   797  000007                     fputc@fp:
   798                           	opt callstack 0
   799  000007                     toupper@c:
   800                           	opt callstack 0
   801                           
   802                           ; 2 bytes @ 0x6
   803  000007                     	ds	1
   804  000008                     ?_atoi:
   805                           	opt callstack 0
   806  000008                     atoi@s:
   807                           	opt callstack 0
   808                           
   809                           ; 2 bytes @ 0x7
   810  000008                     	ds	1
   811  000009                     ??_fputc:
   812  000009                     ??_toupper:
   813  000009                     ___awdiv@divisor:
   814                           	opt callstack 0
   815  000009                     ___awmod@divisor:
   816                           	opt callstack 0
   817  000009                     ___lldiv@quotient:
   818                           	opt callstack 0
   819  000009                     ___aodiv@divisor:
   820                           	opt callstack 0
   821  000009                     ___aomod@divisor:
   822                           	opt callstack 0
   823                           
   824                           ; 8 bytes @ 0x8
   825  000009                     	ds	1
   826  00000A                     ??_atoi:
   827                           
   828                           ; 1 bytes @ 0x9
   829  00000A                     	ds	1
   830  00000B                     ___awdiv@counter:
   831                           	opt callstack 0
   832  00000B                     ___awmod@counter:
   833                           	opt callstack 0
   834                           
   835                           ; 1 bytes @ 0xA
   836  00000B                     	ds	1
   837  00000C                     ___awdiv@sign:
   838                           	opt callstack 0
   839  00000C                     ___awmod@sign:
   840                           	opt callstack 0
   841                           
   842                           ; 1 bytes @ 0xB
   843  00000C                     	ds	1
   844  00000D                     ___lldiv@counter:
   845                           	opt callstack 0
   846  00000D                     ___awdiv@quotient:
   847                           	opt callstack 0
   848  00000D                     _toupper$1099:
   849                           	opt callstack 0
   850                           
   851                           ; 2 bytes @ 0xC
   852  00000D                     	ds	1
   853  00000E                     atoi@neg:
   854                           	opt callstack 0
   855  00000E                     fputs@s:
   856                           	opt callstack 0
   857  00000E                     I2C_Master_Init@clockFreq:
   858                           	opt callstack 0
   859                           
   860                           ; 4 bytes @ 0xD
   861  00000E                     	ds	2
   862  000010                     _atoi$1007:
   863                           	opt callstack 0
   864  000010                     fputs@fp:
   865                           	opt callstack 0
   866                           
   867                           ; 2 bytes @ 0xF
   868  000010                     	ds	1
   869  000011                     ___aodiv@counter:
   870                           	opt callstack 0
   871  000011                     ___aomod@counter:
   872                           	opt callstack 0
   873                           
   874                           ; 1 bytes @ 0x10
   875  000011                     	ds	1
   876  000012                     ??_I2C_Master_Init:
   877  000012                     ___aodiv@sign:
   878                           	opt callstack 0
   879  000012                     ___aomod@sign:
   880                           	opt callstack 0
   881  000012                     fputs@c:
   882                           	opt callstack 0
   883  000012                     _atoi$1009:
   884                           	opt callstack 0
   885                           
   886                           ; 2 bytes @ 0x11
   887  000012                     	ds	1
   888  000013                     ?_abs:
   889                           	opt callstack 0
   890  000013                     abs@a:
   891                           	opt callstack 0
   892  000013                     fputs@i:
   893                           	opt callstack 0
   894  000013                     ___aodiv@quotient:
   895                           	opt callstack 0
   896                           
   897                           ; 8 bytes @ 0x12
   898  000013                     	ds	1
   899  000014                     _atoi$1008:
   900                           	opt callstack 0
   901                           
   902                           ; 1 bytes @ 0x13
   903  000014                     	ds	1
   904  000015                     ??_abs:
   905  000015                     ?_pad:
   906                           	opt callstack 0
   907  000015                     pad@fp:
   908                           	opt callstack 0
   909  000015                     atoi@n:
   910                           	opt callstack 0
   911                           
   912                           ; 2 bytes @ 0x14
   913  000015                     	ds	2
   914  000017                     pad@buf:
   915                           	opt callstack 0
   916                           
   917                           ; 2 bytes @ 0x16
   918  000017                     	ds	2
   919  000019                     pad@p:
   920                           	opt callstack 0
   921                           
   922                           ; 2 bytes @ 0x18
   923  000019                     	ds	2
   924  00001B                     ??_pad:
   925                           
   926                           ; 1 bytes @ 0x1A
   927  00001B                     	ds	1
   928  00001C                     pad@i:
   929                           	opt callstack 0
   930                           
   931                           ; 2 bytes @ 0x1B
   932  00001C                     	ds	2
   933  00001E                     pad@w:
   934                           	opt callstack 0
   935                           
   936                           ; 2 bytes @ 0x1D
   937  00001E                     	ds	2
   938  000020                     ?_dtoa:
   939                           	opt callstack 0
   940  000020                     ?_xtoa:
   941                           	opt callstack 0
   942  000020                     dtoa@fp:
   943                           	opt callstack 0
   944  000020                     xtoa@fp:
   945                           	opt callstack 0
   946                           
   947                           ; 2 bytes @ 0x1F
   948  000020                     	ds	2
   949  000022                     dtoa@d:
   950                           	opt callstack 0
   951  000022                     xtoa@d:
   952                           	opt callstack 0
   953                           
   954                           ; 8 bytes @ 0x21
   955  000022                     	ds	8
   956  00002A                     ??_dtoa:
   957  00002A                     xtoa@x:
   958                           	opt callstack 0
   959                           
   960                           ; 1 bytes @ 0x29
   961  00002A                     	ds	1
   962  00002B                     ??_xtoa:
   963                           
   964                           ; 1 bytes @ 0x2A
   965  00002B                     	ds	7
   966  000032                     _dtoa$523:
   967                           	opt callstack 0
   968                           
   969                           ; 2 bytes @ 0x31
   970  000032                     	ds	1
   971  000033                     _xtoa$534:
   972                           	opt callstack 0
   973                           
   974                           ; 2 bytes @ 0x32
   975  000033                     	ds	1
   976  000034                     dtoa@p:
   977                           	opt callstack 0
   978                           
   979                           ; 2 bytes @ 0x33
   980  000034                     	ds	1
   981  000035                     _xtoa$535:
   982                           	opt callstack 0
   983                           
   984                           ; 2 bytes @ 0x34
   985  000035                     	ds	1
   986  000036                     dtoa@w:
   987                           	opt callstack 0
   988                           
   989                           ; 2 bytes @ 0x35
   990  000036                     	ds	1
   991  000037                     xtoa@p:
   992                           	opt callstack 0
   993                           
   994                           ; 2 bytes @ 0x36
   995  000037                     	ds	1
   996  000038                     dtoa@s:
   997                           	opt callstack 0
   998                           
   999                           ; 2 bytes @ 0x37
  1000  000038                     	ds	1
  1001  000039                     xtoa@w:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x38
  1005  000039                     	ds	1
  1006  00003A                     dtoa@n:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 8 bytes @ 0x39
  1010  00003A                     	ds	1
  1011  00003B                     xtoa@n:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 8 bytes @ 0x3A
  1015  00003B                     	ds	7
  1016  000042                     dtoa@i:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x41
  1020  000042                     	ds	1
  1021  000043                     xtoa@i:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x42
  1025  000043                     	ds	2
  1026  000045                     xtoa@c:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x44
  1030  000045                     	ds	2
  1031  000047                     ?_vfpfcnvrt:
  1032                           	opt callstack 0
  1033  000047                     vfpfcnvrt@fp:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x46
  1037  000047                     	ds	2
  1038  000049                     vfpfcnvrt@fmt:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x48
  1042  000049                     	ds	2
  1043  00004B                     vfpfcnvrt@ap:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x4A
  1047  00004B                     	ds	2
  1048  00004D                     ??_vfpfcnvrt:
  1049                           
  1050                           ; 1 bytes @ 0x4C
  1051  00004D                     	ds	4
  1052  000051                     vfpfcnvrt@ll:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 8 bytes @ 0x50
  1056  000051                     	ds	8
  1057  000059                     vfpfcnvrt@llu:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 8 bytes @ 0x58
  1061  000059                     	ds	8
  1062  000061                     vfpfcnvrt@done:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x60
  1066  000061                     	ds	2
  1067  000063                     _vfpfcnvrt$549:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x62
  1071  000063                     	ds	2
  1072  000065                     vfpfcnvrt@c:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x64
  1076  000065                     	ds	1
  1077  000066                     ?_vfprintf:
  1078                           	opt callstack 0
  1079  000066                     vfprintf@fp:
  1080                           	opt callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x65
  1083  000066                     	ds	2
  1084  000068                     vfprintf@fmt:
  1085                           	opt callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x67
  1088  000068                     	ds	2
  1089  00006A                     vfprintf@ap:
  1090                           	opt callstack 0
  1091                           
  1092                           ; 2 bytes @ 0x69
  1093  00006A                     	ds	2
  1094  00006C                     vfprintf@cfmt:
  1095                           	opt callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x6B
  1098  00006C                     	ds	2
  1099  00006E                     ?_printf:
  1100                           	opt callstack 0
  1101  00006E                     printf@fmt:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x6D
  1105  00006E                     	ds	8
  1106  000076                     
  1107                           ; 1 bytes @ 0x75
  1108  000076                     	ds	2
  1109  000078                     printf@ap:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x77
  1113  000078                     	ds	2
  1114  00007A                     ??_scrDoneMain:
  1115  00007A                     showTime@pTime:
  1116                           	opt callstack 0
  1117  00007A                     scrRunning@time:
  1118                           	opt callstack 0
  1119  00007A                     scrDoneGen@time:
  1120                           	opt callstack 0
  1121  00007A                     scrDonePoleDet@poleData:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x79
  1125  00007A                     	ds	2
  1126  00007C                     ??_showTime:
  1127  00007C                     ??_scrRunning:
  1128  00007C                     scrDoneGen@tireCount:
  1129                           	opt callstack 0
  1130  00007C                     scrDonePoleDet@currPole:
  1131                           	opt callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x7B
  1134  00007C                     	ds	1
  1135  00007D                     scrDoneGen@poles:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x7C
  1139  00007D                     	ds	1
  1140  00007E                     ??_scrDoneGen:
  1141                           
  1142                           ; 1 bytes @ 0x7D
  1143  00007E                     	ds	1
  1144                           
  1145 ;;
  1146 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1147 ;;
  1148 ;; *************** function _main *****************
  1149 ;; Defined at:
  1150 ;;		line 47 in file "main.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;  i               2   23[BANK0 ] unsigned int 
  1155 ;;  keypress        1   25[BANK0 ] unsigned char 
  1156 ;;  time            7   11[BANK0 ] unsigned char [7]
  1157 ;;  startTimeInt    3   18[BANK0 ] unsigned char [3]
  1158 ;;  dispMode        2   26[BANK0 ] int 
  1159 ;;  ticks           2   21[BANK0 ] int 
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1170 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1171 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1172 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1173 ;;Total ram usage:       19 bytes
  1174 ;; Hardware stack levels required when called:   13
  1175 ;; This function calls:
  1176 ;;		_I2C_Master_Init
  1177 ;;		_getTime
  1178 ;;		_initLCD
  1179 ;;		_scrDoneGen
  1180 ;;		_scrDoneMain
  1181 ;;		_scrDonePoleDet
  1182 ;;		_scrRunning
  1183 ;;		_showTime
  1184 ;; This function is called by:
  1185 ;;		Startup code after reset
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text0
  1190  0003C2                     __ptext0:
  1191                           	opt callstack 0
  1192  0003C2                     _main:
  1193                           	opt callstack 18
  1194                           
  1195                           ;main.c: 51:     LATD = 0x00;
  1196                           
  1197                           ;incstack = 0
  1198  0003C2  0E00               	movlw	0
  1199  0003C4  6E8C               	movwf	3980,c	;volatile
  1200                           
  1201                           ;main.c: 52:     TRISD = 0x00;
  1202  0003C6  0E00               	movlw	0
  1203  0003C8  6E95               	movwf	3989,c	;volatile
  1204                           
  1205                           ;main.c: 53:     ADCON1 = 0b00001111;
  1206  0003CA  0E0F               	movlw	15
  1207  0003CC  6EC1               	movwf	4033,c	;volatile
  1208                           
  1209                           ;main.c: 54:     INT1IE = 1;
  1210  0003CE  86F0               	bsf	4080,3,c	;volatile
  1211                           
  1212                           ;main.c: 55:     (INTCONbits.GIE = 1);
  1213  0003D0  8EF2               	bsf	4082,7,c	;volatile
  1214                           
  1215                           ;main.c: 56:     initLCD();
  1216  0003D2  EC8F  F00A         	call	_initLCD	;wreg free
  1217                           
  1218                           ;main.c: 60:     I2C_Master_Init(100000);
  1219  0003D6  0EA0               	movlw	160
  1220  0003D8  6E0E               	movwf	I2C_Master_Init@clockFreq,c
  1221  0003DA  0E86               	movlw	134
  1222  0003DC  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
  1223  0003DE  0E01               	movlw	1
  1224  0003E0  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
  1225  0003E2  0E00               	movlw	0
  1226  0003E4  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
  1227  0003E6  ECF9  F00A         	call	_I2C_Master_Init	;wreg free
  1228                           
  1229                           ;main.c: 61:     unsigned char time[7];;main.c: 62:     unsigned char startTimeInt[3];;m
      +                          ain.c: 63:         int dispMode = 0;
  1230  0003EA  0E00               	movlw	0
  1231  0003EC  0100               	movlb	0	; () banked
  1232  0003EE  6FC9               	movwf	(main@dispMode+1)& (0+255),b
  1233  0003F0  0E00               	movlw	0
  1234  0003F2  6FC8               	movwf	main@dispMode& (0+255),b
  1235                           
  1236                           ;main.c: 65:     int ticks = 0;
  1237  0003F4  0E00               	movlw	0
  1238  0003F6  6FC4               	movwf	(main@ticks+1)& (0+255),b
  1239  0003F8  0E00               	movlw	0
  1240  0003FA  6FC3               	movwf	main@ticks& (0+255),b
  1241                           
  1242                           ;main.c: 66: poleInfoArr[0].id = 1;
  1243  0003FC  0E01               	movlw	1
  1244  0003FE  0101               	movlb	1	; () banked
  1245  000400  6F00               	movwf	_poleInfoArr& (0+255),b
  1246                           
  1247                           ;main.c: 67: poleInfoArr[0].pos = 258;
  1248  000402  0E01               	movlw	1
  1249  000404  6F02               	movwf	(_poleInfoArr+2)& (0+255),b
  1250  000406  0E02               	movlw	2
  1251  000408  6F01               	movwf	(_poleInfoArr+1)& (0+255),b
  1252                           
  1253                           ;main.c: 68: poleInfoArr[0].tiresSupp = 1;
  1254  00040A  0E01               	movlw	1
  1255  00040C  6F03               	movwf	(_poleInfoArr+3)& (0+255),b
  1256                           
  1257                           ;main.c: 69: poleInfoArr[0].tiresPresent = 2;
  1258  00040E  0E02               	movlw	2
  1259  000410  6F04               	movwf	(_poleInfoArr+4)& (0+255),b
  1260                           
  1261                           ;main.c: 71: poleInfoArr[1].id = 2;
  1262  000412  0E02               	movlw	2
  1263  000414  6F05               	movwf	(_poleInfoArr+5)& (0+255),b
  1264                           
  1265                           ;main.c: 72: poleInfoArr[1].pos = 285;
  1266  000416  0E01               	movlw	1
  1267  000418  6F07               	movwf	(_poleInfoArr+7)& (0+255),b
  1268  00041A  0E1D               	movlw	29
  1269  00041C  6F06               	movwf	(_poleInfoArr+6)& (0+255),b
  1270                           
  1271                           ;main.c: 73: poleInfoArr[1].tiresSupp = 0;
  1272  00041E  0E00               	movlw	0
  1273  000420  6F08               	movwf	(_poleInfoArr+8)& (0+255),b
  1274                           
  1275                           ;main.c: 74: poleInfoArr[1].tiresPresent = 1;
  1276  000422  0E01               	movlw	1
  1277  000424  6F09               	movwf	(_poleInfoArr+9)& (0+255),b
  1278                           
  1279                           ;main.c: 76: poleInfoArr[2].id = 3;
  1280  000426  0E03               	movlw	3
  1281  000428  6F0A               	movwf	(_poleInfoArr+10)& (0+255),b
  1282                           
  1283                           ;main.c: 77: poleInfoArr[2].pos = 558;
  1284  00042A  0E02               	movlw	2
  1285  00042C  6F0C               	movwf	(_poleInfoArr+12)& (0+255),b
  1286  00042E  0E2E               	movlw	46
  1287  000430  6F0B               	movwf	(_poleInfoArr+11)& (0+255),b
  1288                           
  1289                           ;main.c: 78: poleInfoArr[2].tiresSupp = 2;
  1290  000432  0E02               	movlw	2
  1291  000434  6F0D               	movwf	(_poleInfoArr+13)& (0+255),b
  1292                           
  1293                           ;main.c: 79: poleInfoArr[2].tiresPresent = 2;
  1294  000436  0E02               	movlw	2
  1295  000438  6F0E               	movwf	(_poleInfoArr+14)& (0+255),b
  1296                           
  1297                           ;main.c: 81: poleInfoArr[3].id = 4;
  1298  00043A  0E04               	movlw	4
  1299  00043C  6F0F               	movwf	(_poleInfoArr+15)& (0+255),b
  1300                           
  1301                           ;main.c: 82: poleInfoArr[3].pos = 1038;
  1302  00043E  0E04               	movlw	4
  1303  000440  6F11               	movwf	(_poleInfoArr+17)& (0+255),b
  1304  000442  0E0E               	movlw	14
  1305  000444  6F10               	movwf	(_poleInfoArr+16)& (0+255),b
  1306                           
  1307                           ;main.c: 83: poleInfoArr[3].tiresSupp = 0;
  1308  000446  0E00               	movlw	0
  1309  000448  6F12               	movwf	(_poleInfoArr+18)& (0+255),b
  1310                           
  1311                           ;main.c: 84: poleInfoArr[3].tiresPresent = 2;
  1312  00044A  0E02               	movlw	2
  1313  00044C  6F13               	movwf	(_poleInfoArr+19)& (0+255),b
  1314                           
  1315                           ;main.c: 86: poleCount = 4;
  1316  00044E  0E04               	movlw	4
  1317  000450  0100               	movlb	0	; () banked
  1318  000452  6F8B               	movwf	_poleCount& (0+255),b
  1319  000454                     l84:
  1320                           
  1321                           ;main.c: 89:         if(key_was_pressed){
  1322  000454  0100               	movlb	0	; () banked
  1323  000456  518D               	movf	_key_was_pressed& (0+255),w,b	;volatile
  1324  000458  B4D8               	btfsc	status,2,c
  1325  00045A  D079               	goto	l3053
  1326                           
  1327                           ; BSR set to: 0
  1328                           ;main.c: 90:             key_was_pressed = 0;
  1329  00045C  0E00               	movlw	0
  1330  00045E  6F8D               	movwf	_key_was_pressed& (0+255),b	;volatile
  1331                           
  1332                           ; BSR set to: 0
  1333                           ;main.c: 91:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  1334  000460  3881               	swapf	3969,w,c	;volatile
  1335  000462  0B0F               	andlw	15
  1336  000464  0B0F               	andlw	15
  1337  000466  6FC7               	movwf	main@keypress& (0+255),b
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;main.c: 92:             if (keypress == 0x0D && dispMode == 0) {
  1341  000468  0E0D               	movlw	13
  1342  00046A  19C7               	xorwf	main@keypress& (0+255),w,b
  1343  00046C  A4D8               	btfss	status,2,c
  1344  00046E  D029               	goto	l3015
  1345                           
  1346                           ; BSR set to: 0
  1347  000470  51C8               	movf	main@dispMode& (0+255),w,b
  1348  000472  11C9               	iorwf	(main@dispMode+1)& (0+255),w,b
  1349  000474  A4D8               	btfss	status,2,c
  1350  000476  D025               	goto	l3015
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;main.c: 93:                 getTime(time);
  1354  000478  0EB9               	movlw	low main@time
  1355  00047A  6E04               	movwf	getTime@pTime,c
  1356  00047C  0E00               	movlw	high main@time
  1357  00047E  6E05               	movwf	getTime@pTime+1,c
  1358  000480  ECC4  F00A         	call	_getTime	;wreg free
  1359                           
  1360                           ;main.c: 94:                 for(unsigned int i = 0; i<3; i++){
  1361  000484  0E00               	movlw	0
  1362  000486  0100               	movlb	0	; () banked
  1363  000488  6FC6               	movwf	(main@i+1)& (0+255),b
  1364  00048A  0E00               	movlw	0
  1365  00048C  6FC5               	movwf	main@i& (0+255),b
  1366  00048E                     l3007:
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;main.c: 95:                     startTimeInt[i] = time[i];
  1370  00048E  0EB9               	movlw	low main@time
  1371  000490  25C5               	addwf	main@i& (0+255),w,b
  1372  000492  6ED9               	movwf	fsr2l,c
  1373  000494  0E00               	movlw	high main@time
  1374  000496  21C6               	addwfc	(main@i+1)& (0+255),w,b
  1375  000498  6EDA               	movwf	fsr2h,c
  1376  00049A  0EC0               	movlw	low main@startTimeInt
  1377  00049C  25C5               	addwf	main@i& (0+255),w,b
  1378  00049E  6EE1               	movwf	fsr1l,c
  1379  0004A0  0E00               	movlw	high main@startTimeInt
  1380  0004A2  21C6               	addwfc	(main@i+1)& (0+255),w,b
  1381  0004A4  6EE2               	movwf	fsr1h,c
  1382  0004A6  CFDF FFE7          	movff	indf2,indf1
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;main.c: 96:                 }
  1386  0004AA  4BC5               	infsnz	main@i& (0+255),f,b
  1387  0004AC  2BC6               	incf	(main@i+1)& (0+255),f,b
  1388                           
  1389                           ; BSR set to: 0
  1390  0004AE  51C6               	movf	(main@i+1)& (0+255),w,b
  1391  0004B0  E104               	bnz	u2600
  1392  0004B2  0E03               	movlw	3
  1393  0004B4  5DC5               	subwf	main@i& (0+255),w,b
  1394  0004B6  A0D8               	btfss	status,0,c
  1395  0004B8  D7EA               	goto	l3007
  1396  0004BA                     u2600:
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;main.c: 97:                 dispMode = 1;
  1400  0004BA  0E00               	movlw	0
  1401  0004BC  6FC9               	movwf	(main@dispMode+1)& (0+255),b
  1402  0004BE  0E01               	movlw	1
  1403  0004C0  D045               	goto	L1
  1404  0004C2                     l3015:
  1405                           
  1406                           ; BSR set to: 0
  1407  0004C2  05C8               	decf	main@dispMode& (0+255),w,b
  1408  0004C4  11C9               	iorwf	(main@dispMode+1)& (0+255),w,b
  1409  0004C6  A4D8               	btfss	status,2,c
  1410  0004C8  D004               	goto	l3019
  1411  0004CA                     u2610:
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;main.c: 99:                 dispMode = 2;
  1415  0004CA  0E00               	movlw	0
  1416  0004CC  6FC9               	movwf	(main@dispMode+1)& (0+255),b
  1417  0004CE  0E02               	movlw	2
  1418  0004D0  D03D               	goto	L1
  1419  0004D2                     l3019:
  1420                           
  1421                           ; BSR set to: 0
  1422  0004D2  0E02               	movlw	2
  1423  0004D4  19C8               	xorwf	main@dispMode& (0+255),w,b
  1424  0004D6  11C9               	iorwf	(main@dispMode+1)& (0+255),w,b
  1425  0004D8  A4D8               	btfss	status,2,c
  1426  0004DA  D016               	goto	l3033
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;main.c: 101:                 if (keypress == 0x00){
  1430  0004DC  51C7               	movf	main@keypress& (0+255),w,b
  1431  0004DE  A4D8               	btfss	status,2,c
  1432  0004E0  D004               	goto	l3025
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;main.c: 102:                     dispMode = 3;
  1436  0004E2  0E00               	movlw	0
  1437  0004E4  6FC9               	movwf	(main@dispMode+1)& (0+255),b
  1438  0004E6  0E03               	movlw	3
  1439  0004E8  D031               	goto	L1
  1440  0004EA                     l3025:
  1441                           
  1442                           ; BSR set to: 0
  1443  0004EA  05C7               	decf	main@keypress& (0+255),w,b
  1444  0004EC  A4D8               	btfss	status,2,c
  1445  0004EE  D004               	goto	l3029
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;main.c: 104:                     dispMode = 4;
  1449  0004F0  0E00               	movlw	0
  1450  0004F2  6FC9               	movwf	(main@dispMode+1)& (0+255),b
  1451  0004F4  0E04               	movlw	4
  1452  0004F6  D02A               	goto	L1
  1453  0004F8                     l3029:
  1454                           
  1455                           ; BSR set to: 0
  1456  0004F8  0E0D               	movlw	13
  1457  0004FA  19C7               	xorwf	main@keypress& (0+255),w,b
  1458  0004FC  A4D8               	btfss	status,2,c
  1459  0004FE  D027               	goto	l3053
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;main.c: 106:                     dispMode = 0;
  1463  000500  0E00               	movlw	0
  1464  000502  6FC9               	movwf	(main@dispMode+1)& (0+255),b
  1465  000504  0E00               	movlw	0
  1466  000506  D022               	goto	L1
  1467  000508                     l3033:
  1468                           
  1469                           ; BSR set to: 0
  1470  000508  0E03               	movlw	3
  1471  00050A  19C8               	xorwf	main@dispMode& (0+255),w,b
  1472  00050C  11C9               	iorwf	(main@dispMode+1)& (0+255),w,b
  1473  00050E  A4D8               	btfss	status,2,c
  1474  000510  D005               	goto	l3039
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;main.c: 109:                 if (keypress == 0x0D){
  1478  000512  0E0D               	movlw	13
  1479  000514  19C7               	xorwf	main@keypress& (0+255),w,b
  1480  000516  B4D8               	btfsc	status,2,c
  1481  000518  D7D8               	goto	u2610
  1482  00051A  D019               	goto	l3053
  1483  00051C                     l3039:
  1484                           
  1485                           ; BSR set to: 0
  1486  00051C  0E04               	movlw	4
  1487  00051E  19C8               	xorwf	main@dispMode& (0+255),w,b
  1488  000520  11C9               	iorwf	(main@dispMode+1)& (0+255),w,b
  1489  000522  A4D8               	btfss	status,2,c
  1490  000524  D014               	goto	l3053
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;main.c: 113:                 if (keypress == 0xC){
  1494  000526  0E0C               	movlw	12
  1495  000528  19C7               	xorwf	main@keypress& (0+255),w,b
  1496  00052A  A4D8               	btfss	status,2,c
  1497  00052C  D004               	goto	l3045
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;main.c: 114:                     dispMode = 5;
  1501  00052E  0E00               	movlw	0
  1502  000530  6FC9               	movwf	(main@dispMode+1)& (0+255),b
  1503  000532  0E05               	movlw	5
  1504  000534  D00B               	goto	L1
  1505  000536                     l3045:
  1506                           
  1507                           ; BSR set to: 0
  1508  000536  0E0D               	movlw	13
  1509  000538  19C7               	xorwf	main@keypress& (0+255),w,b
  1510  00053A  B4D8               	btfsc	status,2,c
  1511  00053C  D7C6               	goto	u2610
  1512                           
  1513                           ; BSR set to: 0
  1514  00053E  0E0E               	movlw	14
  1515  000540  19C7               	xorwf	main@keypress& (0+255),w,b
  1516  000542  A4D8               	btfss	status,2,c
  1517  000544  D004               	goto	l3053
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;main.c: 118:                     dispMode = 6;
  1521  000546  0E00               	movlw	0
  1522  000548  6FC9               	movwf	(main@dispMode+1)& (0+255),b
  1523  00054A  0E06               	movlw	6
  1524  00054C                     L1:
  1525  00054C  6FC8               	movwf	main@dispMode& (0+255),b
  1526  00054E                     l3053:
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;main.c: 122:         if (dispMode == 0){
  1530  00054E  51C8               	movf	main@dispMode& (0+255),w,b
  1531  000550  11C9               	iorwf	(main@dispMode+1)& (0+255),w,b
  1532  000552  A4D8               	btfss	status,2,c
  1533  000554  D013               	goto	l3063
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;main.c: 123:             if (ticks == 10){
  1537  000556  0E0A               	movlw	10
  1538  000558  19C3               	xorwf	main@ticks& (0+255),w,b
  1539  00055A  11C4               	iorwf	(main@ticks+1)& (0+255),w,b
  1540  00055C  A4D8               	btfss	status,2,c
  1541  00055E  D00B               	goto	l3061
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;main.c: 124:                 showTime(time);
  1545  000560  0EB9               	movlw	low main@time
  1546  000562  6E7A               	movwf	showTime@pTime,c
  1547  000564  0E00               	movlw	high main@time
  1548  000566  6E7B               	movwf	showTime@pTime+1,c
  1549  000568  ECDE  F006         	call	_showTime	;wreg free
  1550                           
  1551                           ;main.c: 125:                 ticks = 0;
  1552  00056C  0E00               	movlw	0
  1553  00056E  0100               	movlb	0	; () banked
  1554  000570  6FC4               	movwf	(main@ticks+1)& (0+255),b
  1555  000572  0E00               	movlw	0
  1556  000574  6FC3               	movwf	main@ticks& (0+255),b
  1557  000576                     l3061:
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;main.c: 127:             ticks ++;
  1561  000576  4BC3               	infsnz	main@ticks& (0+255),f,b
  1562  000578  2BC4               	incf	(main@ticks+1)& (0+255),f,b
  1563                           
  1564                           ;main.c: 128:         } else if (dispMode == 1){
  1565  00057A  D052               	goto	l116
  1566  00057C                     l3063:
  1567                           
  1568                           ; BSR set to: 0
  1569  00057C  05C8               	decf	main@dispMode& (0+255),w,b
  1570  00057E  11C9               	iorwf	(main@dispMode+1)& (0+255),w,b
  1571  000580  A4D8               	btfss	status,2,c
  1572  000582  D00C               	goto	l3069
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;main.c: 129:             scrRunning(startTimeInt);
  1576  000584  0EC0               	movlw	low main@startTimeInt
  1577  000586  6E7A               	movwf	scrRunning@time,c
  1578  000588  0E00               	movlw	high main@startTimeInt
  1579  00058A  6E7B               	movwf	scrRunning@time+1,c
  1580  00058C  ECB3  F008         	call	_scrRunning	;wreg free
  1581                           
  1582                           ;main.c: 130:             dispMode = 2;
  1583  000590  0E00               	movlw	0
  1584  000592  0100               	movlb	0	; () banked
  1585  000594  6FC9               	movwf	(main@dispMode+1)& (0+255),b
  1586  000596  0E02               	movlw	2
  1587  000598  6FC8               	movwf	main@dispMode& (0+255),b
  1588                           
  1589                           ;main.c: 131:         } else if (dispMode == 2){
  1590  00059A  D042               	goto	l116
  1591  00059C                     l3069:
  1592                           
  1593                           ; BSR set to: 0
  1594  00059C  0E02               	movlw	2
  1595  00059E  19C8               	xorwf	main@dispMode& (0+255),w,b
  1596  0005A0  11C9               	iorwf	(main@dispMode+1)& (0+255),w,b
  1597  0005A2  A4D8               	btfss	status,2,c
  1598  0005A4  D006               	goto	l3075
  1599                           
  1600                           ; BSR set to: 0
  1601                           ;main.c: 132:             scrDoneMain();
  1602  0005A6  EC27  F00B         	call	_scrDoneMain	;wreg free
  1603                           
  1604                           ;main.c: 133:             currPole = 0;
  1605  0005AA  0E00               	movlw	0
  1606  0005AC  0100               	movlb	0	; () banked
  1607  0005AE  6F8A               	movwf	_currPole& (0+255),b
  1608                           
  1609                           ;main.c: 134:         } else if (dispMode == 3){
  1610  0005B0  D037               	goto	l116
  1611  0005B2                     l3075:
  1612                           
  1613                           ; BSR set to: 0
  1614  0005B2  0E03               	movlw	3
  1615  0005B4  19C8               	xorwf	main@dispMode& (0+255),w,b
  1616  0005B6  11C9               	iorwf	(main@dispMode+1)& (0+255),w,b
  1617  0005B8  A4D8               	btfss	status,2,c
  1618  0005BA  D00B               	goto	l3079
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;main.c: 135:             scrDoneGen(totalTime,tiresSupp,poleCount);
  1622  0005BC  0E00               	movlw	0
  1623  0005BE  6E7B               	movwf	scrDoneGen@time+1,c
  1624  0005C0  0E00               	movlw	0
  1625  0005C2  6E7A               	movwf	scrDoneGen@time,c
  1626  0005C4  0E00               	movlw	0
  1627  0005C6  6E7C               	movwf	scrDoneGen@tireCount,c
  1628  0005C8  C08B  F07D         	movff	_poleCount,scrDoneGen@poles
  1629  0005CC  EC22  F00A         	call	_scrDoneGen	;wreg free
  1630                           
  1631                           ;main.c: 136:         } else if (dispMode == 4){
  1632  0005D0  D027               	goto	l116
  1633  0005D2                     l3079:
  1634                           
  1635                           ; BSR set to: 0
  1636  0005D2  0E04               	movlw	4
  1637  0005D4  19C8               	xorwf	main@dispMode& (0+255),w,b
  1638  0005D6  11C9               	iorwf	(main@dispMode+1)& (0+255),w,b
  1639  0005D8  A4D8               	btfss	status,2,c
  1640  0005DA  D00A               	goto	l3083
  1641  0005DC                     u2770:
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;main.c: 137:             scrDonePoleDet(poleInfoArr,currPole);
  1645  0005DC  0E00               	movlw	low _poleInfoArr
  1646  0005DE  6E7A               	movwf	scrDonePoleDet@poleData,c
  1647  0005E0  0E01               	movlw	high _poleInfoArr
  1648  0005E2  6E7B               	movwf	scrDonePoleDet@poleData+1,c
  1649  0005E4  C08A  F07C         	movff	_currPole,scrDonePoleDet@currPole
  1650  0005E8  6A7D               	clrf	scrDonePoleDet@currPole+1,c
  1651  0005EA  EC59  F005         	call	_scrDonePoleDet	;wreg free
  1652                           
  1653                           ;main.c: 138:         } else if (dispMode == 5){
  1654  0005EE  D018               	goto	l116
  1655  0005F0                     l3083:
  1656                           
  1657                           ; BSR set to: 0
  1658  0005F0  0E05               	movlw	5
  1659  0005F2  19C8               	xorwf	main@dispMode& (0+255),w,b
  1660  0005F4  11C9               	iorwf	(main@dispMode+1)& (0+255),w,b
  1661  0005F6  A4D8               	btfss	status,2,c
  1662  0005F8  D008               	goto	l3093
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;main.c: 139:             if (currPole > 0){ currPole -= 1; }
  1666  0005FA  518A               	movf	_currPole& (0+255),w,b
  1667  0005FC  A4D8               	btfss	status,2,c
  1668                           
  1669                           ; BSR set to: 0
  1670  0005FE  078A               	decf	_currPole& (0+255),f,b
  1671  000600                     l3089:
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;main.c: 140:             dispMode = 4;
  1675  000600  0E00               	movlw	0
  1676  000602  6FC9               	movwf	(main@dispMode+1)& (0+255),b
  1677  000604  0E04               	movlw	4
  1678  000606  6FC8               	movwf	main@dispMode& (0+255),b
  1679  000608  D7E9               	goto	u2770
  1680  00060A                     l3093:
  1681                           
  1682                           ; BSR set to: 0
  1683  00060A  0E06               	movlw	6
  1684  00060C  19C8               	xorwf	main@dispMode& (0+255),w,b
  1685  00060E  11C9               	iorwf	(main@dispMode+1)& (0+255),w,b
  1686  000610  A4D8               	btfss	status,2,c
  1687  000612  D006               	goto	l116
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;main.c: 143:             if (currPole < poleCount){ currPole += 1; }
  1691  000614  518B               	movf	_poleCount& (0+255),w,b
  1692  000616  5D8A               	subwf	_currPole& (0+255),w,b
  1693  000618  B0D8               	btfsc	status,0,c
  1694  00061A  D7F2               	goto	l3089
  1695                           
  1696                           ; BSR set to: 0
  1697  00061C  2B8A               	incf	_currPole& (0+255),f,b
  1698  00061E  D7F0               	goto	l3089
  1699  000620                     l116:
  1700                           
  1701                           ;main.c: 147:         _delay((unsigned long)((100)*(10000000/4000.0)));
  1702                           
  1703                           ; BSR set to: 0
  1704  000620  0E02               	movlw	2
  1705  000622  0100               	movlb	0	; () banked
  1706  000624  6FB8               	movwf	(??_main+1)& (0+255),b
  1707  000626  0E45               	movlw	69
  1708  000628  6FB7               	movwf	??_main& (0+255),b
  1709  00062A  0EA9               	movlw	169
  1710  00062C                     u2857:
  1711  00062C  2EE8               	decfsz	wreg,f,c
  1712  00062E  D7FE               	bra	u2857
  1713  000630  2FB7               	decfsz	??_main& (0+255),f,b
  1714  000632  D7FC               	bra	u2857
  1715  000634  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  1716  000636  D7FA               	bra	u2857
  1717  000638  D000               	nop2	
  1718  00063A  D70C               	goto	l84
  1719  00063C                     __end_of_main:
  1720                           	opt callstack 0
  1721                           
  1722 ;; *************** function _showTime *****************
  1723 ;; Defined at:
  1724 ;;		line 11 in file "./standby.h"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  pTime           2  121[COMRAM] PTR unsigned char 
  1727 ;;		 -> main@time(7), 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  i               1    0[BANK0 ] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;Total ram usage:        6 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:   12
  1746 ;; This function calls:
  1747 ;;		_I2C_Master_Read
  1748 ;;		_I2C_Master_Start
  1749 ;;		_I2C_Master_Stop
  1750 ;;		_I2C_Master_Write
  1751 ;;		_lcdInst
  1752 ;;		_printf
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text1
  1759  000DBC                     __ptext1:
  1760                           	opt callstack 0
  1761  000DBC                     _showTime:
  1762                           	opt callstack 18
  1763                           
  1764                           ;./standby.h: 13:     I2C_Master_Start();
  1765                           
  1766                           ;incstack = 0
  1767  000DBC  EC0A  F00D         	call	_I2C_Master_Start	;wreg free
  1768                           
  1769                           ;./standby.h: 14:     I2C_Master_Write(0b11010000);
  1770  000DC0  0E00               	movlw	0
  1771  000DC2  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  1772  000DC4  0ED0               	movlw	208
  1773  000DC6  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  1774  000DC8  EC01  F00D         	call	_I2C_Master_Write	;wreg free
  1775                           
  1776                           ;./standby.h: 15:     I2C_Master_Write(0x00);
  1777  000DCC  0E00               	movlw	0
  1778  000DCE  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  1779  000DD0  0E00               	movlw	0
  1780  000DD2  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  1781  000DD4  EC01  F00D         	call	_I2C_Master_Write	;wreg free
  1782                           
  1783                           ;./standby.h: 16:     I2C_Master_Stop();
  1784  000DD8  EC06  F00D         	call	_I2C_Master_Stop	;wreg free
  1785                           
  1786                           ;./standby.h: 19:     I2C_Master_Start();
  1787  000DDC  EC0A  F00D         	call	_I2C_Master_Start	;wreg free
  1788                           
  1789                           ;./standby.h: 20:     I2C_Master_Write(0b11010001);
  1790  000DE0  0E00               	movlw	0
  1791  000DE2  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  1792  000DE4  0ED1               	movlw	209
  1793  000DE6  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  1794  000DE8  EC01  F00D         	call	_I2C_Master_Write	;wreg free
  1795                           
  1796                           ;./standby.h: 21:     for(unsigned char i = 0; i < 6; i++){
  1797  000DEC  0E00               	movlw	0
  1798  000DEE  0100               	movlb	0	; () banked
  1799  000DF0  6FAE               	movwf	showTime@i& (0+255),b
  1800  000DF2                     l2805:
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;./standby.h: 22:         pTime[i] = I2C_Master_Read(0);
  1804  000DF2  51AE               	movf	showTime@i& (0+255),w,b
  1805  000DF4  247A               	addwf	showTime@pTime,w,c
  1806  000DF6  6ED9               	movwf	fsr2l,c
  1807  000DF8  0E00               	movlw	0
  1808  000DFA  207B               	addwfc	showTime@pTime+1,w,c
  1809  000DFC  6EDA               	movwf	fsr2h,c
  1810  000DFE  0E00               	movlw	0
  1811  000E00  ECBD  F00C         	call	_I2C_Master_Read
  1812  000E04  6EDF               	movwf	indf2,c
  1813                           
  1814                           ;./standby.h: 23:     }
  1815  000E06  0100               	movlb	0	; () banked
  1816  000E08  2BAE               	incf	showTime@i& (0+255),f,b
  1817                           
  1818                           ; BSR set to: 0
  1819  000E0A  0E05               	movlw	5
  1820  000E0C  65AE               	cpfsgt	showTime@i& (0+255),b
  1821  000E0E  D7F1               	goto	l2805
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;./standby.h: 24:     pTime[6] = I2C_Master_Read(1);
  1825  000E10  EE20 F006          	lfsr	2,6
  1826  000E14  507A               	movf	showTime@pTime,w,c
  1827  000E16  26D9               	addwf	fsr2l,f,c
  1828  000E18  507B               	movf	showTime@pTime+1,w,c
  1829  000E1A  22DA               	addwfc	fsr2h,f,c
  1830  000E1C  0E01               	movlw	1
  1831  000E1E  ECBD  F00C         	call	_I2C_Master_Read
  1832  000E22  6EDF               	movwf	indf2,c
  1833                           
  1834                           ;./standby.h: 25:     I2C_Master_Stop();
  1835  000E24  EC06  F00D         	call	_I2C_Master_Stop	;wreg free
  1836                           
  1837                           ;./standby.h: 28:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  1838  000E28  0E80               	movlw	128
  1839  000E2A  ECFB  F00C         	call	_lcdInst
  1840  000E2E  0E07               	movlw	7
  1841  000E30  6E7C               	movwf	??_showTime& (0+255),c
  1842  000E32  0E7D               	movlw	125
  1843  000E34                     u2867:
  1844  000E34  2EE8               	decfsz	wreg,f,c
  1845  000E36  D7FE               	bra	u2867
  1846  000E38  2E7C               	decfsz	??_showTime& (0+255),f,c
  1847  000E3A  D7FC               	bra	u2867
  1848  000E3C  F000               	nop	
  1849                           
  1850                           ;./standby.h: 29:     printf("Team 31     TIRE");
  1851  000E3E  0EE8               	movlw	low STR_1
  1852  000E40  6E6E               	movwf	printf@fmt,c
  1853  000E42  0EFF               	movlw	high STR_1
  1854  000E44  6E6F               	movwf	printf@fmt+1,c
  1855  000E46  EC97  F00C         	call	_printf	;wreg free
  1856  000E4A  0EC0               	movlw	192
  1857  000E4C  ECFB  F00C         	call	_lcdInst
  1858                           
  1859                           ;./standby.h: 31:     printf("    %02x/%02x/%02x    ", pTime[6],pTime[5],pTime[4]);
  1860  000E50  0E99               	movlw	low STR_2
  1861  000E52  6E6E               	movwf	printf@fmt,c
  1862  000E54  0EFE               	movlw	high STR_2
  1863  000E56  6E6F               	movwf	printf@fmt+1,c
  1864  000E58  EE20 F006          	lfsr	2,6
  1865  000E5C  507A               	movf	showTime@pTime,w,c
  1866  000E5E  26D9               	addwf	fsr2l,f,c
  1867  000E60  507B               	movf	showTime@pTime+1,w,c
  1868  000E62  22DA               	addwfc	fsr2h,f,c
  1869  000E64  50DF               	movf	indf2,w,c
  1870  000E66  6E7C               	movwf	??_showTime& (0+255),c
  1871  000E68  507C               	movf	??_showTime,w,c
  1872  000E6A  6E70               	movwf	?_printf+2,c
  1873  000E6C  6A71               	clrf	?_printf+3,c
  1874  000E6E  EE20 F005          	lfsr	2,5
  1875  000E72  507A               	movf	showTime@pTime,w,c
  1876  000E74  26D9               	addwf	fsr2l,f,c
  1877  000E76  507B               	movf	showTime@pTime+1,w,c
  1878  000E78  22DA               	addwfc	fsr2h,f,c
  1879  000E7A  50DF               	movf	indf2,w,c
  1880  000E7C  6E7D               	movwf	(??_showTime+1)& (0+255),c
  1881  000E7E  507D               	movf	??_showTime+1,w,c
  1882  000E80  6E72               	movwf	?_printf+4,c
  1883  000E82  6A73               	clrf	?_printf+5,c
  1884  000E84  EE20 F004          	lfsr	2,4
  1885  000E88  507A               	movf	showTime@pTime,w,c
  1886  000E8A  26D9               	addwf	fsr2l,f,c
  1887  000E8C  507B               	movf	showTime@pTime+1,w,c
  1888  000E8E  22DA               	addwfc	fsr2h,f,c
  1889  000E90  50DF               	movf	indf2,w,c
  1890  000E92  6E7E               	movwf	(??_showTime+2)& (0+255),c
  1891  000E94  507E               	movf	??_showTime+2,w,c
  1892  000E96  6E74               	movwf	?_printf+6,c
  1893  000E98  6A75               	clrf	?_printf+7,c
  1894  000E9A  EC97  F00C         	call	_printf	;wreg free
  1895  000E9E  0E90               	movlw	144
  1896  000EA0  ECFB  F00C         	call	_lcdInst
  1897                           
  1898                           ;./standby.h: 33:     printf("    %02x:%02x:%02x    ", pTime[2],pTime[1],pTime[0]);
  1899  000EA4  0EB0               	movlw	low STR_3
  1900  000EA6  6E6E               	movwf	printf@fmt,c
  1901  000EA8  0EFE               	movlw	high STR_3
  1902  000EAA  6E6F               	movwf	printf@fmt+1,c
  1903  000EAC  EE20 F002          	lfsr	2,2
  1904  000EB0  507A               	movf	showTime@pTime,w,c
  1905  000EB2  26D9               	addwf	fsr2l,f,c
  1906  000EB4  507B               	movf	showTime@pTime+1,w,c
  1907  000EB6  22DA               	addwfc	fsr2h,f,c
  1908  000EB8  50DF               	movf	indf2,w,c
  1909  000EBA  6E7C               	movwf	??_showTime& (0+255),c
  1910  000EBC  507C               	movf	??_showTime,w,c
  1911  000EBE  6E70               	movwf	?_printf+2,c
  1912  000EC0  6A71               	clrf	?_printf+3,c
  1913  000EC2  EE20 F001          	lfsr	2,1
  1914  000EC6  507A               	movf	showTime@pTime,w,c
  1915  000EC8  26D9               	addwf	fsr2l,f,c
  1916  000ECA  507B               	movf	showTime@pTime+1,w,c
  1917  000ECC  22DA               	addwfc	fsr2h,f,c
  1918  000ECE  50DF               	movf	indf2,w,c
  1919  000ED0  6E7D               	movwf	(??_showTime+1)& (0+255),c
  1920  000ED2  507D               	movf	??_showTime+1,w,c
  1921  000ED4  6E72               	movwf	?_printf+4,c
  1922  000ED6  6A73               	clrf	?_printf+5,c
  1923  000ED8  C07A  FFD9         	movff	showTime@pTime,fsr2l
  1924  000EDC  C07B  FFDA         	movff	showTime@pTime+1,fsr2h
  1925  000EE0  50DF               	movf	indf2,w,c
  1926  000EE2  6E7E               	movwf	(??_showTime+2)& (0+255),c
  1927  000EE4  507E               	movf	??_showTime+2,w,c
  1928  000EE6  6E74               	movwf	?_printf+6,c
  1929  000EE8  6A75               	clrf	?_printf+7,c
  1930  000EEA  EC97  F00C         	call	_printf	;wreg free
  1931  000EEE  0ED0               	movlw	208
  1932  000EF0  ECFB  F00C         	call	_lcdInst
  1933                           
  1934                           ;./standby.h: 35:     printf("----0:START-----");
  1935  000EF4  0EA4               	movlw	low STR_4
  1936  000EF6  6E6E               	movwf	printf@fmt,c
  1937  000EF8  0EFF               	movlw	high STR_4
  1938  000EFA  6E6F               	movwf	printf@fmt+1,c
  1939  000EFC  EC97  F00C         	call	_printf	;wreg free
  1940  000F00  0012               	return		;funcret
  1941  000F02                     __end_of_showTime:
  1942                           	opt callstack 0
  1943                           
  1944 ;; *************** function _scrRunning *****************
  1945 ;; Defined at:
  1946 ;;		line 38 in file "./standby.h"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;  time            2  121[COMRAM] PTR unsigned char 
  1949 ;;		 -> main@startTimeInt(3), 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  i               2    0[BANK0 ] unsigned int 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1961 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;Total ram usage:        6 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:   12
  1968 ;; This function calls:
  1969 ;;		_lcdInst
  1970 ;;		_printf
  1971 ;; This function is called by:
  1972 ;;		_main
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           	psect	text2
  1977  001166                     __ptext2:
  1978                           	opt callstack 0
  1979  001166                     _scrRunning:
  1980                           	opt callstack 18
  1981                           
  1982                           ;./standby.h: 39:     unsigned int i;;./standby.h: 40:     { lcdInst(0x80); _delay((unsi
      +                          gned long)((2)*(10000000/4000.0)));};
  1983                           
  1984                           ;incstack = 0
  1985  001166  0E80               	movlw	128
  1986  001168  ECFB  F00C         	call	_lcdInst
  1987  00116C  0E07               	movlw	7
  1988  00116E  6E7C               	movwf	??_scrRunning& (0+255),c
  1989  001170  0E7D               	movlw	125
  1990  001172                     u2877:
  1991  001172  2EE8               	decfsz	wreg,f,c
  1992  001174  D7FE               	bra	u2877
  1993  001176  2E7C               	decfsz	??_scrRunning& (0+255),f,c
  1994  001178  D7FC               	bra	u2877
  1995  00117A  F000               	nop	
  1996                           
  1997                           ;./standby.h: 41:     printf("  The operation ");
  1998  00117C  0E71               	movlw	low STR_5
  1999  00117E  6E6E               	movwf	printf@fmt,c
  2000  001180  0EFF               	movlw	high STR_5
  2001  001182  6E6F               	movwf	printf@fmt+1,c
  2002  001184  EC97  F00C         	call	_printf	;wreg free
  2003  001188  0EC0               	movlw	192
  2004  00118A  ECFB  F00C         	call	_lcdInst
  2005                           
  2006                           ;./standby.h: 43:     printf("  is currently  ");
  2007  00118E  0E60               	movlw	low STR_6
  2008  001190  6E6E               	movwf	printf@fmt,c
  2009  001192  0EFF               	movlw	high STR_6
  2010  001194  6E6F               	movwf	printf@fmt+1,c
  2011  001196  EC97  F00C         	call	_printf	;wreg free
  2012  00119A  0E90               	movlw	144
  2013  00119C  ECFB  F00C         	call	_lcdInst
  2014                           
  2015                           ;./standby.h: 45:     printf("   in progress  ");
  2016  0011A0  0E4F               	movlw	low STR_7
  2017  0011A2  6E6E               	movwf	printf@fmt,c
  2018  0011A4  0EFF               	movlw	high STR_7
  2019  0011A6  6E6F               	movwf	printf@fmt+1,c
  2020  0011A8  EC97  F00C         	call	_printf	;wreg free
  2021  0011AC  0ED0               	movlw	208
  2022  0011AE  ECFB  F00C         	call	_lcdInst
  2023                           
  2024                           ;./standby.h: 47:     printf("                ");
  2025  0011B2  0E3E               	movlw	low STR_8
  2026  0011B4  6E6E               	movwf	printf@fmt,c
  2027  0011B6  0EFF               	movlw	high STR_8
  2028  0011B8  6E6F               	movwf	printf@fmt+1,c
  2029  0011BA  EC97  F00C         	call	_printf	;wreg free
  2030  0011BE  0ED0               	movlw	208
  2031  0011C0  ECFB  F00C         	call	_lcdInst
  2032                           
  2033                           ;./standby.h: 49:     for (i=0; i<13; i++){
  2034  0011C4  0E00               	movlw	0
  2035  0011C6  0100               	movlb	0	; () banked
  2036  0011C8  6FAF               	movwf	(scrRunning@i+1)& (0+255),b
  2037  0011CA  0E00               	movlw	0
  2038  0011CC  6FAE               	movwf	scrRunning@i& (0+255),b
  2039  0011CE                     l2859:
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;./standby.h: 50:         if (i<3){
  2043  0011CE  51AF               	movf	(scrRunning@i+1)& (0+255),w,b
  2044  0011D0  E115               	bnz	l2863
  2045  0011D2  0E03               	movlw	3
  2046  0011D4  5DAE               	subwf	scrRunning@i& (0+255),w,b
  2047  0011D6  B0D8               	btfsc	status,0,c
  2048  0011D8  D011               	goto	l2863
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;./standby.h: 51:             printf("%02x",time[i]);
  2052  0011DA  0EF9               	movlw	low STR_9
  2053  0011DC  6E6E               	movwf	printf@fmt,c
  2054  0011DE  0EFF               	movlw	high STR_9
  2055  0011E0  6E6F               	movwf	printf@fmt+1,c
  2056  0011E2  51AE               	movf	scrRunning@i& (0+255),w,b
  2057  0011E4  247A               	addwf	scrRunning@time,w,c
  2058  0011E6  6ED9               	movwf	fsr2l,c
  2059  0011E8  51AF               	movf	(scrRunning@i+1)& (0+255),w,b
  2060  0011EA  207B               	addwfc	scrRunning@time+1,w,c
  2061  0011EC  6EDA               	movwf	fsr2h,c
  2062  0011EE  50DF               	movf	indf2,w,c
  2063  0011F0  6E7C               	movwf	??_scrRunning& (0+255),c
  2064  0011F2  507C               	movf	??_scrRunning,w,c
  2065  0011F4  6E70               	movwf	?_printf+2,c
  2066  0011F6  6A71               	clrf	?_printf+3,c
  2067  0011F8  EC97  F00C         	call	_printf	;wreg free
  2068  0011FC                     l2863:
  2069                           
  2070                           ;./standby.h: 53:         _delay((unsigned long)((250)*(10000000/4000.0)));
  2071  0011FC  0E04               	movlw	4
  2072  0011FE  6E7D               	movwf	(??_scrRunning+1)& (0+255),c
  2073  001200  0E2C               	movlw	44
  2074  001202  6E7C               	movwf	??_scrRunning& (0+255),c
  2075  001204  0EAC               	movlw	172
  2076  001206                     u2887:
  2077  001206  2EE8               	decfsz	wreg,f,c
  2078  001208  D7FE               	bra	u2887
  2079  00120A  2E7C               	decfsz	??_scrRunning& (0+255),f,c
  2080  00120C  D7FC               	bra	u2887
  2081  00120E  2E7D               	decfsz	(??_scrRunning+1)& (0+255),f,c
  2082  001210  D7FA               	bra	u2887
  2083                           
  2084                           ;./standby.h: 54:         printf("-");
  2085  001212  0EB3               	movlw	low (STR_4+15)
  2086  001214  6E6E               	movwf	printf@fmt,c
  2087  001216  0EFF               	movlw	high (STR_4+15)
  2088  001218  6E6F               	movwf	printf@fmt+1,c
  2089  00121A  EC97  F00C         	call	_printf	;wreg free
  2090                           
  2091                           ;./standby.h: 55:     }
  2092  00121E  0100               	movlb	0	; () banked
  2093  001220  4BAE               	infsnz	scrRunning@i& (0+255),f,b
  2094  001222  2BAF               	incf	(scrRunning@i+1)& (0+255),f,b
  2095  001224  51AF               	movf	(scrRunning@i+1)& (0+255),w,b
  2096  001226  E105               	bnz	u2540
  2097  001228  0E0D               	movlw	13
  2098  00122A  5DAE               	subwf	scrRunning@i& (0+255),w,b
  2099  00122C  B0D8               	btfsc	status,0,c
  2100  00122E  0012               	return	
  2101  001230  D7CE               	goto	l2859
  2102  001232                     u2540:
  2103                           
  2104                           ; BSR set to: 0
  2105  001232  0012               	return		;funcret
  2106  001234                     __end_of_scrRunning:
  2107                           	opt callstack 0
  2108                           
  2109 ;; *************** function _scrDonePoleDet *****************
  2110 ;; Defined at:
  2111 ;;		line 89 in file "./standby.h"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  poleData        2  121[COMRAM] PTR struct poleInfo
  2114 ;;		 -> poleInfoArr(75), 
  2115 ;;  currPole        2  123[COMRAM] int 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2127 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Totals:         4       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;Total ram usage:       13 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:   12
  2134 ;; This function calls:
  2135 ;;		___awdiv
  2136 ;;		___awmod
  2137 ;;		___wmul
  2138 ;;		_lcdInst
  2139 ;;		_printf
  2140 ;; This function is called by:
  2141 ;;		_main
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text3
  2146  000AB2                     __ptext3:
  2147                           	opt callstack 0
  2148  000AB2                     _scrDonePoleDet:
  2149                           	opt callstack 18
  2150                           
  2151                           ;./standby.h: 90:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;incstack = 0
  2155  000AB2  0E80               	movlw	128
  2156  000AB4  ECFB  F00C         	call	_lcdInst
  2157  000AB8  0E07               	movlw	7
  2158  000ABA  0100               	movlb	0	; () banked
  2159  000ABC  6FAE               	movwf	??_scrDonePoleDet& (0+255),b
  2160  000ABE  0E7D               	movlw	125
  2161  000AC0                     u2897:
  2162  000AC0  2EE8               	decfsz	wreg,f,c
  2163  000AC2  D7FE               	bra	u2897
  2164  000AC4  2FAE               	decfsz	??_scrDonePoleDet& (0+255),f,b
  2165  000AC6  D7FC               	bra	u2897
  2166                           
  2167                           ;./standby.h: 91:     printf("Pole%01x Pos:%01d.%03d",
  2168  000AC8  C07C  F001         	movff	scrDonePoleDet@currPole,___wmul@multiplier
  2169  000ACC  C07D  F002         	movff	scrDonePoleDet@currPole+1,___wmul@multiplier+1
  2170  000AD0  0E00               	movlw	0
  2171  000AD2  6E04               	movwf	___wmul@multiplicand+1,c
  2172  000AD4  0E05               	movlw	5
  2173  000AD6  6E03               	movwf	___wmul@multiplicand,c
  2174  000AD8  ECAA  F00C         	call	___wmul	;wreg free
  2175  000ADC  5001               	movf	?___wmul,w,c
  2176  000ADE  247A               	addwf	scrDonePoleDet@poleData,w,c
  2177  000AE0  6ED9               	movwf	fsr2l,c
  2178  000AE2  5002               	movf	?___wmul+1,w,c
  2179  000AE4  207B               	addwfc	scrDonePoleDet@poleData+1,w,c
  2180  000AE6  6EDA               	movwf	fsr2h,c
  2181  000AE8  50DF               	movf	indf2,w,c
  2182  000AEA  0100               	movlb	0	; () banked
  2183  000AEC  6FAE               	movwf	??_scrDonePoleDet& (0+255),b
  2184  000AEE  51AE               	movf	??_scrDonePoleDet& (0+255),w,b
  2185  000AF0  6FB5               	movwf	_scrDonePoleDet$1343& (0+255),b
  2186  000AF2  6BB6               	clrf	(_scrDonePoleDet$1343+1)& (0+255),b
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;./standby.h: 91:     printf("Pole%01x Pos:%01d.%03d",
  2190  000AF4  C07C  F001         	movff	scrDonePoleDet@currPole,___wmul@multiplier
  2191  000AF8  C07D  F002         	movff	scrDonePoleDet@currPole+1,___wmul@multiplier+1
  2192  000AFC  0E00               	movlw	0
  2193  000AFE  6E04               	movwf	___wmul@multiplicand+1,c
  2194  000B00  0E05               	movlw	5
  2195  000B02  6E03               	movwf	___wmul@multiplicand,c
  2196  000B04  ECAA  F00C         	call	___wmul	;wreg free
  2197  000B08  C07A  F0AE         	movff	scrDonePoleDet@poleData,??_scrDonePoleDet
  2198  000B0C  C07B  F0AF         	movff	scrDonePoleDet@poleData+1,??_scrDonePoleDet+1
  2199  000B10  5001               	movf	?___wmul,w,c
  2200  000B12  0100               	movlb	0	; () banked
  2201  000B14  27AE               	addwf	??_scrDonePoleDet& (0+255),f,b
  2202  000B16  5002               	movf	?___wmul+1,w,c
  2203  000B18  23AF               	addwfc	(??_scrDonePoleDet+1)& (0+255),f,b
  2204  000B1A  0E01               	movlw	1
  2205  000B1C  25AE               	addwf	??_scrDonePoleDet& (0+255),w,b
  2206  000B1E  6ED9               	movwf	fsr2l,c
  2207  000B20  0E00               	movlw	0
  2208  000B22  21AF               	addwfc	(??_scrDonePoleDet+1)& (0+255),w,b
  2209  000B24  6EDA               	movwf	fsr2h,c
  2210  000B26  CFDE F007          	movff	postinc2,___awdiv@dividend
  2211  000B2A  CFDD F008          	movff	postdec2,___awdiv@dividend+1
  2212  000B2E  0E03               	movlw	3
  2213  000B30  6E0A               	movwf	___awdiv@divisor+1,c
  2214  000B32  0EE8               	movlw	232
  2215  000B34  6E09               	movwf	___awdiv@divisor,c
  2216  000B36  EC67  F009         	call	___awdiv	;wreg free
  2217  000B3A  C007  F0B1         	movff	?___awdiv,_scrDonePoleDet$1344
  2218  000B3E  C008  F0B2         	movff	?___awdiv+1,_scrDonePoleDet$1344+1
  2219                           
  2220                           ;./standby.h: 91:     printf("Pole%01x Pos:%01d.%03d",
  2221  000B42  C07C  F001         	movff	scrDonePoleDet@currPole,___wmul@multiplier
  2222  000B46  C07D  F002         	movff	scrDonePoleDet@currPole+1,___wmul@multiplier+1
  2223  000B4A  0E00               	movlw	0
  2224  000B4C  6E04               	movwf	___wmul@multiplicand+1,c
  2225  000B4E  0E05               	movlw	5
  2226  000B50  6E03               	movwf	___wmul@multiplicand,c
  2227  000B52  ECAA  F00C         	call	___wmul	;wreg free
  2228  000B56  C07A  F0AE         	movff	scrDonePoleDet@poleData,??_scrDonePoleDet
  2229  000B5A  C07B  F0AF         	movff	scrDonePoleDet@poleData+1,??_scrDonePoleDet+1
  2230  000B5E  5001               	movf	?___wmul,w,c
  2231  000B60  0100               	movlb	0	; () banked
  2232  000B62  27AE               	addwf	??_scrDonePoleDet& (0+255),f,b
  2233  000B64  5002               	movf	?___wmul+1,w,c
  2234  000B66  23AF               	addwfc	(??_scrDonePoleDet+1)& (0+255),f,b
  2235  000B68  0E01               	movlw	1
  2236  000B6A  25AE               	addwf	??_scrDonePoleDet& (0+255),w,b
  2237  000B6C  6ED9               	movwf	fsr2l,c
  2238  000B6E  0E00               	movlw	0
  2239  000B70  21AF               	addwfc	(??_scrDonePoleDet+1)& (0+255),w,b
  2240  000B72  6EDA               	movwf	fsr2h,c
  2241  000B74  CFDE F007          	movff	postinc2,___awmod@dividend
  2242  000B78  CFDD F008          	movff	postdec2,___awmod@dividend+1
  2243  000B7C  0E03               	movlw	3
  2244  000B7E  6E0A               	movwf	___awmod@divisor+1,c
  2245  000B80  0EE8               	movlw	232
  2246  000B82  6E09               	movwf	___awmod@divisor,c
  2247  000B84  ECEA  F009         	call	___awmod	;wreg free
  2248  000B88  C007  F0B3         	movff	?___awmod,_scrDonePoleDet$1345
  2249  000B8C  C008  F0B4         	movff	?___awmod+1,_scrDonePoleDet$1345+1
  2250                           
  2251                           ;./standby.h: 91:     printf("Pole%01x Pos:%01d.%03d",
  2252  000B90  0EC7               	movlw	low STR_19
  2253  000B92  6E6E               	movwf	printf@fmt,c
  2254  000B94  0EFE               	movlw	high STR_19
  2255  000B96  6E6F               	movwf	printf@fmt+1,c
  2256  000B98  C0B5  F070         	movff	_scrDonePoleDet$1343,?_printf+2
  2257  000B9C  C0B6  F071         	movff	_scrDonePoleDet$1343+1,?_printf+3
  2258  000BA0  C0B1  F072         	movff	_scrDonePoleDet$1344,?_printf+4
  2259  000BA4  C0B2  F073         	movff	_scrDonePoleDet$1344+1,?_printf+5
  2260  000BA8  C0B3  F074         	movff	_scrDonePoleDet$1345,?_printf+6
  2261  000BAC  C0B4  F075         	movff	_scrDonePoleDet$1345+1,?_printf+7
  2262  000BB0  EC97  F00C         	call	_printf	;wreg free
  2263  000BB4  0EC0               	movlw	192
  2264  000BB6  ECFB  F00C         	call	_lcdInst
  2265                           
  2266                           ;./standby.h: 94:     printf("Tires Supp:   %01d ",poleData[currPole].tiresSupp);
  2267  000BBA  C07C  F001         	movff	scrDonePoleDet@currPole,___wmul@multiplier
  2268  000BBE  C07D  F002         	movff	scrDonePoleDet@currPole+1,___wmul@multiplier+1
  2269  000BC2  0E00               	movlw	0
  2270  000BC4  6E04               	movwf	___wmul@multiplicand+1,c
  2271  000BC6  0E05               	movlw	5
  2272  000BC8  6E03               	movwf	___wmul@multiplicand,c
  2273  000BCA  ECAA  F00C         	call	___wmul	;wreg free
  2274  000BCE  C07A  F0AE         	movff	scrDonePoleDet@poleData,??_scrDonePoleDet
  2275  000BD2  C07B  F0AF         	movff	scrDonePoleDet@poleData+1,??_scrDonePoleDet+1
  2276  000BD6  5001               	movf	?___wmul,w,c
  2277  000BD8  0100               	movlb	0	; () banked
  2278  000BDA  27AE               	addwf	??_scrDonePoleDet& (0+255),f,b
  2279  000BDC  5002               	movf	?___wmul+1,w,c
  2280  000BDE  23AF               	addwfc	(??_scrDonePoleDet+1)& (0+255),f,b
  2281  000BE0  0E03               	movlw	3
  2282  000BE2  25AE               	addwf	??_scrDonePoleDet& (0+255),w,b
  2283  000BE4  6ED9               	movwf	fsr2l,c
  2284  000BE6  0E00               	movlw	0
  2285  000BE8  21AF               	addwfc	(??_scrDonePoleDet+1)& (0+255),w,b
  2286  000BEA  6EDA               	movwf	fsr2h,c
  2287  000BEC  50DF               	movf	indf2,w,c
  2288  000BEE  6FB0               	movwf	(??_scrDonePoleDet+2)& (0+255),b
  2289  000BF0  51B0               	movf	(??_scrDonePoleDet+2)& (0+255),w,b
  2290  000BF2  6FB5               	movwf	_scrDonePoleDet$1343& (0+255),b
  2291  000BF4  6BB6               	clrf	(_scrDonePoleDet$1343+1)& (0+255),b
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;./standby.h: 94:     printf("Tires Supp:   %01d ",poleData[currPole].tiresSupp);
  2295  000BF6  0EDE               	movlw	low STR_20
  2296  000BF8  6E6E               	movwf	printf@fmt,c
  2297  000BFA  0EFE               	movlw	high STR_20
  2298  000BFC  6E6F               	movwf	printf@fmt+1,c
  2299  000BFE  C0B5  F070         	movff	_scrDonePoleDet$1343,?_printf+2
  2300  000C02  C0B6  F071         	movff	_scrDonePoleDet$1343+1,?_printf+3
  2301  000C06  EC97  F00C         	call	_printf	;wreg free
  2302  000C0A  0E90               	movlw	144
  2303  000C0C  ECFB  F00C         	call	_lcdInst
  2304                           
  2305                           ;./standby.h: 96:     printf("Tires on Pole:%01d ",poleData[currPole].tiresPresent);
  2306  000C10  C07C  F001         	movff	scrDonePoleDet@currPole,___wmul@multiplier
  2307  000C14  C07D  F002         	movff	scrDonePoleDet@currPole+1,___wmul@multiplier+1
  2308  000C18  0E00               	movlw	0
  2309  000C1A  6E04               	movwf	___wmul@multiplicand+1,c
  2310  000C1C  0E05               	movlw	5
  2311  000C1E  6E03               	movwf	___wmul@multiplicand,c
  2312  000C20  ECAA  F00C         	call	___wmul	;wreg free
  2313  000C24  C07A  F0AE         	movff	scrDonePoleDet@poleData,??_scrDonePoleDet
  2314  000C28  C07B  F0AF         	movff	scrDonePoleDet@poleData+1,??_scrDonePoleDet+1
  2315  000C2C  5001               	movf	?___wmul,w,c
  2316  000C2E  0100               	movlb	0	; () banked
  2317  000C30  27AE               	addwf	??_scrDonePoleDet& (0+255),f,b
  2318  000C32  5002               	movf	?___wmul+1,w,c
  2319  000C34  23AF               	addwfc	(??_scrDonePoleDet+1)& (0+255),f,b
  2320  000C36  0E04               	movlw	4
  2321  000C38  25AE               	addwf	??_scrDonePoleDet& (0+255),w,b
  2322  000C3A  6ED9               	movwf	fsr2l,c
  2323  000C3C  0E00               	movlw	0
  2324  000C3E  21AF               	addwfc	(??_scrDonePoleDet+1)& (0+255),w,b
  2325  000C40  6EDA               	movwf	fsr2h,c
  2326  000C42  50DF               	movf	indf2,w,c
  2327  000C44  6FB0               	movwf	(??_scrDonePoleDet+2)& (0+255),b
  2328  000C46  51B0               	movf	(??_scrDonePoleDet+2)& (0+255),w,b
  2329  000C48  6FB5               	movwf	_scrDonePoleDet$1343& (0+255),b
  2330  000C4A  6BB6               	clrf	(_scrDonePoleDet$1343+1)& (0+255),b
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;./standby.h: 96:     printf("Tires on Pole:%01d ",poleData[currPole].tiresPresent);
  2334  000C4C  0EF2               	movlw	low STR_21
  2335  000C4E  6E6E               	movwf	printf@fmt,c
  2336  000C50  0EFE               	movlw	high STR_21
  2337  000C52  6E6F               	movwf	printf@fmt+1,c
  2338  000C54  C0B5  F070         	movff	_scrDonePoleDet$1343,?_printf+2
  2339  000C58  C0B6  F071         	movff	_scrDonePoleDet$1343+1,?_printf+3
  2340  000C5C  EC97  F00C         	call	_printf	;wreg free
  2341  000C60  0ED0               	movlw	208
  2342  000C62  ECFB  F00C         	call	_lcdInst
  2343                           
  2344                           ;./standby.h: 98:     printf("<*   0:Menu   #>");
  2345  000C66  0ED7               	movlw	low STR_22
  2346  000C68  6E6E               	movwf	printf@fmt,c
  2347  000C6A  0EFF               	movlw	high STR_22
  2348  000C6C  6E6F               	movwf	printf@fmt+1,c
  2349  000C6E  EC97  F00C         	call	_printf	;wreg free
  2350  000C72  0012               	return		;funcret
  2351  000C74                     __end_of_scrDonePoleDet:
  2352                           	opt callstack 0
  2353                           
  2354 ;; *************** function ___awmod *****************
  2355 ;; Defined at:
  2356 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  dividend        2    6[COMRAM] int 
  2359 ;;  divisor         2    8[COMRAM] int 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  sign            1   11[COMRAM] unsigned char 
  2362 ;;  counter         1   10[COMRAM] unsigned char 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  2    6[COMRAM] int 
  2365 ;; Registers used:
  2366 ;;		wreg, status,2, status,0
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2372 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2375 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;Total ram usage:        6 bytes
  2377 ;; Hardware stack levels used:    1
  2378 ;; Hardware stack levels required when called:    1
  2379 ;; This function calls:
  2380 ;;		Nothing
  2381 ;; This function is called by:
  2382 ;;		_scrDonePoleDet
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text4
  2387  0013D4                     __ptext4:
  2388                           	opt callstack 0
  2389  0013D4                     ___awmod:
  2390                           	opt callstack 28
  2391                           
  2392                           ;incstack = 0
  2393  0013D4  0E00               	movlw	0
  2394  0013D6  6E0C               	movwf	___awmod@sign,c
  2395  0013D8  AE08               	btfss	___awmod@dividend+1,7,c
  2396  0013DA  D006               	goto	l2769
  2397  0013DC  6C07               	negf	___awmod@dividend,c
  2398  0013DE  1E08               	comf	___awmod@dividend+1,f,c
  2399  0013E0  B0D8               	btfsc	status,0,c
  2400  0013E2  2A08               	incf	___awmod@dividend+1,f,c
  2401  0013E4  0E01               	movlw	1
  2402  0013E6  6E0C               	movwf	___awmod@sign,c
  2403  0013E8                     l2769:
  2404  0013E8  AE0A               	btfss	___awmod@divisor+1,7,c
  2405  0013EA  D004               	goto	l2773
  2406  0013EC  6C09               	negf	___awmod@divisor,c
  2407  0013EE  1E0A               	comf	___awmod@divisor+1,f,c
  2408  0013F0  B0D8               	btfsc	status,0,c
  2409  0013F2  2A0A               	incf	___awmod@divisor+1,f,c
  2410  0013F4                     l2773:
  2411  0013F4  5009               	movf	___awmod@divisor,w,c
  2412  0013F6  100A               	iorwf	___awmod@divisor+1,w,c
  2413  0013F8  B4D8               	btfsc	status,2,c
  2414  0013FA  D018               	goto	l2789
  2415  0013FC  0E01               	movlw	1
  2416  0013FE  6E0B               	movwf	___awmod@counter,c
  2417  001400  D004               	goto	l2779
  2418  001402                     l2777:
  2419  001402  90D8               	bcf	status,0,c
  2420  001404  3609               	rlcf	___awmod@divisor,f,c
  2421  001406  360A               	rlcf	___awmod@divisor+1,f,c
  2422  001408  2A0B               	incf	___awmod@counter,f,c
  2423  00140A                     l2779:
  2424  00140A  AE0A               	btfss	___awmod@divisor+1,7,c
  2425  00140C  D7FA               	goto	l2777
  2426  00140E                     u2490:
  2427  00140E  5009               	movf	___awmod@divisor,w,c
  2428  001410  5C07               	subwf	___awmod@dividend,w,c
  2429  001412  500A               	movf	___awmod@divisor+1,w,c
  2430  001414  5808               	subwfb	___awmod@dividend+1,w,c
  2431  001416  A0D8               	btfss	status,0,c
  2432  001418  D004               	goto	l2785
  2433  00141A  5009               	movf	___awmod@divisor,w,c
  2434  00141C  5E07               	subwf	___awmod@dividend,f,c
  2435  00141E  500A               	movf	___awmod@divisor+1,w,c
  2436  001420  5A08               	subwfb	___awmod@dividend+1,f,c
  2437  001422                     l2785:
  2438  001422  90D8               	bcf	status,0,c
  2439  001424  320A               	rrcf	___awmod@divisor+1,f,c
  2440  001426  3209               	rrcf	___awmod@divisor,f,c
  2441  001428  2E0B               	decfsz	___awmod@counter,f,c
  2442  00142A  D7F1               	goto	u2490
  2443  00142C                     l2789:
  2444  00142C  500C               	movf	___awmod@sign,w,c
  2445  00142E  B4D8               	btfsc	status,2,c
  2446  001430  D004               	goto	l2793
  2447  001432  6C07               	negf	___awmod@dividend,c
  2448  001434  1E08               	comf	___awmod@dividend+1,f,c
  2449  001436  B0D8               	btfsc	status,0,c
  2450  001438  2A08               	incf	___awmod@dividend+1,f,c
  2451  00143A                     l2793:
  2452  00143A  C007  F007         	movff	___awmod@dividend,?___awmod
  2453  00143E  C008  F008         	movff	___awmod@dividend+1,?___awmod+1
  2454  001442  0012               	return		;funcret
  2455  001444                     __end_of___awmod:
  2456                           	opt callstack 0
  2457                           
  2458 ;; *************** function ___awdiv *****************
  2459 ;; Defined at:
  2460 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  dividend        2    6[COMRAM] int 
  2463 ;;  divisor         2    8[COMRAM] int 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;  quotient        2   12[COMRAM] int 
  2466 ;;  sign            1   11[COMRAM] unsigned char 
  2467 ;;  counter         1   10[COMRAM] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  2    6[COMRAM] int 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2477 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2481 ;;Total ram usage:        8 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    1
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_scrDonePoleDet
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text5
  2492  0012CE                     __ptext5:
  2493                           	opt callstack 0
  2494  0012CE                     ___awdiv:
  2495                           	opt callstack 28
  2496                           
  2497                           ;incstack = 0
  2498  0012CE  0E00               	movlw	0
  2499  0012D0  6E0C               	movwf	___awdiv@sign,c
  2500  0012D2  AE0A               	btfss	___awdiv@divisor+1,7,c
  2501  0012D4  D006               	goto	l2725
  2502  0012D6  6C09               	negf	___awdiv@divisor,c
  2503  0012D8  1E0A               	comf	___awdiv@divisor+1,f,c
  2504  0012DA  B0D8               	btfsc	status,0,c
  2505  0012DC  2A0A               	incf	___awdiv@divisor+1,f,c
  2506  0012DE  0E01               	movlw	1
  2507  0012E0  6E0C               	movwf	___awdiv@sign,c
  2508  0012E2                     l2725:
  2509  0012E2  AE08               	btfss	___awdiv@dividend+1,7,c
  2510  0012E4  D006               	goto	l2731
  2511  0012E6  6C07               	negf	___awdiv@dividend,c
  2512  0012E8  1E08               	comf	___awdiv@dividend+1,f,c
  2513  0012EA  B0D8               	btfsc	status,0,c
  2514  0012EC  2A08               	incf	___awdiv@dividend+1,f,c
  2515  0012EE  0E01               	movlw	1
  2516  0012F0  1A0C               	xorwf	___awdiv@sign,f,c
  2517  0012F2                     l2731:
  2518  0012F2  0E00               	movlw	0
  2519  0012F4  6E0E               	movwf	___awdiv@quotient+1,c
  2520  0012F6  0E00               	movlw	0
  2521  0012F8  6E0D               	movwf	___awdiv@quotient,c
  2522  0012FA  5009               	movf	___awdiv@divisor,w,c
  2523  0012FC  100A               	iorwf	___awdiv@divisor+1,w,c
  2524  0012FE  B4D8               	btfsc	status,2,c
  2525  001300  D01C               	goto	l2753
  2526  001302  0E01               	movlw	1
  2527  001304  6E0B               	movwf	___awdiv@counter,c
  2528  001306  D004               	goto	l2739
  2529  001308                     l2737:
  2530  001308  90D8               	bcf	status,0,c
  2531  00130A  3609               	rlcf	___awdiv@divisor,f,c
  2532  00130C  360A               	rlcf	___awdiv@divisor+1,f,c
  2533  00130E  2A0B               	incf	___awdiv@counter,f,c
  2534  001310                     l2739:
  2535  001310  AE0A               	btfss	___awdiv@divisor+1,7,c
  2536  001312  D7FA               	goto	l2737
  2537  001314                     u2430:
  2538  001314  90D8               	bcf	status,0,c
  2539  001316  360D               	rlcf	___awdiv@quotient,f,c
  2540  001318  360E               	rlcf	___awdiv@quotient+1,f,c
  2541  00131A  5009               	movf	___awdiv@divisor,w,c
  2542  00131C  5C07               	subwf	___awdiv@dividend,w,c
  2543  00131E  500A               	movf	___awdiv@divisor+1,w,c
  2544  001320  5808               	subwfb	___awdiv@dividend+1,w,c
  2545  001322  A0D8               	btfss	status,0,c
  2546  001324  D005               	goto	l2749
  2547  001326  5009               	movf	___awdiv@divisor,w,c
  2548  001328  5E07               	subwf	___awdiv@dividend,f,c
  2549  00132A  500A               	movf	___awdiv@divisor+1,w,c
  2550  00132C  5A08               	subwfb	___awdiv@dividend+1,f,c
  2551  00132E  800D               	bsf	___awdiv@quotient,0,c
  2552  001330                     l2749:
  2553  001330  90D8               	bcf	status,0,c
  2554  001332  320A               	rrcf	___awdiv@divisor+1,f,c
  2555  001334  3209               	rrcf	___awdiv@divisor,f,c
  2556  001336  2E0B               	decfsz	___awdiv@counter,f,c
  2557  001338  D7ED               	goto	u2430
  2558  00133A                     l2753:
  2559  00133A  500C               	movf	___awdiv@sign,w,c
  2560  00133C  B4D8               	btfsc	status,2,c
  2561  00133E  D004               	goto	l2757
  2562  001340  6C0D               	negf	___awdiv@quotient,c
  2563  001342  1E0E               	comf	___awdiv@quotient+1,f,c
  2564  001344  B0D8               	btfsc	status,0,c
  2565  001346  2A0E               	incf	___awdiv@quotient+1,f,c
  2566  001348                     l2757:
  2567  001348  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  2568  00134C  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  2569  001350  0012               	return		;funcret
  2570  001352                     __end_of___awdiv:
  2571                           	opt callstack 0
  2572                           
  2573 ;; *************** function _scrDoneMain *****************
  2574 ;; Defined at:
  2575 ;;		line 58 in file "./standby.h"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;		None
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;Total ram usage:        1 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:   12
  2596 ;; This function calls:
  2597 ;;		_lcdInst
  2598 ;;		_printf
  2599 ;; This function is called by:
  2600 ;;		_main
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text6
  2605  00164E                     __ptext6:
  2606                           	opt callstack 0
  2607  00164E                     _scrDoneMain:
  2608                           	opt callstack 18
  2609                           
  2610                           ;./standby.h: 59:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  2611                           
  2612                           ;incstack = 0
  2613  00164E  0E80               	movlw	128
  2614  001650  ECFB  F00C         	call	_lcdInst
  2615  001654  0E07               	movlw	7
  2616  001656  6E7A               	movwf	??_scrDoneMain& (0+255),c
  2617  001658  0E7D               	movlw	125
  2618  00165A                     u2907:
  2619  00165A  2EE8               	decfsz	wreg,f,c
  2620  00165C  D7FE               	bra	u2907
  2621  00165E  2E7A               	decfsz	??_scrDoneMain& (0+255),f,c
  2622  001660  D7FC               	bra	u2907
  2623  001662  F000               	nop	
  2624                           
  2625                           ;./standby.h: 60:     printf("1: General Info ");
  2626  001664  0E82               	movlw	low STR_11
  2627  001666  6E6E               	movwf	printf@fmt,c
  2628  001668  0EFF               	movlw	high STR_11
  2629  00166A  6E6F               	movwf	printf@fmt+1,c
  2630  00166C  EC97  F00C         	call	_printf	;wreg free
  2631  001670  0EC0               	movlw	192
  2632  001672  ECFB  F00C         	call	_lcdInst
  2633                           
  2634                           ;./standby.h: 62:     printf("2: Pole Details ");
  2635  001676  0E93               	movlw	low STR_12
  2636  001678  6E6E               	movwf	printf@fmt,c
  2637  00167A  0EFF               	movlw	high STR_12
  2638  00167C  6E6F               	movwf	printf@fmt+1,c
  2639  00167E  EC97  F00C         	call	_printf	;wreg free
  2640  001682  0E90               	movlw	144
  2641  001684  ECFB  F00C         	call	_lcdInst
  2642                           
  2643                           ;./standby.h: 64:     printf("                ");
  2644  001688  0E3E               	movlw	low STR_8
  2645  00168A  6E6E               	movwf	printf@fmt,c
  2646  00168C  0EFF               	movlw	high STR_8
  2647  00168E  6E6F               	movwf	printf@fmt+1,c
  2648  001690  EC97  F00C         	call	_printf	;wreg free
  2649  001694  0ED0               	movlw	208
  2650  001696  ECFB  F00C         	call	_lcdInst
  2651                           
  2652                           ;./standby.h: 66:     printf("-----0:Done-----");
  2653  00169A  0EB5               	movlw	low STR_14
  2654  00169C  6E6E               	movwf	printf@fmt,c
  2655  00169E  0EFF               	movlw	high STR_14
  2656  0016A0  6E6F               	movwf	printf@fmt+1,c
  2657  0016A2  EC97  F00C         	call	_printf	;wreg free
  2658  0016A6  0012               	return		;funcret
  2659  0016A8                     __end_of_scrDoneMain:
  2660                           	opt callstack 0
  2661                           
  2662 ;; *************** function _scrDoneGen *****************
  2663 ;; Defined at:
  2664 ;;		line 69 in file "./standby.h"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  time            2  121[COMRAM] unsigned int 
  2667 ;;  tireCount       1  123[COMRAM] unsigned char 
  2668 ;;  poles           1  124[COMRAM] unsigned char 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      void 
  2673 ;; Registers used:
  2674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2680 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;Total ram usage:        5 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:   12
  2687 ;; This function calls:
  2688 ;;		_lcdInst
  2689 ;;		_printf
  2690 ;; This function is called by:
  2691 ;;		_main
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text7
  2696  001444                     __ptext7:
  2697                           	opt callstack 0
  2698  001444                     _scrDoneGen:
  2699                           	opt callstack 18
  2700                           
  2701                           ;./standby.h: 69: void scrDoneGen(unsigned int time, unsigned char tireCount,;./standby.
      +                          h: 70:     unsigned char poles){;./standby.h: 71:     { lcdInst(0x80); _delay((unsigned 
      +                          long)((2)*(10000000/4000.0)));};
  2702                           
  2703                           ;incstack = 0
  2704  001444  0E80               	movlw	128
  2705  001446  ECFB  F00C         	call	_lcdInst
  2706  00144A  0E07               	movlw	7
  2707  00144C  6E7E               	movwf	??_scrDoneGen& (0+255),c
  2708  00144E  0E7D               	movlw	125
  2709  001450                     u2917:
  2710  001450  2EE8               	decfsz	wreg,f,c
  2711  001452  D7FE               	bra	u2917
  2712  001454  2E7E               	decfsz	??_scrDoneGen& (0+255),f,c
  2713  001456  D7FC               	bra	u2917
  2714  001458  F000               	nop	
  2715                           
  2716                           ;./standby.h: 72:     printf("Total Time: %03xs",time);
  2717  00145A  0E2C               	movlw	low STR_15
  2718  00145C  6E6E               	movwf	printf@fmt,c
  2719  00145E  0EFF               	movlw	high STR_15
  2720  001460  6E6F               	movwf	printf@fmt+1,c
  2721  001462  C07A  F070         	movff	scrDoneGen@time,?_printf+2
  2722  001466  C07B  F071         	movff	scrDoneGen@time+1,?_printf+3
  2723  00146A  EC97  F00C         	call	_printf	;wreg free
  2724  00146E  0EC0               	movlw	192
  2725  001470  ECFB  F00C         	call	_lcdInst
  2726                           
  2727                           ;./standby.h: 74:     printf("Tires Supp:  %02x ",tireCount);
  2728  001474  0E06               	movlw	low STR_16
  2729  001476  6E6E               	movwf	printf@fmt,c
  2730  001478  0EFF               	movlw	high STR_16
  2731  00147A  6E6F               	movwf	printf@fmt+1,c
  2732  00147C  C07C  F070         	movff	scrDoneGen@tireCount,?_printf+2
  2733  001480  6A71               	clrf	?_printf+3,c
  2734  001482  EC97  F00C         	call	_printf	;wreg free
  2735  001486  0E90               	movlw	144
  2736  001488  ECFB  F00C         	call	_lcdInst
  2737                           
  2738                           ;./standby.h: 76:     printf("Pole Count:  %02x ",poles);
  2739  00148C  0E19               	movlw	low STR_17
  2740  00148E  6E6E               	movwf	printf@fmt,c
  2741  001490  0EFF               	movlw	high STR_17
  2742  001492  6E6F               	movwf	printf@fmt+1,c
  2743  001494  C07D  F070         	movff	scrDoneGen@poles,?_printf+2
  2744  001498  6A71               	clrf	?_printf+3,c
  2745  00149A  EC97  F00C         	call	_printf	;wreg free
  2746  00149E  0ED0               	movlw	208
  2747  0014A0  ECFB  F00C         	call	_lcdInst
  2748                           
  2749                           ;./standby.h: 78:     printf("-----0:Menu-----");
  2750  0014A4  0EC6               	movlw	low STR_18
  2751  0014A6  6E6E               	movwf	printf@fmt,c
  2752  0014A8  0EFF               	movlw	high STR_18
  2753  0014AA  6E6F               	movwf	printf@fmt+1,c
  2754  0014AC  EC97  F00C         	call	_printf	;wreg free
  2755  0014B0  0012               	return		;funcret
  2756  0014B2                     __end_of_scrDoneGen:
  2757                           	opt callstack 0
  2758                           
  2759 ;; *************** function _printf *****************
  2760 ;; Defined at:
  2761 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  fmt             2  109[COMRAM] PTR const unsigned char 
  2764 ;;		 -> STR_22(17), STR_21(20), STR_20(20), STR_19(23), 
  2765 ;;		 -> STR_18(17), STR_17(19), STR_16(19), STR_15(18), 
  2766 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(17), 
  2767 ;;		 -> STR_10(2), STR_9(5), STR_8(17), STR_7(17), 
  2768 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(23), 
  2769 ;;		 -> STR_2(23), STR_1(17), 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  ap              2  119[COMRAM] PTR void [1]
  2772 ;;		 -> ?_printf(2), 
  2773 ;;  ret             2    0        int 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  2  109[COMRAM] int 
  2776 ;; Registers used:
  2777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2783 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;Total ram usage:       12 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:   11
  2790 ;; This function calls:
  2791 ;;		_vfprintf
  2792 ;; This function is called by:
  2793 ;;		_showTime
  2794 ;;		_scrRunning
  2795 ;;		_scrDoneMain
  2796 ;;		_scrDoneGen
  2797 ;;		_scrDonePoleDet
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text8
  2802  00192E                     __ptext8:
  2803                           	opt callstack 0
  2804  00192E                     _printf:
  2805                           	opt callstack 18
  2806                           
  2807                           ;incstack = 0
  2808  00192E  0E70               	movlw	low (?_printf+2)
  2809  001930  6E78               	movwf	printf@ap,c
  2810  001932  0E00               	movlw	high (?_printf+2)
  2811  001934  6E79               	movwf	printf@ap+1,c
  2812  001936  0E00               	movlw	0
  2813  001938  6E66               	movwf	vfprintf@fp,c
  2814  00193A  0E00               	movlw	0
  2815  00193C  6E67               	movwf	vfprintf@fp+1,c
  2816  00193E  C06E  F068         	movff	printf@fmt,vfprintf@fmt
  2817  001942  C06F  F069         	movff	printf@fmt+1,vfprintf@fmt+1
  2818  001946  0E78               	movlw	low printf@ap
  2819  001948  6E6A               	movwf	vfprintf@ap,c
  2820  00194A  0E00               	movlw	high printf@ap
  2821  00194C  6E6B               	movwf	vfprintf@ap+1,c
  2822  00194E  EC54  F00B         	call	_vfprintf	;wreg free
  2823  001952  0012               	return		;funcret
  2824  001954                     __end_of_printf:
  2825                           	opt callstack 0
  2826                           
  2827 ;; *************** function _vfprintf *****************
  2828 ;; Defined at:
  2829 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  fp              2  101[COMRAM] PTR struct _IO_FILE
  2832 ;;		 -> NULL(0), 
  2833 ;;  fmt             2  103[COMRAM] PTR const unsigned char 
  2834 ;;		 -> STR_22(17), STR_21(20), STR_20(20), STR_19(23), 
  2835 ;;		 -> STR_18(17), STR_17(19), STR_16(19), STR_15(18), 
  2836 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(17), 
  2837 ;;		 -> STR_10(2), STR_9(5), STR_8(17), STR_7(17), 
  2838 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(23), 
  2839 ;;		 -> STR_2(23), STR_1(17), 
  2840 ;;  ap              2  105[COMRAM] PTR PTR void 
  2841 ;;		 -> printf@ap(2), 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  cfmt            2  107[COMRAM] PTR unsigned char 
  2844 ;;		 -> STR_22(17), STR_21(20), STR_20(20), STR_19(23), 
  2845 ;;		 -> STR_18(17), STR_17(19), STR_16(19), STR_15(18), 
  2846 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(17), 
  2847 ;;		 -> STR_10(2), STR_9(5), STR_8(17), STR_7(17), 
  2848 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(23), 
  2849 ;;		 -> STR_2(23), STR_1(17), 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  2  101[COMRAM] int 
  2852 ;; Registers used:
  2853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2859 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;Total ram usage:        8 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:   10
  2866 ;; This function calls:
  2867 ;;		_vfpfcnvrt
  2868 ;; This function is called by:
  2869 ;;		_printf
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text9
  2874  0016A8                     __ptext9:
  2875                           	opt callstack 0
  2876  0016A8                     _vfprintf:
  2877                           	opt callstack 18
  2878                           
  2879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2880                           
  2881                           ;incstack = 0
  2882  0016A8  C068  F06C         	movff	vfprintf@fmt,vfprintf@cfmt
  2883  0016AC  C069  F06D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2884                           
  2885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2886  0016B0  0E00               	movlw	0
  2887  0016B2  0100               	movlb	0	; () banked
  2888  0016B4  6F81               	movwf	(_nout+1)& (0+255),b
  2889  0016B6  0E00               	movlw	0
  2890  0016B8  6F80               	movwf	_nout& (0+255),b
  2891                           
  2892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2893  0016BA  D013               	goto	l2657
  2894  0016BC                     l2655:
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2898  0016BC  C066  F047         	movff	vfprintf@fp,vfpfcnvrt@fp
  2899  0016C0  C067  F048         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2900  0016C4  0E6C               	movlw	low vfprintf@cfmt
  2901  0016C6  6E49               	movwf	vfpfcnvrt@fmt,c
  2902  0016C8  0E00               	movlw	high vfprintf@cfmt
  2903  0016CA  6E4A               	movwf	vfpfcnvrt@fmt+1,c
  2904  0016CC  C06A  F04B         	movff	vfprintf@ap,vfpfcnvrt@ap
  2905  0016D0  C06B  F04C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2906  0016D4  EC09  F000         	call	_vfpfcnvrt	;wreg free
  2907  0016D8  5047               	movf	?_vfpfcnvrt,w,c
  2908  0016DA  0100               	movlb	0	; () banked
  2909  0016DC  2780               	addwf	_nout& (0+255),f,b
  2910  0016DE  5048               	movf	?_vfpfcnvrt+1,w,c
  2911  0016E0  2381               	addwfc	(_nout+1)& (0+255),f,b
  2912  0016E2                     l2657:
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2916  0016E2  C06C  FFF6         	movff	vfprintf@cfmt,tblptrl
  2917  0016E6  C06D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2918  0016EA                     	if	0	;tblptru may be non-zero
  2919  0016EA                     	endif
  2920  0016EA                     	if	0	;tblptru may be non-zero
  2921  0016EA                     	endif
  2922  0016EA  0008               	tblrd		*
  2923  0016EC  50F5               	movf	tablat,w,c
  2924  0016EE  0900               	iorlw	0
  2925  0016F0  A4D8               	btfss	status,2,c
  2926  0016F2  D7E4               	goto	l2655
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2930  0016F4  C080  F066         	movff	_nout,?_vfprintf
  2931  0016F8  C081  F067         	movff	_nout+1,?_vfprintf+1
  2932                           
  2933                           ; BSR set to: 0
  2934  0016FC  0012               	return		;funcret
  2935  0016FE                     __end_of_vfprintf:
  2936                           	opt callstack 0
  2937                           
  2938 ;; *************** function _vfpfcnvrt *****************
  2939 ;; Defined at:
  2940 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  2943 ;;		 -> NULL(0), 
  2944 ;;  fmt             2   72[COMRAM] PTR PTR unsigned char 
  2945 ;;		 -> vfprintf@cfmt(2), 
  2946 ;;  ap              2   74[COMRAM] PTR PTR void 
  2947 ;;		 -> printf@ap(2), 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  llu             8   88[COMRAM] unsigned long long 
  2950 ;;  ll              8   80[COMRAM] long long 
  2951 ;;  f               4    0        long long 
  2952 ;;  vp              3    0        PTR void 
  2953 ;;  ct              3    0        unsigned char [3]
  2954 ;;  cp              3    0        PTR unsigned char 
  2955 ;;  done            2   96[COMRAM] int 
  2956 ;;  i               2    0        int 
  2957 ;;  c               1  100[COMRAM] unsigned char 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  2   70[COMRAM] int 
  2960 ;; Registers used:
  2961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2967 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Locals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;Total ram usage:       31 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    9
  2974 ;; This function calls:
  2975 ;;		_atoi
  2976 ;;		_dtoa
  2977 ;;		_fputc
  2978 ;;		_isdigit
  2979 ;;		_xtoa
  2980 ;; This function is called by:
  2981 ;;		_vfprintf
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text10
  2986  000012                     __ptext10:
  2987                           	opt callstack 0
  2988  000012                     _vfpfcnvrt:
  2989                           	opt callstack 18
  2990                           
  2991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;incstack = 0
  2995  000012  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2996  000016  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2997  00001A  CFDE FFF6          	movff	postinc2,tblptrl
  2998  00001E  CFDD FFF7          	movff	postdec2,tblptrh
  2999  000022                     	if	0	;tblptru may be non-zero
  3000  000022                     	endif
  3001  000022                     	if	0	;tblptru may be non-zero
  3002  000022                     	endif
  3003  000022  0008               	tblrd		*
  3004  000024  50F5               	movf	tablat,w,c
  3005  000026  0A25               	xorlw	37
  3006  000028  A4D8               	btfss	status,2,c
  3007  00002A  D1B1               	goto	l2633
  3008                           
  3009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3010  00002C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3011  000030  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3012  000034  2ADE               	incf	postinc2,f,c
  3013  000036  0E00               	movlw	0
  3014  000038  22DD               	addwfc	postdec2,f,c
  3015                           
  3016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3017  00003A  0E00               	movlw	0
  3018  00003C  0100               	movlb	0	; () banked
  3019  00003E  6F83               	movwf	(_width+1)& (0+255),b
  3020  000040  0E00               	movlw	0
  3021  000042  6F82               	movwf	_width& (0+255),b
  3022  000044  C082  F086         	movff	_width,_flags
  3023  000048  C083  F087         	movff	_width+1,_flags+1
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3027  00004C  6984               	setf	_prec& (0+255),b
  3028  00004E  6985               	setf	(_prec+1)& (0+255),b
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3032  000050  0E00               	movlw	0
  3033  000052  6E62               	movwf	vfpfcnvrt@done+1,c
  3034  000054  0E00               	movlw	0
  3035  000056  D019               	goto	L3
  3036  000058                     l2545:
  3037                           
  3038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3039  000058  0100               	movlb	0	; () banked
  3040  00005A  8186               	bsf	_flags& (0+255),0,b
  3041  00005C                     l2547:
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  3045  00005C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3046  000060  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3047  000064  2ADE               	incf	postinc2,f,c
  3048  000066  0E00               	movlw	0
  3049  000068  22DD               	addwfc	postdec2,f,c
  3050                           
  3051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  3052  00006A  D032               	goto	l2571
  3053  00006C                     l2549:
  3054                           
  3055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  3056  00006C  0100               	movlb	0	; () banked
  3057  00006E  8386               	bsf	_flags& (0+255),1,b
  3058  000070  D7F5               	goto	l2547
  3059  000072                     l2553:
  3060                           
  3061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  3062  000072  0100               	movlb	0	; () banked
  3063  000074  8586               	bsf	_flags& (0+255),2,b
  3064  000076  D7F2               	goto	l2547
  3065  000078                     l2557:
  3066                           
  3067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  3068  000078  0100               	movlb	0	; () banked
  3069  00007A  8786               	bsf	_flags& (0+255),3,b
  3070  00007C  D7EF               	goto	l2547
  3071  00007E                     l2561:
  3072                           
  3073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  3074  00007E  0100               	movlb	0	; () banked
  3075  000080  8986               	bsf	_flags& (0+255),4,b
  3076  000082  D7EC               	goto	l2547
  3077  000084                     l2565:
  3078                           
  3079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  3080  000084  0E00               	movlw	0
  3081  000086  6E62               	movwf	vfpfcnvrt@done+1,c
  3082  000088  0E01               	movlw	1
  3083  00008A                     L3:
  3084  00008A  6E61               	movwf	vfpfcnvrt@done,c
  3085                           
  3086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  3087  00008C  D021               	goto	l2571
  3088  00008E                     l2569:
  3089  00008E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3090  000092  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3091  000096  CFDE FFF6          	movff	postinc2,tblptrl
  3092  00009A  CFDD FFF7          	movff	postdec2,tblptrh
  3093  00009E                     	if	0	;tblptru may be non-zero
  3094  00009E                     	endif
  3095  00009E                     	if	0	;tblptru may be non-zero
  3096  00009E                     	endif
  3097  00009E  0008               	tblrd		*
  3098  0000A0  50F5               	movf	tablat,w,c
  3099  0000A2  6E4D               	movwf	??_vfpfcnvrt& (0+255),c
  3100  0000A4  6A4E               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  3101                           
  3102                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3103                           ; Switch size 1, requested type "simple"
  3104                           ; Number of cases is 1, Range of values is 0 to 0
  3105                           ; switch strategies available:
  3106                           ; Name         Instructions Cycles
  3107                           ; simple_byte            4     3 (average)
  3108                           ;	Chosen strategy is simple_byte
  3109  0000A6  504E               	movf	??_vfpfcnvrt+1,w,c
  3110  0000A8  0A00               	xorlw	0	; case 0
  3111  0000AA  A4D8               	btfss	status,2,c
  3112  0000AC  D7EB               	goto	l2565
  3113                           
  3114                           ; Switch size 1, requested type "simple"
  3115                           ; Number of cases is 5, Range of values is 32 to 48
  3116                           ; switch strategies available:
  3117                           ; Name         Instructions Cycles
  3118                           ; simple_byte           16     9 (average)
  3119                           ;	Chosen strategy is simple_byte
  3120  0000AE  504D               	movf	??_vfpfcnvrt,w,c
  3121  0000B0  0A20               	xorlw	32	; case 32
  3122  0000B2  B4D8               	btfsc	status,2,c
  3123  0000B4  D7E1               	goto	l2557
  3124  0000B6  0A03               	xorlw	3	; case 35
  3125  0000B8  B4D8               	btfsc	status,2,c
  3126  0000BA  D7E1               	goto	l2561
  3127  0000BC  0A08               	xorlw	8	; case 43
  3128  0000BE  B4D8               	btfsc	status,2,c
  3129  0000C0  D7D8               	goto	l2553
  3130  0000C2  0A06               	xorlw	6	; case 45
  3131  0000C4  B4D8               	btfsc	status,2,c
  3132  0000C6  D7C8               	goto	l2545
  3133  0000C8  0A1D               	xorlw	29	; case 48
  3134  0000CA  B4D8               	btfsc	status,2,c
  3135  0000CC  D7CF               	goto	l2549
  3136  0000CE  D7DA               	goto	l2565
  3137  0000D0                     l2571:
  3138                           
  3139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3140  0000D0  5061               	movf	vfpfcnvrt@done,w,c
  3141  0000D2  1062               	iorwf	vfpfcnvrt@done+1,w,c
  3142  0000D4  B4D8               	btfsc	status,2,c
  3143  0000D6  D7DB               	goto	l2569
  3144                           
  3145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  3146  0000D8  0100               	movlb	0	; () banked
  3147  0000DA  B186               	btfsc	_flags& (0+255),0,b
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  3151  0000DC  9386               	bcf	_flags& (0+255),1,b
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3155  0000DE  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3156  0000E2  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3157  0000E6  CFDE FFF6          	movff	postinc2,tblptrl
  3158  0000EA  CFDD FFF7          	movff	postdec2,tblptrh
  3159  0000EE                     	if	0	;tblptru may be non-zero
  3160  0000EE                     	endif
  3161  0000EE                     	if	0	;tblptru may be non-zero
  3162  0000EE                     	endif
  3163  0000EE  0008               	tblrd		*
  3164  0000F0  50F5               	movf	tablat,w,c
  3165  0000F2  0A2A               	xorlw	42
  3166  0000F4  A4D8               	btfss	status,2,c
  3167  0000F6  D023               	goto	l2583
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3171  0000F8  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3172  0000FC  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3173  000100  2ADE               	incf	postinc2,f,c
  3174  000102  0E00               	movlw	0
  3175  000104  22DD               	addwfc	postdec2,f,c
  3176                           
  3177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3178  000106  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3179  00010A  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3180  00010E  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  3181  000112  0E02               	movlw	2
  3182  000114  26DE               	addwf	postinc2,f,c
  3183  000116  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  3184  00011A  0E00               	movlw	0
  3185  00011C  22DD               	addwfc	postdec2,f,c
  3186  00011E  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3187  000122  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3188  000126  CFDE F082          	movff	postinc2,_width
  3189  00012A  CFDD F083          	movff	postdec2,_width+1
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  3193  00012E  AF83               	btfss	(_width+1)& (0+255),7,b
  3194  000130  D03F               	goto	u2270
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  3198  000132  8186               	bsf	_flags& (0+255),0,b
  3199                           
  3200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  3201  000134  6D82               	negf	_width& (0+255),b
  3202  000136  1F83               	comf	(_width+1)& (0+255),f,b
  3203  000138  B0D8               	btfsc	status,0,c
  3204  00013A  2B83               	incf	(_width+1)& (0+255),f,b
  3205  00013C  D039               	goto	u2270
  3206  00013E                     l2583:
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  3210  00013E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3211  000142  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3212  000146  CFDE F008          	movff	postinc2,atoi@s
  3213  00014A  CFDD F009          	movff	postdec2,atoi@s+1
  3214  00014E  EC81  F007         	call	_atoi	;wreg free
  3215  000152  C008  F082         	movff	?_atoi,_width
  3216  000156  C009  F083         	movff	?_atoi+1,_width+1
  3217                           
  3218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3219  00015A  D007               	goto	l2587
  3220  00015C                     l2585:
  3221                           
  3222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  3223  00015C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3224  000160  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3225  000164  2ADE               	incf	postinc2,f,c
  3226  000166  0E00               	movlw	0
  3227  000168  22DD               	addwfc	postdec2,f,c
  3228  00016A                     l2587:
  3229  00016A  0ED0               	movlw	208
  3230  00016C  6E4D               	movwf	??_vfpfcnvrt& (0+255),c
  3231  00016E  0EFF               	movlw	255
  3232  000170  6E4E               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  3233  000172  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3234  000176  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3235  00017A  CFDE FFF6          	movff	postinc2,tblptrl
  3236  00017E  CFDD FFF7          	movff	postdec2,tblptrh
  3237  000182                     	if	0	;tblptru may be non-zero
  3238  000182                     	endif
  3239  000182                     	if	0	;tblptru may be non-zero
  3240  000182                     	endif
  3241  000182  0008               	tblrd		*
  3242  000184  50F5               	movf	tablat,w,c
  3243  000186  6E4F               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3244  000188  6A50               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3245  00018A  504D               	movf	??_vfpfcnvrt,w,c
  3246  00018C  264F               	addwf	??_vfpfcnvrt+2,f,c
  3247  00018E  504E               	movf	??_vfpfcnvrt+1,w,c
  3248  000190  2250               	addwfc	??_vfpfcnvrt+3,f,c
  3249  000192  5050               	movf	??_vfpfcnvrt+3,w,c
  3250  000194  E106               	bnz	u2250
  3251  000196  0E0A               	movlw	10
  3252  000198  5C4F               	subwf	??_vfpfcnvrt+2,w,c
  3253  00019A  B0D8               	btfsc	status,0,c
  3254  00019C  D002               	goto	u2250
  3255  00019E  0E01               	movlw	1
  3256  0001A0  D001               	goto	u2260
  3257  0001A2                     u2250:
  3258  0001A2  0E00               	movlw	0
  3259  0001A4                     u2260:
  3260  0001A4  6E63               	movwf	_vfpfcnvrt$549,c
  3261  0001A6  6A64               	clrf	_vfpfcnvrt$549+1,c
  3262  0001A8  5063               	movf	_vfpfcnvrt$549,w,c
  3263  0001AA  1064               	iorwf	_vfpfcnvrt$549+1,w,c
  3264  0001AC  A4D8               	btfss	status,2,c
  3265  0001AE  D7D6               	goto	l2585
  3266  0001B0                     u2270:
  3267                           
  3268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3269  0001B0  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3270  0001B4  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3271  0001B8  CFDE FFF6          	movff	postinc2,tblptrl
  3272  0001BC  CFDD FFF7          	movff	postdec2,tblptrh
  3273  0001C0                     	if	0	;tblptru may be non-zero
  3274  0001C0                     	endif
  3275  0001C0                     	if	0	;tblptru may be non-zero
  3276  0001C0                     	endif
  3277  0001C0  0008               	tblrd		*
  3278  0001C2  50F5               	movf	tablat,w,c
  3279  0001C4  0A64               	xorlw	100
  3280  0001C6  B4D8               	btfsc	status,2,c
  3281  0001C8  D00D               	goto	u2290
  3282  0001CA  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3283  0001CE  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3284  0001D2  CFDE FFF6          	movff	postinc2,tblptrl
  3285  0001D6  CFDD FFF7          	movff	postdec2,tblptrh
  3286  0001DA                     	if	0	;tblptru may be non-zero
  3287  0001DA                     	endif
  3288  0001DA                     	if	0	;tblptru may be non-zero
  3289  0001DA                     	endif
  3290  0001DA  0008               	tblrd		*
  3291  0001DC  50F5               	movf	tablat,w,c
  3292  0001DE  0A69               	xorlw	105
  3293  0001E0  A4D8               	btfss	status,2,c
  3294  0001E2  D03F               	goto	l2603
  3295  0001E4                     u2290:
  3296                           
  3297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  3298  0001E4  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3299  0001E8  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3300  0001EC  2ADE               	incf	postinc2,f,c
  3301  0001EE  0E00               	movlw	0
  3302  0001F0  22DD               	addwfc	postdec2,f,c
  3303                           
  3304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3305  0001F2  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3306  0001F6  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3307  0001FA  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  3308  0001FE  0E02               	movlw	2
  3309  000200  26DE               	addwf	postinc2,f,c
  3310  000202  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  3311  000206  0E00               	movlw	0
  3312  000208  22DD               	addwfc	postdec2,f,c
  3313  00020A  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3314  00020E  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3315  000212  CFDE F051          	movff	postinc2,vfpfcnvrt@ll
  3316  000216  CFDD F052          	movff	postdec2,vfpfcnvrt@ll+1
  3317  00021A  0E00               	movlw	0
  3318  00021C  BE52               	btfsc	vfpfcnvrt@ll+1,7,c
  3319  00021E  0EFF               	movlw	-1
  3320  000220  6E53               	movwf	vfpfcnvrt@ll+2,c
  3321  000222  6E54               	movwf	vfpfcnvrt@ll+3,c
  3322  000224  6E55               	movwf	vfpfcnvrt@ll+4,c
  3323  000226  6E56               	movwf	vfpfcnvrt@ll+5,c
  3324  000228  6E57               	movwf	vfpfcnvrt@ll+6,c
  3325  00022A  6E58               	movwf	vfpfcnvrt@ll+7,c
  3326                           
  3327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3328  00022C  C047  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  3329  000230  C048  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3330  000234  C051  F022         	movff	vfpfcnvrt@ll,dtoa@d
  3331  000238  C052  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3332  00023C  C053  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3333  000240  C054  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3334  000244  C055  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3335  000248  C056  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3336  00024C  C057  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3337  000250  C058  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3338  000254  EC1E  F003         	call	_dtoa	;wreg free
  3339  000258  C020  F047         	movff	?_dtoa,?_vfpfcnvrt
  3340  00025C  C021  F048         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3341  000260  0012               	return	
  3342  000262                     l2603:
  3343                           
  3344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3345  000262  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3346  000266  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3347  00026A  CFDE FFF6          	movff	postinc2,tblptrl
  3348  00026E  CFDD FFF7          	movff	postdec2,tblptrh
  3349  000272                     	if	0	;tblptru may be non-zero
  3350  000272                     	endif
  3351  000272                     	if	0	;tblptru may be non-zero
  3352  000272                     	endif
  3353  000272  0008               	tblrd		*
  3354  000274  50F5               	movf	tablat,w,c
  3355  000276  0A78               	xorlw	120
  3356  000278  B4D8               	btfsc	status,2,c
  3357  00027A  D00D               	goto	u2310
  3358  00027C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3359  000280  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3360  000284  CFDE FFF6          	movff	postinc2,tblptrl
  3361  000288  CFDD FFF7          	movff	postdec2,tblptrh
  3362  00028C                     	if	0	;tblptru may be non-zero
  3363  00028C                     	endif
  3364  00028C                     	if	0	;tblptru may be non-zero
  3365  00028C                     	endif
  3366  00028C  0008               	tblrd		*
  3367  00028E  50F5               	movf	tablat,w,c
  3368  000290  0A58               	xorlw	88
  3369  000292  A4D8               	btfss	status,2,c
  3370  000294  D04D               	goto	l2617
  3371  000296                     u2310:
  3372                           
  3373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  3374  000296  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3375  00029A  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3376  00029E  CFDE FFF6          	movff	postinc2,tblptrl
  3377  0002A2  CFDD FFF7          	movff	postdec2,tblptrh
  3378  0002A6                     	if	0	;tblptru may be non-zero
  3379  0002A6                     	endif
  3380  0002A6                     	if	0	;tblptru may be non-zero
  3381  0002A6                     	endif
  3382  0002A6  0008               	tblrd		*
  3383  0002A8  CFF5 F065          	movff	tablat,vfpfcnvrt@c
  3384                           
  3385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  3386  0002AC  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3387  0002B0  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3388  0002B4  2ADE               	incf	postinc2,f,c
  3389  0002B6  0E00               	movlw	0
  3390  0002B8  22DD               	addwfc	postdec2,f,c
  3391                           
  3392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  3393  0002BA  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3394  0002BE  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3395  0002C2  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  3396  0002C6  0E02               	movlw	2
  3397  0002C8  26DE               	addwf	postinc2,f,c
  3398  0002CA  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  3399  0002CE  0E00               	movlw	0
  3400  0002D0  22DD               	addwfc	postdec2,f,c
  3401  0002D2  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3402  0002D6  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3403  0002DA  CFDE F04F          	movff	postinc2,??_vfpfcnvrt+2
  3404  0002DE  CFDD F050          	movff	postdec2,??_vfpfcnvrt+3
  3405  0002E2  C04F  F059         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3406  0002E6  C050  F05A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3407  0002EA  6A5B               	clrf	vfpfcnvrt@llu+2,c
  3408  0002EC  6A5C               	clrf	vfpfcnvrt@llu+3,c
  3409  0002EE  6A5D               	clrf	vfpfcnvrt@llu+4,c
  3410  0002F0  6A5E               	clrf	vfpfcnvrt@llu+5,c
  3411  0002F2  6A5F               	clrf	vfpfcnvrt@llu+6,c
  3412  0002F4  6A60               	clrf	vfpfcnvrt@llu+7,c
  3413                           
  3414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  3415  0002F6  C047  F020         	movff	vfpfcnvrt@fp,xtoa@fp
  3416  0002FA  C048  F021         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3417  0002FE  C059  F022         	movff	vfpfcnvrt@llu,xtoa@d
  3418  000302  C05A  F023         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3419  000306  C05B  F024         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3420  00030A  C05C  F025         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3421  00030E  C05D  F026         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3422  000312  C05E  F027         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3423  000316  C05F  F028         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3424  00031A  C060  F029         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3425  00031E  C065  F02A         	movff	vfpfcnvrt@c,xtoa@x
  3426  000322  EC41  F004         	call	_xtoa	;wreg free
  3427  000326  C020  F047         	movff	?_xtoa,?_vfpfcnvrt
  3428  00032A  C021  F048         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3429  00032E  0012               	return	
  3430  000330                     l2617:
  3431                           
  3432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3433  000330  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3434  000334  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3435  000338  CFDE FFF6          	movff	postinc2,tblptrl
  3436  00033C  CFDD FFF7          	movff	postdec2,tblptrh
  3437  000340                     	if	0	;tblptru may be non-zero
  3438  000340                     	endif
  3439  000340                     	if	0	;tblptru may be non-zero
  3440  000340                     	endif
  3441  000340  0008               	tblrd		*
  3442  000342  50F5               	movf	tablat,w,c
  3443  000344  0A25               	xorlw	37
  3444  000346  A4D8               	btfss	status,2,c
  3445  000348  D016               	goto	l2627
  3446                           
  3447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3448  00034A  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3449  00034E  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3450  000352  2ADE               	incf	postinc2,f,c
  3451  000354  0E00               	movlw	0
  3452  000356  22DD               	addwfc	postdec2,f,c
  3453                           
  3454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3455  000358  0E00               	movlw	0
  3456  00035A  6E06               	movwf	fputc@c+1,c
  3457  00035C  0E25               	movlw	37
  3458  00035E  6E05               	movwf	fputc@c,c
  3459  000360  C047  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3460  000364  C048  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3461  000368  EC59  F00A         	call	_fputc	;wreg free
  3462  00036C                     l2623:
  3463                           
  3464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3465  00036C  0E00               	movlw	0
  3466  00036E  6E48               	movwf	?_vfpfcnvrt+1,c
  3467  000370  0E01               	movlw	1
  3468  000372  6E47               	movwf	?_vfpfcnvrt,c
  3469  000374  0012               	return	
  3470  000376                     l2627:
  3471                           
  3472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3473  000376  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3474  00037A  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3475  00037E  2ADE               	incf	postinc2,f,c
  3476  000380  0E00               	movlw	0
  3477  000382  22DD               	addwfc	postdec2,f,c
  3478                           
  3479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3480  000384  0E00               	movlw	0
  3481  000386  6E48               	movwf	?_vfpfcnvrt+1,c
  3482  000388  0E00               	movlw	0
  3483  00038A  6E47               	movwf	?_vfpfcnvrt,c
  3484  00038C  0012               	return	
  3485  00038E                     l2633:
  3486                           
  3487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3488  00038E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3489  000392  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3490  000396  CFDE FFF6          	movff	postinc2,tblptrl
  3491  00039A  CFDD FFF7          	movff	postdec2,tblptrh
  3492  00039E                     	if	0	;tblptru may be non-zero
  3493  00039E                     	endif
  3494  00039E                     	if	0	;tblptru may be non-zero
  3495  00039E                     	endif
  3496  00039E  0008               	tblrd		*
  3497  0003A0  50F5               	movf	tablat,w,c
  3498  0003A2  6E05               	movwf	fputc@c,c
  3499  0003A4  6A06               	clrf	fputc@c+1,c
  3500  0003A6  C047  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3501  0003AA  C048  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3502  0003AE  EC59  F00A         	call	_fputc	;wreg free
  3503                           
  3504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3505  0003B2  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3506  0003B6  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3507  0003BA  2ADE               	incf	postinc2,f,c
  3508  0003BC  0E00               	movlw	0
  3509  0003BE  22DD               	addwfc	postdec2,f,c
  3510  0003C0  D7D5               	goto	l2623
  3511  0003C2                     __end_of_vfpfcnvrt:
  3512                           	opt callstack 0
  3513                           
  3514 ;; *************** function _xtoa *****************
  3515 ;; Defined at:
  3516 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  3519 ;;		 -> NULL(0), 
  3520 ;;  d               8   33[COMRAM] unsigned long long 
  3521 ;;  x               1   41[COMRAM] unsigned char 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  n               8   58[COMRAM] unsigned long long 
  3524 ;;  c               2   68[COMRAM] int 
  3525 ;;  i               2   66[COMRAM] int 
  3526 ;;  w               2   56[COMRAM] int 
  3527 ;;  p               2   54[COMRAM] int 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  2   31[COMRAM] int 
  3530 ;; Registers used:
  3531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3537 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;Total ram usage:       39 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    8
  3544 ;; This function calls:
  3545 ;;		_isalpha
  3546 ;;		_isupper
  3547 ;;		_pad
  3548 ;;		_toupper
  3549 ;; This function is called by:
  3550 ;;		_vfpfcnvrt
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text11
  3555  000882                     __ptext11:
  3556                           	opt callstack 0
  3557  000882                     _xtoa:
  3558                           	opt callstack 18
  3559                           
  3560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  3561                           
  3562                           ;incstack = 0
  3563  000882  0100               	movlb	0	; () banked
  3564  000884  AF85               	btfss	(_prec+1)& (0+255),7,b
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  3568  000886  9386               	bcf	_flags& (0+255),1,b
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  3572  000888  BF85               	btfsc	(_prec+1)& (0+255),7,b
  3573  00088A  D005               	goto	u1970
  3574  00088C  5185               	movf	(_prec+1)& (0+255),w,b
  3575  00088E  E108               	bnz	l293
  3576  000890  0584               	decf	_prec& (0+255),w,b
  3577  000892  B0D8               	btfsc	status,0,c
  3578  000894  D005               	goto	l293
  3579  000896                     u1970:
  3580                           
  3581                           ; BSR set to: 0
  3582  000896  0E00               	movlw	0
  3583  000898  6E38               	movwf	xtoa@p+1,c
  3584  00089A  0E01               	movlw	1
  3585  00089C  6E37               	movwf	xtoa@p,c
  3586  00089E  D004               	goto	l295
  3587  0008A0                     l293:
  3588                           
  3589                           ; BSR set to: 0
  3590  0008A0  C084  F037         	movff	_prec,xtoa@p
  3591  0008A4  C085  F038         	movff	_prec+1,xtoa@p+1
  3592  0008A8                     l295:
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  3596  0008A8  C082  F039         	movff	_width,xtoa@w
  3597  0008AC  C083  F03A         	movff	_width+1,xtoa@w+1
  3598                           
  3599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  3600  0008B0  A986               	btfss	_flags& (0+255),4,b
  3601  0008B2  D004               	goto	l2437
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  3605  0008B4  0EFE               	movlw	254
  3606  0008B6  2639               	addwf	xtoa@w,f,c
  3607  0008B8  0EFF               	movlw	255
  3608  0008BA  223A               	addwfc	xtoa@w+1,f,c
  3609  0008BC                     l2437:
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  3613  0008BC  C022  F03B         	movff	xtoa@d,xtoa@n
  3614  0008C0  C023  F03C         	movff	xtoa@d+1,xtoa@n+1
  3615  0008C4  C024  F03D         	movff	xtoa@d+2,xtoa@n+2
  3616  0008C8  C025  F03E         	movff	xtoa@d+3,xtoa@n+3
  3617  0008CC  C026  F03F         	movff	xtoa@d+4,xtoa@n+4
  3618  0008D0  C027  F040         	movff	xtoa@d+5,xtoa@n+5
  3619  0008D4  C028  F041         	movff	xtoa@d+6,xtoa@n+6
  3620  0008D8  C029  F042         	movff	xtoa@d+7,xtoa@n+7
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  3624  0008DC  0E00               	movlw	0
  3625  0008DE  6E44               	movwf	xtoa@i+1,c
  3626  0008E0  0E1F               	movlw	31
  3627  0008E2  6E43               	movwf	xtoa@i,c
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  3631  0008E4  0E00               	movlw	0
  3632  0008E6  6FAD               	movwf	(_dbuf+31)& (0+255),b
  3633                           
  3634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3635  0008E8  D093               	goto	l2473
  3636  0008EA                     l2443:
  3637                           
  3638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  3639  0008EA  0643               	decf	xtoa@i,f,c
  3640  0008EC  A0D8               	btfss	status,0,c
  3641  0008EE  0644               	decf	xtoa@i+1,f,c
  3642                           
  3643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  3644  0008F0  0E0F               	movlw	15
  3645  0008F2  143B               	andwf	xtoa@n,w,c
  3646  0008F4  6E45               	movwf	xtoa@c,c
  3647  0008F6  6A46               	clrf	xtoa@c+1,c
  3648                           
  3649                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  3650  0008F8  BE46               	btfsc	xtoa@c+1,7,c
  3651  0008FA  D008               	goto	l2451
  3652  0008FC  5046               	movf	xtoa@c+1,w,c
  3653  0008FE  E104               	bnz	u1990
  3654  000900  0E0A               	movlw	10
  3655  000902  5C45               	subwf	xtoa@c,w,c
  3656  000904  A0D8               	btfss	status,0,c
  3657  000906  D002               	goto	l2451
  3658  000908                     u1990:
  3659  000908  0E57               	movlw	87
  3660  00090A  D001               	goto	L4
  3661  00090C                     l2451:
  3662  00090C  0E30               	movlw	48
  3663  00090E                     L4:
  3664  00090E  2445               	addwf	xtoa@c,w,c
  3665  000910  6E45               	movwf	xtoa@c,c
  3666  000912  0E00               	movlw	0
  3667  000914  2046               	addwfc	xtoa@c+1,w,c
  3668  000916  6E46               	movwf	xtoa@c+1,c
  3669                           
  3670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  3671  000918  0EBF               	movlw	191
  3672  00091A  6E2B               	movwf	??_xtoa& (0+255),c
  3673  00091C  0EFF               	movlw	255
  3674  00091E  6E2C               	movwf	(??_xtoa+1)& (0+255),c
  3675  000920  502A               	movf	xtoa@x,w,c
  3676  000922  6E2D               	movwf	(??_xtoa+2)& (0+255),c
  3677  000924  6A2E               	clrf	(??_xtoa+3)& (0+255),c
  3678  000926  502B               	movf	??_xtoa,w,c
  3679  000928  262D               	addwf	??_xtoa+2,f,c
  3680  00092A  502C               	movf	??_xtoa+1,w,c
  3681  00092C  222E               	addwfc	??_xtoa+3,f,c
  3682  00092E  502E               	movf	??_xtoa+3,w,c
  3683  000930  E106               	bnz	u2000
  3684  000932  0E1A               	movlw	26
  3685  000934  5C2D               	subwf	??_xtoa+2,w,c
  3686  000936  B0D8               	btfsc	status,0,c
  3687  000938  D002               	goto	u2000
  3688  00093A  0E01               	movlw	1
  3689  00093C  D001               	goto	u2010
  3690  00093E                     u2000:
  3691  00093E  0E00               	movlw	0
  3692  000940                     u2010:
  3693  000940  6E33               	movwf	_xtoa$534,c
  3694  000942  6A34               	clrf	_xtoa$534+1,c
  3695  000944  5033               	movf	_xtoa$534,w,c
  3696  000946  1034               	iorwf	_xtoa$534+1,w,c
  3697  000948  B4D8               	btfsc	status,2,c
  3698  00094A  D027               	goto	l2465
  3699  00094C  0E9F               	movlw	159
  3700  00094E  6E2B               	movwf	??_xtoa& (0+255),c
  3701  000950  0EFF               	movlw	255
  3702  000952  6E2C               	movwf	(??_xtoa+1)& (0+255),c
  3703  000954  0E20               	movlw	32
  3704  000956  1045               	iorwf	xtoa@c,w,c
  3705  000958  6E2D               	movwf	(??_xtoa+2)& (0+255),c
  3706  00095A  0E00               	movlw	0
  3707  00095C  1046               	iorwf	xtoa@c+1,w,c
  3708  00095E  6E2E               	movwf	(??_xtoa+3)& (0+255),c
  3709  000960  502B               	movf	??_xtoa,w,c
  3710  000962  262D               	addwf	??_xtoa+2,f,c
  3711  000964  502C               	movf	??_xtoa+1,w,c
  3712  000966  222E               	addwfc	??_xtoa+3,f,c
  3713  000968  502E               	movf	??_xtoa+3,w,c
  3714  00096A  E106               	bnz	u2030
  3715  00096C  0E1A               	movlw	26
  3716  00096E  5C2D               	subwf	??_xtoa+2,w,c
  3717  000970  B0D8               	btfsc	status,0,c
  3718  000972  D002               	goto	u2030
  3719  000974  0E01               	movlw	1
  3720  000976  D001               	goto	u2040
  3721  000978                     u2030:
  3722  000978  0E00               	movlw	0
  3723  00097A                     u2040:
  3724  00097A  6E35               	movwf	_xtoa$535,c
  3725  00097C  6A36               	clrf	_xtoa$535+1,c
  3726  00097E  5035               	movf	_xtoa$535,w,c
  3727  000980  1036               	iorwf	_xtoa$535+1,w,c
  3728  000982  B4D8               	btfsc	status,2,c
  3729  000984  D00A               	goto	l2465
  3730                           
  3731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  3732  000986  C045  F007         	movff	xtoa@c,toupper@c
  3733  00098A  C046  F008         	movff	xtoa@c+1,toupper@c+1
  3734  00098E  EC7F  F00B         	call	_toupper	;wreg free
  3735  000992  C007  F045         	movff	?_toupper,xtoa@c
  3736  000996  C008  F046         	movff	?_toupper+1,xtoa@c+1
  3737  00099A                     l2465:
  3738                           
  3739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  3740  00099A  0E8E               	movlw	low _dbuf
  3741  00099C  2443               	addwf	xtoa@i,w,c
  3742  00099E  6ED9               	movwf	fsr2l,c
  3743  0009A0  0E00               	movlw	high _dbuf
  3744  0009A2  2044               	addwfc	xtoa@i+1,w,c
  3745  0009A4  6EDA               	movwf	fsr2h,c
  3746  0009A6  C045  FFDF         	movff	xtoa@c,indf2
  3747                           
  3748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  3749  0009AA  0637               	decf	xtoa@p,f,c
  3750  0009AC  A0D8               	btfss	status,0,c
  3751  0009AE  0638               	decf	xtoa@p+1,f,c
  3752                           
  3753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  3754  0009B0  0639               	decf	xtoa@w,f,c
  3755  0009B2  A0D8               	btfss	status,0,c
  3756  0009B4  063A               	decf	xtoa@w+1,f,c
  3757                           
  3758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  3759  0009B6  C03B  F02B         	movff	xtoa@n,??_xtoa
  3760  0009BA  C03C  F02C         	movff	xtoa@n+1,??_xtoa+1
  3761  0009BE  C03D  F02D         	movff	xtoa@n+2,??_xtoa+2
  3762  0009C2  C03E  F02E         	movff	xtoa@n+3,??_xtoa+3
  3763  0009C6  C03F  F02F         	movff	xtoa@n+4,??_xtoa+4
  3764  0009CA  C040  F030         	movff	xtoa@n+5,??_xtoa+5
  3765  0009CE  C041  F031         	movff	xtoa@n+6,??_xtoa+6
  3766  0009D2  C042  F032         	movff	xtoa@n+7,??_xtoa+7
  3767  0009D6  0E05               	movlw	5
  3768  0009D8  D009               	goto	u2060
  3769  0009DA                     u2065:
  3770  0009DA  90D8               	bcf	status,0,c
  3771  0009DC  3232               	rrcf	??_xtoa+7,f,c
  3772  0009DE  3231               	rrcf	??_xtoa+6,f,c
  3773  0009E0  3230               	rrcf	??_xtoa+5,f,c
  3774  0009E2  322F               	rrcf	??_xtoa+4,f,c
  3775  0009E4  322E               	rrcf	??_xtoa+3,f,c
  3776  0009E6  322D               	rrcf	??_xtoa+2,f,c
  3777  0009E8  322C               	rrcf	??_xtoa+1,f,c
  3778  0009EA  322B               	rrcf	??_xtoa,f,c
  3779  0009EC                     u2060:
  3780  0009EC  2EE8               	decfsz	wreg,f,c
  3781  0009EE  D7F5               	goto	u2065
  3782  0009F0  C02B  F03B         	movff	??_xtoa,xtoa@n
  3783  0009F4  C02C  F03C         	movff	??_xtoa+1,xtoa@n+1
  3784  0009F8  C02D  F03D         	movff	??_xtoa+2,xtoa@n+2
  3785  0009FC  C02E  F03E         	movff	??_xtoa+3,xtoa@n+3
  3786  000A00  C02F  F03F         	movff	??_xtoa+4,xtoa@n+4
  3787  000A04  C030  F040         	movff	??_xtoa+5,xtoa@n+5
  3788  000A08  C031  F041         	movff	??_xtoa+6,xtoa@n+6
  3789  000A0C  C032  F042         	movff	??_xtoa+7,xtoa@n+7
  3790  000A10                     l2473:
  3791                           
  3792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3793  000A10  BE44               	btfsc	xtoa@i+1,7,c
  3794  000A12  D021               	goto	u2110
  3795  000A14  5044               	movf	xtoa@i+1,w,c
  3796  000A16  E104               	bnz	u2070
  3797  000A18  0E02               	movlw	2
  3798  000A1A  5C43               	subwf	xtoa@i,w,c
  3799  000A1C  A0D8               	btfss	status,0,c
  3800  000A1E  D01B               	goto	u2110
  3801  000A20                     u2070:
  3802  000A20  503B               	movf	xtoa@n,w,c
  3803  000A22  103C               	iorwf	xtoa@n+1,w,c
  3804  000A24  103D               	iorwf	xtoa@n+2,w,c
  3805  000A26  103E               	iorwf	xtoa@n+3,w,c
  3806  000A28  103F               	iorwf	xtoa@n+4,w,c
  3807  000A2A  1040               	iorwf	xtoa@n+5,w,c
  3808  000A2C  1041               	iorwf	xtoa@n+6,w,c
  3809  000A2E  1042               	iorwf	xtoa@n+7,w,c
  3810  000A30  A4D8               	btfss	status,2,c
  3811  000A32  D75B               	goto	l2443
  3812  000A34  BE38               	btfsc	xtoa@p+1,7,c
  3813  000A36  D005               	goto	u2090
  3814  000A38  5038               	movf	xtoa@p+1,w,c
  3815  000A3A  E102               	bnz	u2091
  3816  000A3C  0437               	decf	xtoa@p,w,c
  3817  000A3E  B0D8               	btfsc	status,0,c
  3818  000A40                     u2091:
  3819  000A40  D754               	goto	l2443
  3820  000A42                     u2090:
  3821  000A42  BE3A               	btfsc	xtoa@w+1,7,c
  3822  000A44  D008               	goto	u2110
  3823  000A46  503A               	movf	xtoa@w+1,w,c
  3824  000A48  E103               	bnz	u2100
  3825  000A4A  0439               	decf	xtoa@w,w,c
  3826  000A4C  A0D8               	btfss	status,0,c
  3827  000A4E  D003               	goto	u2110
  3828  000A50                     u2100:
  3829  000A50  0100               	movlb	0	; () banked
  3830  000A52  B386               	btfsc	_flags& (0+255),1,b
  3831  000A54  D74A               	goto	l2443
  3832  000A56                     u2110:
  3833                           
  3834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  3835  000A56  0100               	movlb	0	; () banked
  3836  000A58  A986               	btfss	_flags& (0+255),4,b
  3837  000A5A  D016               	goto	l2489
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  3841  000A5C  0643               	decf	xtoa@i,f,c
  3842  000A5E  A0D8               	btfss	status,0,c
  3843  000A60  0644               	decf	xtoa@i+1,f,c
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  3847  000A62  0E8E               	movlw	low _dbuf
  3848  000A64  2443               	addwf	xtoa@i,w,c
  3849  000A66  6ED9               	movwf	fsr2l,c
  3850  000A68  0E00               	movlw	high _dbuf
  3851  000A6A  2044               	addwfc	xtoa@i+1,w,c
  3852  000A6C  6EDA               	movwf	fsr2h,c
  3853  000A6E  C02A  FFDF         	movff	xtoa@x,indf2
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  3857  000A72  0643               	decf	xtoa@i,f,c
  3858  000A74  A0D8               	btfss	status,0,c
  3859  000A76  0644               	decf	xtoa@i+1,f,c
  3860                           
  3861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  3862  000A78  0E8E               	movlw	low _dbuf
  3863  000A7A  2443               	addwf	xtoa@i,w,c
  3864  000A7C  6ED9               	movwf	fsr2l,c
  3865  000A7E  0E00               	movlw	high _dbuf
  3866  000A80  2044               	addwfc	xtoa@i+1,w,c
  3867  000A82  6EDA               	movwf	fsr2h,c
  3868  000A84  0E30               	movlw	48
  3869  000A86  6EDF               	movwf	indf2,c
  3870  000A88                     l2489:
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  3874  000A88  C020  F015         	movff	xtoa@fp,pad@fp
  3875  000A8C  C021  F016         	movff	xtoa@fp+1,pad@fp+1
  3876  000A90  0E8E               	movlw	low _dbuf
  3877  000A92  2443               	addwf	xtoa@i,w,c
  3878  000A94  6E17               	movwf	pad@buf,c
  3879  000A96  0E00               	movlw	high _dbuf
  3880  000A98  2044               	addwfc	xtoa@i+1,w,c
  3881  000A9A  6E18               	movwf	pad@buf+1,c
  3882  000A9C  C039  F019         	movff	xtoa@w,pad@p
  3883  000AA0  C03A  F01A         	movff	xtoa@w+1,pad@p+1
  3884  000AA4  EC1A  F009         	call	_pad	;wreg free
  3885  000AA8  C015  F020         	movff	?_pad,?_xtoa
  3886  000AAC  C016  F021         	movff	?_pad+1,?_xtoa+1
  3887  000AB0  0012               	return		;funcret
  3888  000AB2                     __end_of_xtoa:
  3889                           	opt callstack 0
  3890                           
  3891 ;; *************** function _toupper *****************
  3892 ;; Defined at:
  3893 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  c               2    6[COMRAM] int 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  2    6[COMRAM] int 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3909 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;Total ram usage:        8 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    2
  3914 ;; This function calls:
  3915 ;;		_islower
  3916 ;; This function is called by:
  3917 ;;		_xtoa
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text12
  3922  0016FE                     __ptext12:
  3923                           	opt callstack 0
  3924  0016FE                     _toupper:
  3925                           	opt callstack 23
  3926                           
  3927                           ;incstack = 0
  3928  0016FE  0E9F               	movlw	159
  3929  001700  6E09               	movwf	??_toupper& (0+255),c
  3930  001702  0EFF               	movlw	255
  3931  001704  6E0A               	movwf	(??_toupper+1)& (0+255),c
  3932  001706  C007  F00B         	movff	toupper@c,??_toupper+2
  3933  00170A  C008  F00C         	movff	toupper@c+1,??_toupper+3
  3934  00170E  5009               	movf	??_toupper,w,c
  3935  001710  260B               	addwf	??_toupper+2,f,c
  3936  001712  500A               	movf	??_toupper+1,w,c
  3937  001714  220C               	addwfc	??_toupper+3,f,c
  3938  001716  500C               	movf	??_toupper+3,w,c
  3939  001718  E106               	bnz	u1610
  3940  00171A  0E1A               	movlw	26
  3941  00171C  5C0B               	subwf	??_toupper+2,w,c
  3942  00171E  B0D8               	btfsc	status,0,c
  3943  001720  D002               	goto	u1610
  3944  001722  0E01               	movlw	1
  3945  001724  D001               	goto	u1620
  3946  001726                     u1610:
  3947  001726  0E00               	movlw	0
  3948  001728                     u1620:
  3949  001728  6E0D               	movwf	_toupper$1099,c
  3950  00172A  6A0E               	clrf	_toupper$1099+1,c
  3951  00172C  500D               	movf	_toupper$1099,w,c
  3952  00172E  100E               	iorwf	_toupper$1099+1,w,c
  3953  001730  B4D8               	btfsc	status,2,c
  3954  001732  D005               	goto	l1133
  3955  001734  0E5F               	movlw	95
  3956  001736  1407               	andwf	toupper@c,w,c
  3957  001738  6E07               	movwf	?_toupper,c
  3958  00173A  6A08               	clrf	?_toupper+1,c
  3959  00173C  0012               	return	
  3960  00173E                     l1133:
  3961  00173E  C007  F007         	movff	toupper@c,?_toupper
  3962  001742  C008  F008         	movff	toupper@c+1,?_toupper+1
  3963  001746  0012               	return		;funcret
  3964  001748                     __end_of_toupper:
  3965                           	opt callstack 0
  3966                           
  3967 ;; *************** function _islower *****************
  3968 ;; Defined at:
  3969 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;  c               2    0[COMRAM] int 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;		None
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  2    0[COMRAM] int 
  3976 ;; Registers used:
  3977 ;;		wreg, status,2, status,0
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;Total ram usage:        6 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    1
  3990 ;; This function calls:
  3991 ;;		Nothing
  3992 ;; This function is called by:
  3993 ;;		_toupper
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text13
  3998  001824                     __ptext13:
  3999                           	opt callstack 0
  4000  001824                     _islower:
  4001                           	opt callstack 23
  4002                           
  4003                           ;incstack = 0
  4004  001824  0E9F               	movlw	159
  4005  001826  6E03               	movwf	??_islower& (0+255),c
  4006  001828  0EFF               	movlw	255
  4007  00182A  6E04               	movwf	(??_islower+1)& (0+255),c
  4008  00182C  C001  F005         	movff	islower@c,??_islower+2
  4009  001830  C002  F006         	movff	islower@c+1,??_islower+3
  4010  001834  5003               	movf	??_islower,w,c
  4011  001836  2605               	addwf	??_islower+2,f,c
  4012  001838  5004               	movf	??_islower+1,w,c
  4013  00183A  2206               	addwfc	??_islower+3,f,c
  4014  00183C  5006               	movf	??_islower+3,w,c
  4015  00183E  E106               	bnz	u1500
  4016  001840  0E1A               	movlw	26
  4017  001842  5C05               	subwf	??_islower+2,w,c
  4018  001844  B0D8               	btfsc	status,0,c
  4019  001846  D002               	goto	u1500
  4020  001848  0E01               	movlw	1
  4021  00184A  D001               	goto	u1510
  4022  00184C                     u1500:
  4023  00184C  0E00               	movlw	0
  4024  00184E                     u1510:
  4025  00184E  6E01               	movwf	?_islower,c
  4026  001850  6A02               	clrf	?_islower+1,c
  4027  001852  0012               	return		;funcret
  4028  001854                     __end_of_islower:
  4029                           	opt callstack 0
  4030                           
  4031 ;; *************** function _isupper *****************
  4032 ;; Defined at:
  4033 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;  c               2    0[COMRAM] int 
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;		None
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  2    0[COMRAM] int 
  4040 ;; Registers used:
  4041 ;;		wreg, status,2, status,0
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4049 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4050 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4051 ;;Total ram usage:        6 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:    1
  4054 ;; This function calls:
  4055 ;;		Nothing
  4056 ;; This function is called by:
  4057 ;;		_xtoa
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text14
  4062  001854                     __ptext14:
  4063                           	opt callstack 0
  4064  001854                     _isupper:
  4065                           	opt callstack 24
  4066                           
  4067                           ;incstack = 0
  4068  001854  0EBF               	movlw	191
  4069  001856  6E03               	movwf	??_isupper& (0+255),c
  4070  001858  0EFF               	movlw	255
  4071  00185A  6E04               	movwf	(??_isupper+1)& (0+255),c
  4072  00185C  C001  F005         	movff	isupper@c,??_isupper+2
  4073  001860  C002  F006         	movff	isupper@c+1,??_isupper+3
  4074  001864  5003               	movf	??_isupper,w,c
  4075  001866  2605               	addwf	??_isupper+2,f,c
  4076  001868  5004               	movf	??_isupper+1,w,c
  4077  00186A  2206               	addwfc	??_isupper+3,f,c
  4078  00186C  5006               	movf	??_isupper+3,w,c
  4079  00186E  E106               	bnz	u1570
  4080  001870  0E1A               	movlw	26
  4081  001872  5C05               	subwf	??_isupper+2,w,c
  4082  001874  B0D8               	btfsc	status,0,c
  4083  001876  D002               	goto	u1570
  4084  001878  0E01               	movlw	1
  4085  00187A  D001               	goto	u1580
  4086  00187C                     u1570:
  4087  00187C  0E00               	movlw	0
  4088  00187E                     u1580:
  4089  00187E  6E01               	movwf	?_isupper,c
  4090  001880  6A02               	clrf	?_isupper+1,c
  4091  001882  0012               	return		;funcret
  4092  001884                     __end_of_isupper:
  4093                           	opt callstack 0
  4094                           
  4095 ;; *************** function _isalpha *****************
  4096 ;; Defined at:
  4097 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  c               2    0[COMRAM] int 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;		None
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  2    0[COMRAM] int 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;Total ram usage:        6 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:    1
  4118 ;; This function calls:
  4119 ;;		Nothing
  4120 ;; This function is called by:
  4121 ;;		_xtoa
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text15
  4126  0017BE                     __ptext15:
  4127                           	opt callstack 0
  4128  0017BE                     _isalpha:
  4129                           	opt callstack 24
  4130                           
  4131                           ;incstack = 0
  4132  0017BE  0E9F               	movlw	159
  4133  0017C0  6E03               	movwf	??_isalpha& (0+255),c
  4134  0017C2  0EFF               	movlw	255
  4135  0017C4  6E04               	movwf	(??_isalpha+1)& (0+255),c
  4136  0017C6  0E20               	movlw	32
  4137  0017C8  1001               	iorwf	isalpha@c,w,c
  4138  0017CA  6E05               	movwf	(??_isalpha+2)& (0+255),c
  4139  0017CC  0E00               	movlw	0
  4140  0017CE  1002               	iorwf	isalpha@c+1,w,c
  4141  0017D0  6E06               	movwf	(??_isalpha+3)& (0+255),c
  4142  0017D2  5003               	movf	??_isalpha,w,c
  4143  0017D4  2605               	addwf	??_isalpha+2,f,c
  4144  0017D6  5004               	movf	??_isalpha+1,w,c
  4145  0017D8  2206               	addwfc	??_isalpha+3,f,c
  4146  0017DA  5006               	movf	??_isalpha+3,w,c
  4147  0017DC  E106               	bnz	u1590
  4148  0017DE  0E1A               	movlw	26
  4149  0017E0  5C05               	subwf	??_isalpha+2,w,c
  4150  0017E2  B0D8               	btfsc	status,0,c
  4151  0017E4  D002               	goto	u1590
  4152  0017E6  0E01               	movlw	1
  4153  0017E8  D001               	goto	u1600
  4154  0017EA                     u1590:
  4155  0017EA  0E00               	movlw	0
  4156  0017EC                     u1600:
  4157  0017EC  6E01               	movwf	?_isalpha,c
  4158  0017EE  6A02               	clrf	?_isalpha+1,c
  4159  0017F0  0012               	return		;funcret
  4160  0017F2                     __end_of_isalpha:
  4161                           	opt callstack 0
  4162                           
  4163 ;; *************** function _dtoa *****************
  4164 ;; Defined at:
  4165 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  4168 ;;		 -> NULL(0), 
  4169 ;;  d               8   33[COMRAM] long long 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  n               8   57[COMRAM] long long 
  4172 ;;  i               2   65[COMRAM] int 
  4173 ;;  s               2   55[COMRAM] int 
  4174 ;;  w               2   53[COMRAM] int 
  4175 ;;  p               2   51[COMRAM] int 
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  2   31[COMRAM] int 
  4178 ;; Registers used:
  4179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4185 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4188 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;Total ram usage:       36 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    8
  4192 ;; This function calls:
  4193 ;;		___aodiv
  4194 ;;		___aomod
  4195 ;;		_abs
  4196 ;;		_pad
  4197 ;; This function is called by:
  4198 ;;		_vfpfcnvrt
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           	psect	text16
  4203  00063C                     __ptext16:
  4204                           	opt callstack 0
  4205  00063C                     _dtoa:
  4206                           	opt callstack 18
  4207                           
  4208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4209                           
  4210                           ;incstack = 0
  4211  00063C  C022  F03A         	movff	dtoa@d,dtoa@n
  4212  000640  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  4213  000644  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  4214  000648  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  4215  00064C  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  4216  000650  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  4217  000654  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  4218  000658  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  4219                           
  4220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  4221  00065C  AE41               	btfss	dtoa@n+7,7,c
  4222  00065E  D002               	goto	u1810
  4223  000660  0E01               	movlw	1
  4224  000662  D001               	goto	u1820
  4225  000664                     u1810:
  4226  000664  0E00               	movlw	0
  4227  000666                     u1820:
  4228  000666  6E38               	movwf	dtoa@s,c
  4229  000668  6A39               	clrf	dtoa@s+1,c
  4230                           
  4231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  4232  00066A  5038               	movf	dtoa@s,w,c
  4233  00066C  1039               	iorwf	dtoa@s+1,w,c
  4234  00066E  B4D8               	btfsc	status,2,c
  4235  000670  D010               	goto	l2371
  4236                           
  4237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4238  000672  1E41               	comf	dtoa@n+7,f,c
  4239  000674  1E40               	comf	dtoa@n+6,f,c
  4240  000676  1E3F               	comf	dtoa@n+5,f,c
  4241  000678  1E3E               	comf	dtoa@n+4,f,c
  4242  00067A  1E3D               	comf	dtoa@n+3,f,c
  4243  00067C  1E3C               	comf	dtoa@n+2,f,c
  4244  00067E  1E3B               	comf	dtoa@n+1,f,c
  4245  000680  6C3A               	negf	dtoa@n,c
  4246  000682  0E00               	movlw	0
  4247  000684  223B               	addwfc	dtoa@n+1,f,c
  4248  000686  223C               	addwfc	dtoa@n+2,f,c
  4249  000688  223D               	addwfc	dtoa@n+3,f,c
  4250  00068A  223E               	addwfc	dtoa@n+4,f,c
  4251  00068C  223F               	addwfc	dtoa@n+5,f,c
  4252  00068E  2240               	addwfc	dtoa@n+6,f,c
  4253  000690  2241               	addwfc	dtoa@n+7,f,c
  4254  000692                     l2371:
  4255                           
  4256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  4257  000692  0100               	movlb	0	; () banked
  4258  000694  AF85               	btfss	(_prec+1)& (0+255),7,b
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4262  000696  9386               	bcf	_flags& (0+255),1,b
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4266  000698  BF85               	btfsc	(_prec+1)& (0+255),7,b
  4267  00069A  D005               	goto	u1850
  4268  00069C  5185               	movf	(_prec+1)& (0+255),w,b
  4269  00069E  E108               	bnz	l268
  4270  0006A0  0584               	decf	_prec& (0+255),w,b
  4271  0006A2  B0D8               	btfsc	status,0,c
  4272  0006A4  D005               	goto	l268
  4273  0006A6                     u1850:
  4274                           
  4275                           ; BSR set to: 0
  4276  0006A6  0E00               	movlw	0
  4277  0006A8  6E35               	movwf	dtoa@p+1,c
  4278  0006AA  0E01               	movlw	1
  4279  0006AC  6E34               	movwf	dtoa@p,c
  4280  0006AE  D004               	goto	l270
  4281  0006B0                     l268:
  4282                           
  4283                           ; BSR set to: 0
  4284  0006B0  C084  F034         	movff	_prec,dtoa@p
  4285  0006B4  C085  F035         	movff	_prec+1,dtoa@p+1
  4286  0006B8                     l270:
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4290  0006B8  C082  F036         	movff	_width,dtoa@w
  4291  0006BC  C083  F037         	movff	_width+1,dtoa@w+1
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4295  0006C0  5038               	movf	dtoa@s,w,c
  4296  0006C2  1039               	iorwf	dtoa@s+1,w,c
  4297  0006C4  A4D8               	btfss	status,2,c
  4298  0006C6  D002               	goto	u1870
  4299                           
  4300                           ; BSR set to: 0
  4301  0006C8  A586               	btfss	_flags& (0+255),2,b
  4302  0006CA  D003               	goto	l2385
  4303  0006CC                     u1870:
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4307  0006CC  0636               	decf	dtoa@w,f,c
  4308  0006CE  A0D8               	btfss	status,0,c
  4309  0006D0  0637               	decf	dtoa@w+1,f,c
  4310  0006D2                     l2385:
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4314  0006D2  0E00               	movlw	0
  4315  0006D4  6E43               	movwf	dtoa@i+1,c
  4316  0006D6  0E1F               	movlw	31
  4317  0006D8  6E42               	movwf	dtoa@i,c
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4321  0006DA  0E00               	movlw	0
  4322  0006DC  6FAD               	movwf	(_dbuf+31)& (0+255),b
  4323                           
  4324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4325  0006DE  D07C               	goto	l2399
  4326  0006E0                     l2389:
  4327                           
  4328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4329  0006E0  0642               	decf	dtoa@i,f,c
  4330  0006E2  A0D8               	btfss	status,0,c
  4331  0006E4  0643               	decf	dtoa@i+1,f,c
  4332                           
  4333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4334  0006E6  0E8E               	movlw	low _dbuf
  4335  0006E8  2442               	addwf	dtoa@i,w,c
  4336  0006EA  6ED9               	movwf	fsr2l,c
  4337  0006EC  0E00               	movlw	high _dbuf
  4338  0006EE  2043               	addwfc	dtoa@i+1,w,c
  4339  0006F0  6EDA               	movwf	fsr2h,c
  4340  0006F2  C03A  F001         	movff	dtoa@n,___aomod@dividend
  4341  0006F6  C03B  F002         	movff	dtoa@n+1,___aomod@dividend+1
  4342  0006FA  C03C  F003         	movff	dtoa@n+2,___aomod@dividend+2
  4343  0006FE  C03D  F004         	movff	dtoa@n+3,___aomod@dividend+3
  4344  000702  C03E  F005         	movff	dtoa@n+4,___aomod@dividend+4
  4345  000706  C03F  F006         	movff	dtoa@n+5,___aomod@dividend+5
  4346  00070A  C040  F007         	movff	dtoa@n+6,___aomod@dividend+6
  4347  00070E  C041  F008         	movff	dtoa@n+7,___aomod@dividend+7
  4348  000712  0E0A               	movlw	10
  4349  000714  6E09               	movwf	___aomod@divisor,c
  4350  000716  0E00               	movlw	0
  4351  000718  6E0A               	movwf	___aomod@divisor+1,c
  4352  00071A  0E00               	movlw	0
  4353  00071C  6E0B               	movwf	___aomod@divisor+2,c
  4354  00071E  0E00               	movlw	0
  4355  000720  6E0C               	movwf	___aomod@divisor+3,c
  4356  000722  0E00               	movlw	0
  4357  000724  6E0D               	movwf	___aomod@divisor+4,c
  4358  000726  0E00               	movlw	0
  4359  000728  6E0E               	movwf	___aomod@divisor+5,c
  4360  00072A  0E00               	movlw	0
  4361  00072C  6E0F               	movwf	___aomod@divisor+6,c
  4362  00072E  0E00               	movlw	0
  4363  000730  6E10               	movwf	___aomod@divisor+7,c
  4364  000732  EC21  F008         	call	___aomod	;wreg free
  4365  000736  C001  F02A         	movff	?___aomod,??_dtoa
  4366  00073A  C002  F02B         	movff	?___aomod+1,??_dtoa+1
  4367  00073E  C003  F02C         	movff	?___aomod+2,??_dtoa+2
  4368  000742  C004  F02D         	movff	?___aomod+3,??_dtoa+3
  4369  000746  C005  F02E         	movff	?___aomod+4,??_dtoa+4
  4370  00074A  C006  F02F         	movff	?___aomod+5,??_dtoa+5
  4371  00074E  C007  F030         	movff	?___aomod+6,??_dtoa+6
  4372  000752  C008  F031         	movff	?___aomod+7,??_dtoa+7
  4373  000756  C02A  F013         	movff	??_dtoa,abs@a
  4374  00075A  C02C  F014         	movff	??_dtoa+2,abs@a+1
  4375  00075E  ECF9  F00B         	call	_abs	;wreg free
  4376  000762  5013               	movf	?_abs,w,c
  4377  000764  0F30               	addlw	48
  4378  000766  6EDF               	movwf	indf2,c
  4379                           
  4380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  4381  000768  0634               	decf	dtoa@p,f,c
  4382  00076A  A0D8               	btfss	status,0,c
  4383  00076C  0635               	decf	dtoa@p+1,f,c
  4384                           
  4385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  4386  00076E  0636               	decf	dtoa@w,f,c
  4387  000770  A0D8               	btfss	status,0,c
  4388  000772  0637               	decf	dtoa@w+1,f,c
  4389                           
  4390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  4391  000774  C03A  F001         	movff	dtoa@n,___aodiv@dividend
  4392  000778  C03B  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  4393  00077C  C03C  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  4394  000780  C03D  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  4395  000784  C03E  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  4396  000788  C03F  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  4397  00078C  C040  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  4398  000790  C041  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  4399  000794  0E0A               	movlw	10
  4400  000796  6E09               	movwf	___aodiv@divisor,c
  4401  000798  0E00               	movlw	0
  4402  00079A  6E0A               	movwf	___aodiv@divisor+1,c
  4403  00079C  0E00               	movlw	0
  4404  00079E  6E0B               	movwf	___aodiv@divisor+2,c
  4405  0007A0  0E00               	movlw	0
  4406  0007A2  6E0C               	movwf	___aodiv@divisor+3,c
  4407  0007A4  0E00               	movlw	0
  4408  0007A6  6E0D               	movwf	___aodiv@divisor+4,c
  4409  0007A8  0E00               	movlw	0
  4410  0007AA  6E0E               	movwf	___aodiv@divisor+5,c
  4411  0007AC  0E00               	movlw	0
  4412  0007AE  6E0F               	movwf	___aodiv@divisor+6,c
  4413  0007B0  0E00               	movlw	0
  4414  0007B2  6E10               	movwf	___aodiv@divisor+7,c
  4415  0007B4  EC3A  F006         	call	___aodiv	;wreg free
  4416  0007B8  C001  F03A         	movff	?___aodiv,dtoa@n
  4417  0007BC  C002  F03B         	movff	?___aodiv+1,dtoa@n+1
  4418  0007C0  C003  F03C         	movff	?___aodiv+2,dtoa@n+2
  4419  0007C4  C004  F03D         	movff	?___aodiv+3,dtoa@n+3
  4420  0007C8  C005  F03E         	movff	?___aodiv+4,dtoa@n+4
  4421  0007CC  C006  F03F         	movff	?___aodiv+5,dtoa@n+5
  4422  0007D0  C007  F040         	movff	?___aodiv+6,dtoa@n+6
  4423  0007D4  C008  F041         	movff	?___aodiv+7,dtoa@n+7
  4424  0007D8                     l2399:
  4425                           
  4426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4427  0007D8  BE43               	btfsc	dtoa@i+1,7,c
  4428  0007DA  D020               	goto	u1920
  4429  0007DC  5043               	movf	dtoa@i+1,w,c
  4430  0007DE  E103               	bnz	u1880
  4431  0007E0  0442               	decf	dtoa@i,w,c
  4432  0007E2  A0D8               	btfss	status,0,c
  4433  0007E4  D01B               	goto	u1920
  4434  0007E6                     u1880:
  4435  0007E6  503A               	movf	dtoa@n,w,c
  4436  0007E8  103B               	iorwf	dtoa@n+1,w,c
  4437  0007EA  103C               	iorwf	dtoa@n+2,w,c
  4438  0007EC  103D               	iorwf	dtoa@n+3,w,c
  4439  0007EE  103E               	iorwf	dtoa@n+4,w,c
  4440  0007F0  103F               	iorwf	dtoa@n+5,w,c
  4441  0007F2  1040               	iorwf	dtoa@n+6,w,c
  4442  0007F4  1041               	iorwf	dtoa@n+7,w,c
  4443  0007F6  A4D8               	btfss	status,2,c
  4444  0007F8  D773               	goto	l2389
  4445  0007FA  BE35               	btfsc	dtoa@p+1,7,c
  4446  0007FC  D005               	goto	u1900
  4447  0007FE  5035               	movf	dtoa@p+1,w,c
  4448  000800  E102               	bnz	u1901
  4449  000802  0434               	decf	dtoa@p,w,c
  4450  000804  B0D8               	btfsc	status,0,c
  4451  000806                     u1901:
  4452  000806  D76C               	goto	l2389
  4453  000808                     u1900:
  4454  000808  BE37               	btfsc	dtoa@w+1,7,c
  4455  00080A  D008               	goto	u1920
  4456  00080C  5037               	movf	dtoa@w+1,w,c
  4457  00080E  E103               	bnz	u1910
  4458  000810  0436               	decf	dtoa@w,w,c
  4459  000812  A0D8               	btfss	status,0,c
  4460  000814  D003               	goto	u1920
  4461  000816                     u1910:
  4462  000816  0100               	movlb	0	; () banked
  4463  000818  B386               	btfsc	_flags& (0+255),1,b
  4464  00081A  D762               	goto	l2389
  4465  00081C                     u1920:
  4466                           
  4467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  4468  00081C  5038               	movf	dtoa@s,w,c
  4469  00081E  1039               	iorwf	dtoa@s+1,w,c
  4470  000820  A4D8               	btfss	status,2,c
  4471  000822  D003               	goto	u1940
  4472  000824  0100               	movlb	0	; () banked
  4473  000826  A586               	btfss	_flags& (0+255),2,b
  4474  000828  D017               	goto	l2423
  4475  00082A                     u1940:
  4476                           
  4477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  4478  00082A  0642               	decf	dtoa@i,f,c
  4479  00082C  A0D8               	btfss	status,0,c
  4480  00082E  0643               	decf	dtoa@i+1,f,c
  4481                           
  4482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  4483  000830  5038               	movf	dtoa@s,w,c
  4484  000832  1039               	iorwf	dtoa@s+1,w,c
  4485  000834  A4D8               	btfss	status,2,c
  4486  000836  D004               	goto	l2419
  4487  000838  0E00               	movlw	0
  4488  00083A  6E33               	movwf	_dtoa$523+1,c
  4489  00083C  0E2B               	movlw	43
  4490  00083E  D003               	goto	L5
  4491  000840                     l2419:
  4492  000840  0E00               	movlw	0
  4493  000842  6E33               	movwf	_dtoa$523+1,c
  4494  000844  0E2D               	movlw	45
  4495  000846                     L5:
  4496  000846  6E32               	movwf	_dtoa$523,c
  4497  000848  0E8E               	movlw	low _dbuf
  4498  00084A  2442               	addwf	dtoa@i,w,c
  4499  00084C  6ED9               	movwf	fsr2l,c
  4500  00084E  0E00               	movlw	high _dbuf
  4501  000850  2043               	addwfc	dtoa@i+1,w,c
  4502  000852  6EDA               	movwf	fsr2h,c
  4503  000854  C032  FFDF         	movff	_dtoa$523,indf2
  4504  000858                     l2423:
  4505                           
  4506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  4507  000858  C020  F015         	movff	dtoa@fp,pad@fp
  4508  00085C  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  4509  000860  0E8E               	movlw	low _dbuf
  4510  000862  2442               	addwf	dtoa@i,w,c
  4511  000864  6E17               	movwf	pad@buf,c
  4512  000866  0E00               	movlw	high _dbuf
  4513  000868  2043               	addwfc	dtoa@i+1,w,c
  4514  00086A  6E18               	movwf	pad@buf+1,c
  4515  00086C  C036  F019         	movff	dtoa@w,pad@p
  4516  000870  C037  F01A         	movff	dtoa@w+1,pad@p+1
  4517  000874  EC1A  F009         	call	_pad	;wreg free
  4518  000878  C015  F020         	movff	?_pad,?_dtoa
  4519  00087C  C016  F021         	movff	?_pad+1,?_dtoa+1
  4520  000880  0012               	return		;funcret
  4521  000882                     __end_of_dtoa:
  4522                           	opt callstack 0
  4523                           
  4524 ;; *************** function _pad *****************
  4525 ;; Defined at:
  4526 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  4529 ;;		 -> NULL(0), 
  4530 ;;  buf             2   22[COMRAM] PTR unsigned char 
  4531 ;;		 -> dbuf(32), 
  4532 ;;  p               2   24[COMRAM] int 
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;  w               2   29[COMRAM] int 
  4535 ;;  i               2   27[COMRAM] int 
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  2   20[COMRAM] int 
  4538 ;; Registers used:
  4539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4545 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;Total ram usage:       11 bytes
  4550 ;; Hardware stack levels used:    1
  4551 ;; Hardware stack levels required when called:    7
  4552 ;; This function calls:
  4553 ;;		_fputc
  4554 ;;		_fputs
  4555 ;;		_strlen
  4556 ;; This function is called by:
  4557 ;;		_dtoa
  4558 ;;		_xtoa
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           	psect	text17
  4563  001234                     __ptext17:
  4564                           	opt callstack 0
  4565  001234                     _pad:
  4566                           	opt callstack 18
  4567                           
  4568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4569                           
  4570                           ;incstack = 0
  4571  001234  0100               	movlb	0	; () banked
  4572  001236  A186               	btfss	_flags& (0+255),0,b
  4573  001238  D00A               	goto	l2223
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4577  00123A  C017  F00E         	movff	pad@buf,fputs@s
  4578  00123E  C018  F00F         	movff	pad@buf+1,fputs@s+1
  4579  001242  C015  F010         	movff	pad@fp,fputs@fp
  4580  001246  C016  F011         	movff	pad@fp+1,fputs@fp+1
  4581  00124A  ECC3  F00B         	call	_fputs	;wreg free
  4582  00124E                     l2223:
  4583                           
  4584                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4585  00124E  BE1A               	btfsc	pad@p+1,7,c
  4586  001250  D005               	goto	l2227
  4587  001252  C019  F01E         	movff	pad@p,pad@w
  4588  001256  C01A  F01F         	movff	pad@p+1,pad@w+1
  4589  00125A  D004               	goto	l257
  4590  00125C                     l2227:
  4591  00125C  0E00               	movlw	0
  4592  00125E  6E1F               	movwf	pad@w+1,c
  4593  001260  0E00               	movlw	0
  4594  001262  6E1E               	movwf	pad@w,c
  4595  001264                     l257:
  4596                           
  4597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4598  001264  0E00               	movlw	0
  4599  001266  6E1D               	movwf	pad@i+1,c
  4600  001268  0E00               	movlw	0
  4601  00126A  6E1C               	movwf	pad@i,c
  4602                           
  4603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4604  00126C  D00C               	goto	l2233
  4605  00126E                     l2229:
  4606                           
  4607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4608  00126E  0E00               	movlw	0
  4609  001270  6E06               	movwf	fputc@c+1,c
  4610  001272  0E20               	movlw	32
  4611  001274  6E05               	movwf	fputc@c,c
  4612  001276  C015  F007         	movff	pad@fp,fputc@fp
  4613  00127A  C016  F008         	movff	pad@fp+1,fputc@fp+1
  4614  00127E  EC59  F00A         	call	_fputc	;wreg free
  4615                           
  4616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4617  001282  4A1C               	infsnz	pad@i,f,c
  4618  001284  2A1D               	incf	pad@i+1,f,c
  4619  001286                     l2233:
  4620                           
  4621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4622  001286  501E               	movf	pad@w,w,c
  4623  001288  5C1C               	subwf	pad@i,w,c
  4624  00128A  501D               	movf	pad@i+1,w,c
  4625  00128C  0A80               	xorlw	128
  4626  00128E  6E1B               	movwf	??_pad& (0+255),c
  4627  001290  501F               	movf	pad@w+1,w,c
  4628  001292  0A80               	xorlw	128
  4629  001294  581B               	subwfb	??_pad& (0+255),w,c
  4630  001296  A0D8               	btfss	status,0,c
  4631  001298  D7EA               	goto	l2229
  4632                           
  4633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4634  00129A  0100               	movlb	0	; () banked
  4635  00129C  B186               	btfsc	_flags& (0+255),0,b
  4636  00129E  D00A               	goto	l2237
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4640  0012A0  C017  F00E         	movff	pad@buf,fputs@s
  4641  0012A4  C018  F00F         	movff	pad@buf+1,fputs@s+1
  4642  0012A8  C015  F010         	movff	pad@fp,fputs@fp
  4643  0012AC  C016  F011         	movff	pad@fp+1,fputs@fp+1
  4644  0012B0  ECC3  F00B         	call	_fputs	;wreg free
  4645  0012B4                     l2237:
  4646                           
  4647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4648  0012B4  C017  F001         	movff	pad@buf,strlen@s
  4649  0012B8  C018  F002         	movff	pad@buf+1,strlen@s+1
  4650  0012BC  EC5A  F00C         	call	_strlen	;wreg free
  4651  0012C0  501E               	movf	pad@w,w,c
  4652  0012C2  2401               	addwf	?_strlen,w,c
  4653  0012C4  6E15               	movwf	?_pad,c
  4654  0012C6  501F               	movf	pad@w+1,w,c
  4655  0012C8  2002               	addwfc	?_strlen+1,w,c
  4656  0012CA  6E16               	movwf	?_pad+1,c
  4657  0012CC  0012               	return		;funcret
  4658  0012CE                     __end_of_pad:
  4659                           	opt callstack 0
  4660                           
  4661 ;; *************** function _strlen *****************
  4662 ;; Defined at:
  4663 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4666 ;;		 -> dbuf(32), 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4669 ;;		 -> dbuf(32), 
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  2    0[COMRAM] unsigned int 
  4672 ;; Registers used:
  4673 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;Total ram usage:        4 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    1
  4686 ;; This function calls:
  4687 ;;		Nothing
  4688 ;; This function is called by:
  4689 ;;		_pad
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text18
  4694  0018B4                     __ptext18:
  4695                           	opt callstack 0
  4696  0018B4                     _strlen:
  4697                           	opt callstack 23
  4698                           
  4699                           ;incstack = 0
  4700  0018B4  C001  F003         	movff	strlen@s,strlen@a
  4701  0018B8  C002  F004         	movff	strlen@s+1,strlen@a+1
  4702  0018BC  D002               	goto	l2209
  4703  0018BE                     l2207:
  4704  0018BE  4A01               	infsnz	strlen@s,f,c
  4705  0018C0  2A02               	incf	strlen@s+1,f,c
  4706  0018C2                     l2209:
  4707  0018C2  C001  FFD9         	movff	strlen@s,fsr2l
  4708  0018C6  C002  FFDA         	movff	strlen@s+1,fsr2h
  4709  0018CA  50DF               	movf	indf2,w,c
  4710  0018CC  A4D8               	btfss	status,2,c
  4711  0018CE  D7F7               	goto	l2207
  4712  0018D0  5003               	movf	strlen@a,w,c
  4713  0018D2  5C01               	subwf	strlen@s,w,c
  4714  0018D4  6E01               	movwf	?_strlen,c
  4715  0018D6  5004               	movf	strlen@a+1,w,c
  4716  0018D8  5802               	subwfb	strlen@s+1,w,c
  4717  0018DA  6E02               	movwf	?_strlen+1,c
  4718  0018DC  0012               	return		;funcret
  4719  0018DE                     __end_of_strlen:
  4720                           	opt callstack 0
  4721                           
  4722 ;; *************** function _fputs *****************
  4723 ;; Defined at:
  4724 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;  s               2   13[COMRAM] PTR const unsigned char 
  4727 ;;		 -> dbuf(32), 
  4728 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  4729 ;;		 -> NULL(0), 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  i               2   18[COMRAM] int 
  4732 ;;  c               1   17[COMRAM] unsigned char 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  2   13[COMRAM] int 
  4735 ;; Registers used:
  4736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4743 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;Total ram usage:        7 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    6
  4749 ;; This function calls:
  4750 ;;		_fputc
  4751 ;; This function is called by:
  4752 ;;		_pad
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text19
  4757  001786                     __ptext19:
  4758                           	opt callstack 0
  4759  001786                     _fputs:
  4760                           	opt callstack 18
  4761                           
  4762                           ;incstack = 0
  4763  001786  0E00               	movlw	0
  4764  001788  6E14               	movwf	fputs@i+1,c
  4765  00178A  0E00               	movlw	0
  4766  00178C  6E13               	movwf	fputs@i,c
  4767  00178E  D00B               	goto	l2203
  4768  001790                     l2199:
  4769  001790  C012  F005         	movff	fputs@c,fputc@c
  4770  001794  6A06               	clrf	fputc@c+1,c
  4771  001796  C010  F007         	movff	fputs@fp,fputc@fp
  4772  00179A  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  4773  00179E  EC59  F00A         	call	_fputc	;wreg free
  4774  0017A2  4A13               	infsnz	fputs@i,f,c
  4775  0017A4  2A14               	incf	fputs@i+1,f,c
  4776  0017A6                     l2203:
  4777  0017A6  5013               	movf	fputs@i,w,c
  4778  0017A8  240E               	addwf	fputs@s,w,c
  4779  0017AA  6ED9               	movwf	fsr2l,c
  4780  0017AC  5014               	movf	fputs@i+1,w,c
  4781  0017AE  200F               	addwfc	fputs@s+1,w,c
  4782  0017B0  6EDA               	movwf	fsr2h,c
  4783  0017B2  50DF               	movf	indf2,w,c
  4784  0017B4  6E12               	movwf	fputs@c,c
  4785  0017B6  5012               	movf	fputs@c,w,c
  4786  0017B8  B4D8               	btfsc	status,2,c
  4787  0017BA  0012               	return	
  4788  0017BC  D7E9               	goto	l2199
  4789  0017BE                     __end_of_fputs:
  4790                           	opt callstack 0
  4791                           
  4792 ;; *************** function _fputc *****************
  4793 ;; Defined at:
  4794 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  c               2    4[COMRAM] int 
  4797 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  4798 ;;		 -> NULL(0), 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;		None
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  2    4[COMRAM] int 
  4803 ;; Registers used:
  4804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4810 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4812 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4813 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;Total ram usage:        9 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; Hardware stack levels required when called:    5
  4817 ;; This function calls:
  4818 ;;		_putch
  4819 ;; This function is called by:
  4820 ;;		_pad
  4821 ;;		_vfpfcnvrt
  4822 ;;		_fputs
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text20
  4827  0014B2                     __ptext20:
  4828                           	opt callstack 0
  4829  0014B2                     _fputc:
  4830                           	opt callstack 18
  4831                           
  4832                           ;incstack = 0
  4833  0014B2  5007               	movf	fputc@fp,w,c
  4834  0014B4  1008               	iorwf	fputc@fp+1,w,c
  4835  0014B6  B4D8               	btfsc	status,2,c
  4836  0014B8  D004               	goto	u1450
  4837  0014BA  5007               	movf	fputc@fp,w,c
  4838  0014BC  1008               	iorwf	fputc@fp+1,w,c
  4839  0014BE  A4D8               	btfss	status,2,c
  4840  0014C0  D004               	goto	l2189
  4841  0014C2                     u1450:
  4842  0014C2  5005               	movf	fputc@c,w,c
  4843  0014C4  ECF5  F00C         	call	_putch
  4844  0014C8  0012               	return	
  4845  0014CA                     l2189:
  4846  0014CA  EE20 F004          	lfsr	2,4
  4847  0014CE  5007               	movf	fputc@fp,w,c
  4848  0014D0  26D9               	addwf	fsr2l,f,c
  4849  0014D2  5008               	movf	fputc@fp+1,w,c
  4850  0014D4  22DA               	addwfc	fsr2h,f,c
  4851  0014D6  50DE               	movf	postinc2,w,c
  4852  0014D8  10DE               	iorwf	postinc2,w,c
  4853  0014DA  B4D8               	btfsc	status,2,c
  4854  0014DC  D016               	goto	u1470
  4855  0014DE  EE20 F004          	lfsr	2,4
  4856  0014E2  5007               	movf	fputc@fp,w,c
  4857  0014E4  26D9               	addwf	fsr2l,f,c
  4858  0014E6  5008               	movf	fputc@fp+1,w,c
  4859  0014E8  22DA               	addwfc	fsr2h,f,c
  4860  0014EA  EE10 F002          	lfsr	1,2
  4861  0014EE  5007               	movf	fputc@fp,w,c
  4862  0014F0  26E1               	addwf	fsr1l,f,c
  4863  0014F2  5008               	movf	fputc@fp+1,w,c
  4864  0014F4  22E2               	addwfc	fsr1h,f,c
  4865  0014F6  50DE               	movf	postinc2,w,c
  4866  0014F8  5CE6               	subwf	postinc1,w,c
  4867  0014FA  50E6               	movf	postinc1,w,c
  4868  0014FC  0A80               	xorlw	128
  4869  0014FE  6E0D               	movwf	(??_fputc+4)& (0+255),c
  4870  001500  50DE               	movf	postinc2,w,c
  4871  001502  0A80               	xorlw	128
  4872  001504  580D               	subwfb	(??_fputc+4)& (0+255),w,c
  4873  001506  B0D8               	btfsc	status,0,c
  4874  001508  0012               	return	
  4875  00150A                     u1470:
  4876  00150A  EE20 F002          	lfsr	2,2
  4877  00150E  5007               	movf	fputc@fp,w,c
  4878  001510  26D9               	addwf	fsr2l,f,c
  4879  001512  5008               	movf	fputc@fp+1,w,c
  4880  001514  22DA               	addwfc	fsr2h,f,c
  4881  001516  2ADE               	incf	postinc2,f,c
  4882  001518  0E00               	movlw	0
  4883  00151A  22DD               	addwfc	postdec2,f,c
  4884  00151C  0012               	return		;funcret
  4885  00151E                     __end_of_fputc:
  4886                           	opt callstack 0
  4887                           
  4888 ;; *************** function _putch *****************
  4889 ;; Defined at:
  4890 ;;		line 102 in file "lcd.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;  data            1    wreg     unsigned char 
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;  data            1    3[COMRAM] unsigned char 
  4895 ;; Return value:  Size  Location     Type
  4896 ;;                  1    wreg      void 
  4897 ;; Registers used:
  4898 ;;		wreg, status,2, status,0, cstack
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4907 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;Total ram usage:        1 bytes
  4909 ;; Hardware stack levels used:    1
  4910 ;; Hardware stack levels required when called:    4
  4911 ;; This function calls:
  4912 ;;		_send_byte
  4913 ;; This function is called by:
  4914 ;;		_fputc
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           	psect	text21
  4919  0019EA                     __ptext21:
  4920                           	opt callstack 0
  4921  0019EA                     _putch:
  4922                           	opt callstack 18
  4923                           
  4924                           ;incstack = 0
  4925                           ;putch@data stored from wreg
  4926  0019EA  6E04               	movwf	putch@data,c
  4927                           
  4928                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  4929  0019EC  848C               	bsf	3980,2,c	;volatile
  4930                           
  4931                           ;lcd.c: 104:     send_byte((unsigned char)data);
  4932  0019EE  5004               	movf	putch@data,w,c
  4933  0019F0  ECDA  F00C         	call	_send_byte
  4934  0019F4  0012               	return		;funcret
  4935  0019F6                     __end_of_putch:
  4936                           	opt callstack 0
  4937                           
  4938 ;; *************** function _abs *****************
  4939 ;; Defined at:
  4940 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  a               2   18[COMRAM] int 
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;		None
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  2   18[COMRAM] int 
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4956 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4957 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4958 ;;Total ram usage:        4 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    1
  4961 ;; This function calls:
  4962 ;;		Nothing
  4963 ;; This function is called by:
  4964 ;;		_dtoa
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           	psect	text22
  4969  0017F2                     __ptext22:
  4970                           	opt callstack 0
  4971  0017F2                     _abs:
  4972                           	opt callstack 24
  4973                           
  4974                           ;incstack = 0
  4975  0017F2  BE14               	btfsc	abs@a+1,7,c
  4976  0017F4  D005               	goto	u1560
  4977  0017F6  5014               	movf	abs@a+1,w,c
  4978  0017F8  E110               	bnz	l1035
  4979  0017FA  0413               	decf	abs@a,w,c
  4980  0017FC  B0D8               	btfsc	status,0,c
  4981  0017FE  D00D               	goto	l1035
  4982  001800                     u1560:
  4983  001800  C013  F015         	movff	abs@a,??_abs
  4984  001804  C014  F016         	movff	abs@a+1,??_abs+1
  4985  001808  1E15               	comf	??_abs,f,c
  4986  00180A  1E16               	comf	??_abs+1,f,c
  4987  00180C  4A15               	infsnz	??_abs,f,c
  4988  00180E  2A16               	incf	??_abs+1,f,c
  4989  001810  C015  F013         	movff	??_abs,?_abs
  4990  001814  C016  F014         	movff	??_abs+1,?_abs+1
  4991  001818  0012               	return	
  4992  00181A                     l1035:
  4993  00181A  C013  F013         	movff	abs@a,?_abs
  4994  00181E  C014  F014         	movff	abs@a+1,?_abs+1
  4995  001822  0012               	return		;funcret
  4996  001824                     __end_of_abs:
  4997                           	opt callstack 0
  4998                           
  4999 ;; *************** function ___aomod *****************
  5000 ;; Defined at:
  5001 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  dividend        8    0[COMRAM] long long 
  5004 ;;  divisor         8    8[COMRAM] long long 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;  sign            1   17[COMRAM] unsigned char 
  5007 ;;  counter         1   16[COMRAM] unsigned char 
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  8    0[COMRAM] long long 
  5010 ;; Registers used:
  5011 ;;		wreg, status,2, status,0
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5017 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5020 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5021 ;;Total ram usage:       18 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:    1
  5024 ;; This function calls:
  5025 ;;		Nothing
  5026 ;; This function is called by:
  5027 ;;		_dtoa
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           	psect	text23
  5032  001042                     __ptext23:
  5033                           	opt callstack 0
  5034  001042                     ___aomod:
  5035                           	opt callstack 24
  5036                           
  5037                           ;incstack = 0
  5038  001042  0E00               	movlw	0
  5039  001044  6E12               	movwf	___aomod@sign,c
  5040  001046  AE08               	btfss	___aomod@dividend+7,7,c
  5041  001048  D012               	goto	l2325
  5042  00104A  1E08               	comf	___aomod@dividend+7,f,c
  5043  00104C  1E07               	comf	___aomod@dividend+6,f,c
  5044  00104E  1E06               	comf	___aomod@dividend+5,f,c
  5045  001050  1E05               	comf	___aomod@dividend+4,f,c
  5046  001052  1E04               	comf	___aomod@dividend+3,f,c
  5047  001054  1E03               	comf	___aomod@dividend+2,f,c
  5048  001056  1E02               	comf	___aomod@dividend+1,f,c
  5049  001058  6C01               	negf	___aomod@dividend,c
  5050  00105A  0E00               	movlw	0
  5051  00105C  2202               	addwfc	___aomod@dividend+1,f,c
  5052  00105E  2203               	addwfc	___aomod@dividend+2,f,c
  5053  001060  2204               	addwfc	___aomod@dividend+3,f,c
  5054  001062  2205               	addwfc	___aomod@dividend+4,f,c
  5055  001064  2206               	addwfc	___aomod@dividend+5,f,c
  5056  001066  2207               	addwfc	___aomod@dividend+6,f,c
  5057  001068  2208               	addwfc	___aomod@dividend+7,f,c
  5058  00106A  0E01               	movlw	1
  5059  00106C  6E12               	movwf	___aomod@sign,c
  5060  00106E                     l2325:
  5061  00106E  AE10               	btfss	___aomod@divisor+7,7,c
  5062  001070  D010               	goto	l2329
  5063  001072  1E10               	comf	___aomod@divisor+7,f,c
  5064  001074  1E0F               	comf	___aomod@divisor+6,f,c
  5065  001076  1E0E               	comf	___aomod@divisor+5,f,c
  5066  001078  1E0D               	comf	___aomod@divisor+4,f,c
  5067  00107A  1E0C               	comf	___aomod@divisor+3,f,c
  5068  00107C  1E0B               	comf	___aomod@divisor+2,f,c
  5069  00107E  1E0A               	comf	___aomod@divisor+1,f,c
  5070  001080  6C09               	negf	___aomod@divisor,c
  5071  001082  0E00               	movlw	0
  5072  001084  220A               	addwfc	___aomod@divisor+1,f,c
  5073  001086  220B               	addwfc	___aomod@divisor+2,f,c
  5074  001088  220C               	addwfc	___aomod@divisor+3,f,c
  5075  00108A  220D               	addwfc	___aomod@divisor+4,f,c
  5076  00108C  220E               	addwfc	___aomod@divisor+5,f,c
  5077  00108E  220F               	addwfc	___aomod@divisor+6,f,c
  5078  001090  2210               	addwfc	___aomod@divisor+7,f,c
  5079  001092                     l2329:
  5080  001092  5009               	movf	___aomod@divisor,w,c
  5081  001094  100A               	iorwf	___aomod@divisor+1,w,c
  5082  001096  100B               	iorwf	___aomod@divisor+2,w,c
  5083  001098  100C               	iorwf	___aomod@divisor+3,w,c
  5084  00109A  100D               	iorwf	___aomod@divisor+4,w,c
  5085  00109C  100E               	iorwf	___aomod@divisor+5,w,c
  5086  00109E  100F               	iorwf	___aomod@divisor+6,w,c
  5087  0010A0  1010               	iorwf	___aomod@divisor+7,w,c
  5088  0010A2  B4D8               	btfsc	status,2,c
  5089  0010A4  D03C               	goto	l2345
  5090  0010A6  0E01               	movlw	1
  5091  0010A8  6E11               	movwf	___aomod@counter,c
  5092  0010AA  D00A               	goto	l2335
  5093  0010AC                     l2333:
  5094  0010AC  90D8               	bcf	status,0,c
  5095  0010AE  3609               	rlcf	___aomod@divisor,f,c
  5096  0010B0  360A               	rlcf	___aomod@divisor+1,f,c
  5097  0010B2  360B               	rlcf	___aomod@divisor+2,f,c
  5098  0010B4  360C               	rlcf	___aomod@divisor+3,f,c
  5099  0010B6  360D               	rlcf	___aomod@divisor+4,f,c
  5100  0010B8  360E               	rlcf	___aomod@divisor+5,f,c
  5101  0010BA  360F               	rlcf	___aomod@divisor+6,f,c
  5102  0010BC  3610               	rlcf	___aomod@divisor+7,f,c
  5103  0010BE  2A11               	incf	___aomod@counter,f,c
  5104  0010C0                     l2335:
  5105  0010C0  AE10               	btfss	___aomod@divisor+7,7,c
  5106  0010C2  D7F4               	goto	l2333
  5107  0010C4                     u1760:
  5108  0010C4  5009               	movf	___aomod@divisor,w,c
  5109  0010C6  5C01               	subwf	___aomod@dividend,w,c
  5110  0010C8  500A               	movf	___aomod@divisor+1,w,c
  5111  0010CA  5802               	subwfb	___aomod@dividend+1,w,c
  5112  0010CC  500B               	movf	___aomod@divisor+2,w,c
  5113  0010CE  5803               	subwfb	___aomod@dividend+2,w,c
  5114  0010D0  500C               	movf	___aomod@divisor+3,w,c
  5115  0010D2  5804               	subwfb	___aomod@dividend+3,w,c
  5116  0010D4  500D               	movf	___aomod@divisor+4,w,c
  5117  0010D6  5805               	subwfb	___aomod@dividend+4,w,c
  5118  0010D8  500E               	movf	___aomod@divisor+5,w,c
  5119  0010DA  5806               	subwfb	___aomod@dividend+5,w,c
  5120  0010DC  500F               	movf	___aomod@divisor+6,w,c
  5121  0010DE  5807               	subwfb	___aomod@dividend+6,w,c
  5122  0010E0  5010               	movf	___aomod@divisor+7,w,c
  5123  0010E2  5808               	subwfb	___aomod@dividend+7,w,c
  5124  0010E4  A0D8               	btfss	status,0,c
  5125  0010E6  D010               	goto	l2341
  5126  0010E8  5009               	movf	___aomod@divisor,w,c
  5127  0010EA  5E01               	subwf	___aomod@dividend,f,c
  5128  0010EC  500A               	movf	___aomod@divisor+1,w,c
  5129  0010EE  5A02               	subwfb	___aomod@dividend+1,f,c
  5130  0010F0  500B               	movf	___aomod@divisor+2,w,c
  5131  0010F2  5A03               	subwfb	___aomod@dividend+2,f,c
  5132  0010F4  500C               	movf	___aomod@divisor+3,w,c
  5133  0010F6  5A04               	subwfb	___aomod@dividend+3,f,c
  5134  0010F8  500D               	movf	___aomod@divisor+4,w,c
  5135  0010FA  5A05               	subwfb	___aomod@dividend+4,f,c
  5136  0010FC  500E               	movf	___aomod@divisor+5,w,c
  5137  0010FE  5A06               	subwfb	___aomod@dividend+5,f,c
  5138  001100  500F               	movf	___aomod@divisor+6,w,c
  5139  001102  5A07               	subwfb	___aomod@dividend+6,f,c
  5140  001104  5010               	movf	___aomod@divisor+7,w,c
  5141  001106  5A08               	subwfb	___aomod@dividend+7,f,c
  5142  001108                     l2341:
  5143  001108  90D8               	bcf	status,0,c
  5144  00110A  3210               	rrcf	___aomod@divisor+7,f,c
  5145  00110C  320F               	rrcf	___aomod@divisor+6,f,c
  5146  00110E  320E               	rrcf	___aomod@divisor+5,f,c
  5147  001110  320D               	rrcf	___aomod@divisor+4,f,c
  5148  001112  320C               	rrcf	___aomod@divisor+3,f,c
  5149  001114  320B               	rrcf	___aomod@divisor+2,f,c
  5150  001116  320A               	rrcf	___aomod@divisor+1,f,c
  5151  001118  3209               	rrcf	___aomod@divisor,f,c
  5152  00111A  2E11               	decfsz	___aomod@counter,f,c
  5153  00111C  D7D3               	goto	u1760
  5154  00111E                     l2345:
  5155  00111E  5012               	movf	___aomod@sign,w,c
  5156  001120  B4D8               	btfsc	status,2,c
  5157  001122  D010               	goto	l2349
  5158  001124  1E08               	comf	___aomod@dividend+7,f,c
  5159  001126  1E07               	comf	___aomod@dividend+6,f,c
  5160  001128  1E06               	comf	___aomod@dividend+5,f,c
  5161  00112A  1E05               	comf	___aomod@dividend+4,f,c
  5162  00112C  1E04               	comf	___aomod@dividend+3,f,c
  5163  00112E  1E03               	comf	___aomod@dividend+2,f,c
  5164  001130  1E02               	comf	___aomod@dividend+1,f,c
  5165  001132  6C01               	negf	___aomod@dividend,c
  5166  001134  0E00               	movlw	0
  5167  001136  2202               	addwfc	___aomod@dividend+1,f,c
  5168  001138  2203               	addwfc	___aomod@dividend+2,f,c
  5169  00113A  2204               	addwfc	___aomod@dividend+3,f,c
  5170  00113C  2205               	addwfc	___aomod@dividend+4,f,c
  5171  00113E  2206               	addwfc	___aomod@dividend+5,f,c
  5172  001140  2207               	addwfc	___aomod@dividend+6,f,c
  5173  001142  2208               	addwfc	___aomod@dividend+7,f,c
  5174  001144                     l2349:
  5175  001144  C001  F001         	movff	___aomod@dividend,?___aomod
  5176  001148  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5177  00114C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5178  001150  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5179  001154  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5180  001158  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5181  00115C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5182  001160  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5183  001164  0012               	return		;funcret
  5184  001166                     __end_of___aomod:
  5185                           	opt callstack 0
  5186                           
  5187 ;; *************** function ___aodiv *****************
  5188 ;; Defined at:
  5189 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;  dividend        8    0[COMRAM] long long 
  5192 ;;  divisor         8    8[COMRAM] long long 
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;  quotient        8   18[COMRAM] long long 
  5195 ;;  sign            1   17[COMRAM] unsigned char 
  5196 ;;  counter         1   16[COMRAM] unsigned char 
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  8    0[COMRAM] long long 
  5199 ;; Registers used:
  5200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5206 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;Total ram usage:       26 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:    1
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		_dtoa
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text24
  5221  000C74                     __ptext24:
  5222                           	opt callstack 0
  5223  000C74                     ___aodiv:
  5224                           	opt callstack 24
  5225                           
  5226                           ;incstack = 0
  5227  000C74  0E00               	movlw	0
  5228  000C76  6E12               	movwf	___aodiv@sign,c
  5229  000C78  AE10               	btfss	___aodiv@divisor+7,7,c
  5230  000C7A  D012               	goto	l2281
  5231  000C7C  1E10               	comf	___aodiv@divisor+7,f,c
  5232  000C7E  1E0F               	comf	___aodiv@divisor+6,f,c
  5233  000C80  1E0E               	comf	___aodiv@divisor+5,f,c
  5234  000C82  1E0D               	comf	___aodiv@divisor+4,f,c
  5235  000C84  1E0C               	comf	___aodiv@divisor+3,f,c
  5236  000C86  1E0B               	comf	___aodiv@divisor+2,f,c
  5237  000C88  1E0A               	comf	___aodiv@divisor+1,f,c
  5238  000C8A  6C09               	negf	___aodiv@divisor,c
  5239  000C8C  0E00               	movlw	0
  5240  000C8E  220A               	addwfc	___aodiv@divisor+1,f,c
  5241  000C90  220B               	addwfc	___aodiv@divisor+2,f,c
  5242  000C92  220C               	addwfc	___aodiv@divisor+3,f,c
  5243  000C94  220D               	addwfc	___aodiv@divisor+4,f,c
  5244  000C96  220E               	addwfc	___aodiv@divisor+5,f,c
  5245  000C98  220F               	addwfc	___aodiv@divisor+6,f,c
  5246  000C9A  2210               	addwfc	___aodiv@divisor+7,f,c
  5247  000C9C  0E01               	movlw	1
  5248  000C9E  6E12               	movwf	___aodiv@sign,c
  5249  000CA0                     l2281:
  5250  000CA0  AE08               	btfss	___aodiv@dividend+7,7,c
  5251  000CA2  D012               	goto	l2287
  5252  000CA4  1E08               	comf	___aodiv@dividend+7,f,c
  5253  000CA6  1E07               	comf	___aodiv@dividend+6,f,c
  5254  000CA8  1E06               	comf	___aodiv@dividend+5,f,c
  5255  000CAA  1E05               	comf	___aodiv@dividend+4,f,c
  5256  000CAC  1E04               	comf	___aodiv@dividend+3,f,c
  5257  000CAE  1E03               	comf	___aodiv@dividend+2,f,c
  5258  000CB0  1E02               	comf	___aodiv@dividend+1,f,c
  5259  000CB2  6C01               	negf	___aodiv@dividend,c
  5260  000CB4  0E00               	movlw	0
  5261  000CB6  2202               	addwfc	___aodiv@dividend+1,f,c
  5262  000CB8  2203               	addwfc	___aodiv@dividend+2,f,c
  5263  000CBA  2204               	addwfc	___aodiv@dividend+3,f,c
  5264  000CBC  2205               	addwfc	___aodiv@dividend+4,f,c
  5265  000CBE  2206               	addwfc	___aodiv@dividend+5,f,c
  5266  000CC0  2207               	addwfc	___aodiv@dividend+6,f,c
  5267  000CC2  2208               	addwfc	___aodiv@dividend+7,f,c
  5268  000CC4  0E01               	movlw	1
  5269  000CC6  1A12               	xorwf	___aodiv@sign,f,c
  5270  000CC8                     l2287:
  5271  000CC8  EE20  F013         	lfsr	2,___aodiv@quotient
  5272  000CCC  0E07               	movlw	7
  5273  000CCE                     u1681:
  5274  000CCE  6ADE               	clrf	postinc2,c
  5275  000CD0  06E8               	decf	wreg,f,c
  5276  000CD2  E2FD               	bc	u1681
  5277  000CD4  5009               	movf	___aodiv@divisor,w,c
  5278  000CD6  100A               	iorwf	___aodiv@divisor+1,w,c
  5279  000CD8  100B               	iorwf	___aodiv@divisor+2,w,c
  5280  000CDA  100C               	iorwf	___aodiv@divisor+3,w,c
  5281  000CDC  100D               	iorwf	___aodiv@divisor+4,w,c
  5282  000CDE  100E               	iorwf	___aodiv@divisor+5,w,c
  5283  000CE0  100F               	iorwf	___aodiv@divisor+6,w,c
  5284  000CE2  1010               	iorwf	___aodiv@divisor+7,w,c
  5285  000CE4  B4D8               	btfsc	status,2,c
  5286  000CE6  D046               	goto	l2309
  5287  000CE8  0E01               	movlw	1
  5288  000CEA  6E11               	movwf	___aodiv@counter,c
  5289  000CEC  D00A               	goto	l2295
  5290  000CEE                     l2293:
  5291  000CEE  90D8               	bcf	status,0,c
  5292  000CF0  3609               	rlcf	___aodiv@divisor,f,c
  5293  000CF2  360A               	rlcf	___aodiv@divisor+1,f,c
  5294  000CF4  360B               	rlcf	___aodiv@divisor+2,f,c
  5295  000CF6  360C               	rlcf	___aodiv@divisor+3,f,c
  5296  000CF8  360D               	rlcf	___aodiv@divisor+4,f,c
  5297  000CFA  360E               	rlcf	___aodiv@divisor+5,f,c
  5298  000CFC  360F               	rlcf	___aodiv@divisor+6,f,c
  5299  000CFE  3610               	rlcf	___aodiv@divisor+7,f,c
  5300  000D00  2A11               	incf	___aodiv@counter,f,c
  5301  000D02                     l2295:
  5302  000D02  AE10               	btfss	___aodiv@divisor+7,7,c
  5303  000D04  D7F4               	goto	l2293
  5304  000D06                     u1700:
  5305  000D06  90D8               	bcf	status,0,c
  5306  000D08  3613               	rlcf	___aodiv@quotient,f,c
  5307  000D0A  3614               	rlcf	___aodiv@quotient+1,f,c
  5308  000D0C  3615               	rlcf	___aodiv@quotient+2,f,c
  5309  000D0E  3616               	rlcf	___aodiv@quotient+3,f,c
  5310  000D10  3617               	rlcf	___aodiv@quotient+4,f,c
  5311  000D12  3618               	rlcf	___aodiv@quotient+5,f,c
  5312  000D14  3619               	rlcf	___aodiv@quotient+6,f,c
  5313  000D16  361A               	rlcf	___aodiv@quotient+7,f,c
  5314  000D18  5009               	movf	___aodiv@divisor,w,c
  5315  000D1A  5C01               	subwf	___aodiv@dividend,w,c
  5316  000D1C  500A               	movf	___aodiv@divisor+1,w,c
  5317  000D1E  5802               	subwfb	___aodiv@dividend+1,w,c
  5318  000D20  500B               	movf	___aodiv@divisor+2,w,c
  5319  000D22  5803               	subwfb	___aodiv@dividend+2,w,c
  5320  000D24  500C               	movf	___aodiv@divisor+3,w,c
  5321  000D26  5804               	subwfb	___aodiv@dividend+3,w,c
  5322  000D28  500D               	movf	___aodiv@divisor+4,w,c
  5323  000D2A  5805               	subwfb	___aodiv@dividend+4,w,c
  5324  000D2C  500E               	movf	___aodiv@divisor+5,w,c
  5325  000D2E  5806               	subwfb	___aodiv@dividend+5,w,c
  5326  000D30  500F               	movf	___aodiv@divisor+6,w,c
  5327  000D32  5807               	subwfb	___aodiv@dividend+6,w,c
  5328  000D34  5010               	movf	___aodiv@divisor+7,w,c
  5329  000D36  5808               	subwfb	___aodiv@dividend+7,w,c
  5330  000D38  A0D8               	btfss	status,0,c
  5331  000D3A  D011               	goto	l2305
  5332  000D3C  5009               	movf	___aodiv@divisor,w,c
  5333  000D3E  5E01               	subwf	___aodiv@dividend,f,c
  5334  000D40  500A               	movf	___aodiv@divisor+1,w,c
  5335  000D42  5A02               	subwfb	___aodiv@dividend+1,f,c
  5336  000D44  500B               	movf	___aodiv@divisor+2,w,c
  5337  000D46  5A03               	subwfb	___aodiv@dividend+2,f,c
  5338  000D48  500C               	movf	___aodiv@divisor+3,w,c
  5339  000D4A  5A04               	subwfb	___aodiv@dividend+3,f,c
  5340  000D4C  500D               	movf	___aodiv@divisor+4,w,c
  5341  000D4E  5A05               	subwfb	___aodiv@dividend+4,f,c
  5342  000D50  500E               	movf	___aodiv@divisor+5,w,c
  5343  000D52  5A06               	subwfb	___aodiv@dividend+5,f,c
  5344  000D54  500F               	movf	___aodiv@divisor+6,w,c
  5345  000D56  5A07               	subwfb	___aodiv@dividend+6,f,c
  5346  000D58  5010               	movf	___aodiv@divisor+7,w,c
  5347  000D5A  5A08               	subwfb	___aodiv@dividend+7,f,c
  5348  000D5C  8013               	bsf	___aodiv@quotient,0,c
  5349  000D5E                     l2305:
  5350  000D5E  90D8               	bcf	status,0,c
  5351  000D60  3210               	rrcf	___aodiv@divisor+7,f,c
  5352  000D62  320F               	rrcf	___aodiv@divisor+6,f,c
  5353  000D64  320E               	rrcf	___aodiv@divisor+5,f,c
  5354  000D66  320D               	rrcf	___aodiv@divisor+4,f,c
  5355  000D68  320C               	rrcf	___aodiv@divisor+3,f,c
  5356  000D6A  320B               	rrcf	___aodiv@divisor+2,f,c
  5357  000D6C  320A               	rrcf	___aodiv@divisor+1,f,c
  5358  000D6E  3209               	rrcf	___aodiv@divisor,f,c
  5359  000D70  2E11               	decfsz	___aodiv@counter,f,c
  5360  000D72  D7C9               	goto	u1700
  5361  000D74                     l2309:
  5362  000D74  5012               	movf	___aodiv@sign,w,c
  5363  000D76  B4D8               	btfsc	status,2,c
  5364  000D78  D010               	goto	l2313
  5365  000D7A  1E1A               	comf	___aodiv@quotient+7,f,c
  5366  000D7C  1E19               	comf	___aodiv@quotient+6,f,c
  5367  000D7E  1E18               	comf	___aodiv@quotient+5,f,c
  5368  000D80  1E17               	comf	___aodiv@quotient+4,f,c
  5369  000D82  1E16               	comf	___aodiv@quotient+3,f,c
  5370  000D84  1E15               	comf	___aodiv@quotient+2,f,c
  5371  000D86  1E14               	comf	___aodiv@quotient+1,f,c
  5372  000D88  6C13               	negf	___aodiv@quotient,c
  5373  000D8A  0E00               	movlw	0
  5374  000D8C  2214               	addwfc	___aodiv@quotient+1,f,c
  5375  000D8E  2215               	addwfc	___aodiv@quotient+2,f,c
  5376  000D90  2216               	addwfc	___aodiv@quotient+3,f,c
  5377  000D92  2217               	addwfc	___aodiv@quotient+4,f,c
  5378  000D94  2218               	addwfc	___aodiv@quotient+5,f,c
  5379  000D96  2219               	addwfc	___aodiv@quotient+6,f,c
  5380  000D98  221A               	addwfc	___aodiv@quotient+7,f,c
  5381  000D9A                     l2313:
  5382  000D9A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5383  000D9E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5384  000DA2  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5385  000DA6  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5386  000DAA  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5387  000DAE  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5388  000DB2  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5389  000DB6  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5390  000DBA  0012               	return		;funcret
  5391  000DBC                     __end_of___aodiv:
  5392                           	opt callstack 0
  5393                           
  5394 ;; *************** function _atoi *****************
  5395 ;; Defined at:
  5396 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;  s               2    7[COMRAM] PTR const unsigned char 
  5399 ;;		 -> STR_22(17), STR_21(20), STR_20(20), STR_19(23), 
  5400 ;;		 -> STR_18(17), STR_17(19), STR_16(19), STR_15(18), 
  5401 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(17), 
  5402 ;;		 -> STR_10(2), STR_9(5), STR_8(17), STR_7(17), 
  5403 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(23), 
  5404 ;;		 -> STR_2(23), STR_1(17), 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  n               2   20[COMRAM] int 
  5407 ;;  neg             2   13[COMRAM] int 
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  2    7[COMRAM] int 
  5410 ;; Registers used:
  5411 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;Total ram usage:       15 bytes
  5422 ;; Hardware stack levels used:    1
  5423 ;; Hardware stack levels required when called:    2
  5424 ;; This function calls:
  5425 ;;		___wmul
  5426 ;;		_isdigit
  5427 ;;		_isspace
  5428 ;; This function is called by:
  5429 ;;		_vfpfcnvrt
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           	psect	text25
  5434  000F02                     __ptext25:
  5435                           	opt callstack 0
  5436  000F02                     _atoi:
  5437                           	opt callstack 24
  5438                           
  5439                           ;incstack = 0
  5440  000F02  0E00               	movlw	0
  5441  000F04  6E16               	movwf	atoi@n+1,c
  5442  000F06  0E00               	movlw	0
  5443  000F08  6E15               	movwf	atoi@n,c
  5444  000F0A  0E00               	movlw	0
  5445  000F0C  6E0F               	movwf	atoi@neg+1,c
  5446  000F0E  0E00               	movlw	0
  5447  000F10  6E0E               	movwf	atoi@neg,c
  5448  000F12  D002               	goto	l2497
  5449  000F14                     l2495:
  5450  000F14  4A08               	infsnz	atoi@s,f,c
  5451  000F16  2A09               	incf	atoi@s+1,f,c
  5452  000F18                     l2497:
  5453  000F18  0E01               	movlw	1
  5454  000F1A  6E14               	movwf	_atoi$1008,c
  5455  000F1C  C008  FFF6         	movff	atoi@s,tblptrl
  5456  000F20  C009  FFF7         	movff	atoi@s+1,tblptrh
  5457  000F24                     	if	0	;tblptru may be non-zero
  5458  000F24                     	endif
  5459  000F24                     	if	0	;tblptru may be non-zero
  5460  000F24                     	endif
  5461  000F24  0008               	tblrd		*
  5462  000F26  50F5               	movf	tablat,w,c
  5463  000F28  0A20               	xorlw	32
  5464  000F2A  B4D8               	btfsc	status,2,c
  5465  000F2C  D018               	goto	l2505
  5466  000F2E  0EF7               	movlw	247
  5467  000F30  6E0A               	movwf	??_atoi& (0+255),c
  5468  000F32  0EFF               	movlw	255
  5469  000F34  6E0B               	movwf	(??_atoi+1)& (0+255),c
  5470  000F36  C008  FFF6         	movff	atoi@s,tblptrl
  5471  000F3A  C009  FFF7         	movff	atoi@s+1,tblptrh
  5472  000F3E                     	if	0	;tblptru may be non-zero
  5473  000F3E                     	endif
  5474  000F3E                     	if	0	;tblptru may be non-zero
  5475  000F3E                     	endif
  5476  000F3E  0008               	tblrd		*
  5477  000F40  50F5               	movf	tablat,w,c
  5478  000F42  6E0C               	movwf	(??_atoi+2)& (0+255),c
  5479  000F44  6A0D               	clrf	(??_atoi+3)& (0+255),c
  5480  000F46  500A               	movf	??_atoi,w,c
  5481  000F48  260C               	addwf	??_atoi+2,f,c
  5482  000F4A  500B               	movf	??_atoi+1,w,c
  5483  000F4C  220D               	addwfc	??_atoi+3,f,c
  5484  000F4E  500D               	movf	??_atoi+3,w,c
  5485  000F50  E104               	bnz	u2140
  5486  000F52  0E05               	movlw	5
  5487  000F54  5C0C               	subwf	??_atoi+2,w,c
  5488  000F56  A0D8               	btfss	status,0,c
  5489  000F58  D002               	goto	l2505
  5490  000F5A                     u2140:
  5491  000F5A  0E00               	movlw	0
  5492  000F5C  6E14               	movwf	_atoi$1008,c
  5493  000F5E                     l2505:
  5494  000F5E  C014  F010         	movff	_atoi$1008,_atoi$1007
  5495  000F62  6A11               	clrf	_atoi$1007+1,c
  5496  000F64  5010               	movf	_atoi$1007,w,c
  5497  000F66  1011               	iorwf	_atoi$1007+1,w,c
  5498  000F68  B4D8               	btfsc	status,2,c
  5499  000F6A  D008               	goto	l2515
  5500  000F6C  D7D3               	goto	l2495
  5501  000F6E                     l2511:
  5502  000F6E  0E00               	movlw	0
  5503  000F70  6E0F               	movwf	atoi@neg+1,c
  5504  000F72  0E01               	movlw	1
  5505  000F74  6E0E               	movwf	atoi@neg,c
  5506  000F76                     l2513:
  5507  000F76  4A08               	infsnz	atoi@s,f,c
  5508  000F78  2A09               	incf	atoi@s+1,f,c
  5509  000F7A  D02E               	goto	l2521
  5510  000F7C                     l2515:
  5511  000F7C  C008  FFF6         	movff	atoi@s,tblptrl
  5512  000F80  C009  FFF7         	movff	atoi@s+1,tblptrh
  5513  000F84                     	if	0	;tblptru may be non-zero
  5514  000F84                     	endif
  5515  000F84                     	if	0	;tblptru may be non-zero
  5516  000F84                     	endif
  5517  000F84  0008               	tblrd		*
  5518  000F86  50F5               	movf	tablat,w,c
  5519  000F88  6E0A               	movwf	??_atoi& (0+255),c
  5520  000F8A  6A0B               	clrf	(??_atoi+1)& (0+255),c
  5521                           
  5522                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5523                           ; Switch size 1, requested type "simple"
  5524                           ; Number of cases is 1, Range of values is 0 to 0
  5525                           ; switch strategies available:
  5526                           ; Name         Instructions Cycles
  5527                           ; simple_byte            4     3 (average)
  5528                           ;	Chosen strategy is simple_byte
  5529  000F8C  500B               	movf	??_atoi+1,w,c
  5530  000F8E  0A00               	xorlw	0	; case 0
  5531  000F90  A4D8               	btfss	status,2,c
  5532  000F92  D022               	goto	l2521
  5533                           
  5534                           ; Switch size 1, requested type "simple"
  5535                           ; Number of cases is 2, Range of values is 43 to 45
  5536                           ; switch strategies available:
  5537                           ; Name         Instructions Cycles
  5538                           ; simple_byte            7     4 (average)
  5539                           ;	Chosen strategy is simple_byte
  5540  000F94  500A               	movf	??_atoi,w,c
  5541  000F96  0A2B               	xorlw	43	; case 43
  5542  000F98  B4D8               	btfsc	status,2,c
  5543  000F9A  D7ED               	goto	l2513
  5544  000F9C  0A06               	xorlw	6	; case 45
  5545  000F9E  B4D8               	btfsc	status,2,c
  5546  000FA0  D7E6               	goto	l2511
  5547  000FA2  D01A               	goto	l2521
  5548  000FA4                     l2517:
  5549  000FA4  C015  F001         	movff	atoi@n,___wmul@multiplier
  5550  000FA8  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  5551  000FAC  0E00               	movlw	0
  5552  000FAE  6E04               	movwf	___wmul@multiplicand+1,c
  5553  000FB0  0E0A               	movlw	10
  5554  000FB2  6E03               	movwf	___wmul@multiplicand,c
  5555  000FB4  ECAA  F00C         	call	___wmul	;wreg free
  5556  000FB8  C008  FFF6         	movff	atoi@s,tblptrl
  5557  000FBC  C009  FFF7         	movff	atoi@s+1,tblptrh
  5558  000FC0                     	if	0	;tblptru may be non-zero
  5559  000FC0                     	endif
  5560  000FC0                     	if	0	;tblptru may be non-zero
  5561  000FC0                     	endif
  5562  000FC0  0008               	tblrd		*
  5563  000FC2  50F5               	movf	tablat,w,c
  5564  000FC4  5E01               	subwf	?___wmul,f,c
  5565  000FC6  0E00               	movlw	0
  5566  000FC8  5A02               	subwfb	?___wmul+1,f,c
  5567  000FCA  0E30               	movlw	48
  5568  000FCC  2401               	addwf	?___wmul,w,c
  5569  000FCE  6E15               	movwf	atoi@n,c
  5570  000FD0  0E00               	movlw	0
  5571  000FD2  2002               	addwfc	?___wmul+1,w,c
  5572  000FD4  6E16               	movwf	atoi@n+1,c
  5573  000FD6  D7CF               	goto	l2513
  5574  000FD8                     l2521:
  5575  000FD8  0ED0               	movlw	208
  5576  000FDA  6E0A               	movwf	??_atoi& (0+255),c
  5577  000FDC  0EFF               	movlw	255
  5578  000FDE  6E0B               	movwf	(??_atoi+1)& (0+255),c
  5579  000FE0  C008  FFF6         	movff	atoi@s,tblptrl
  5580  000FE4  C009  FFF7         	movff	atoi@s+1,tblptrh
  5581  000FE8                     	if	0	;tblptru may be non-zero
  5582  000FE8                     	endif
  5583  000FE8                     	if	0	;tblptru may be non-zero
  5584  000FE8                     	endif
  5585  000FE8  0008               	tblrd		*
  5586  000FEA  50F5               	movf	tablat,w,c
  5587  000FEC  6E0C               	movwf	(??_atoi+2)& (0+255),c
  5588  000FEE  6A0D               	clrf	(??_atoi+3)& (0+255),c
  5589  000FF0  500A               	movf	??_atoi,w,c
  5590  000FF2  260C               	addwf	??_atoi+2,f,c
  5591  000FF4  500B               	movf	??_atoi+1,w,c
  5592  000FF6  220D               	addwfc	??_atoi+3,f,c
  5593  000FF8  500D               	movf	??_atoi+3,w,c
  5594  000FFA  E106               	bnz	u2160
  5595  000FFC  0E0A               	movlw	10
  5596  000FFE  5C0C               	subwf	??_atoi+2,w,c
  5597  001000  B0D8               	btfsc	status,0,c
  5598  001002  D002               	goto	u2160
  5599  001004  0E01               	movlw	1
  5600  001006  D001               	goto	u2170
  5601  001008                     u2160:
  5602  001008  0E00               	movlw	0
  5603  00100A                     u2170:
  5604  00100A  6E12               	movwf	_atoi$1009,c
  5605  00100C  6A13               	clrf	_atoi$1009+1,c
  5606  00100E  5012               	movf	_atoi$1009,w,c
  5607  001010  1013               	iorwf	_atoi$1009+1,w,c
  5608  001012  A4D8               	btfss	status,2,c
  5609  001014  D7C7               	goto	l2517
  5610  001016  500E               	movf	atoi@neg,w,c
  5611  001018  100F               	iorwf	atoi@neg+1,w,c
  5612  00101A  A4D8               	btfss	status,2,c
  5613  00101C  D00D               	goto	l1066
  5614  00101E  C015  F00A         	movff	atoi@n,??_atoi
  5615  001022  C016  F00B         	movff	atoi@n+1,??_atoi+1
  5616  001026  1E0A               	comf	??_atoi,f,c
  5617  001028  1E0B               	comf	??_atoi+1,f,c
  5618  00102A  4A0A               	infsnz	??_atoi,f,c
  5619  00102C  2A0B               	incf	??_atoi+1,f,c
  5620  00102E  C00A  F008         	movff	??_atoi,?_atoi
  5621  001032  C00B  F009         	movff	??_atoi+1,?_atoi+1
  5622  001036  0012               	return	
  5623  001038                     l1066:
  5624  001038  C015  F008         	movff	atoi@n,?_atoi
  5625  00103C  C016  F009         	movff	atoi@n+1,?_atoi+1
  5626  001040  0012               	return		;funcret
  5627  001042                     __end_of_atoi:
  5628                           	opt callstack 0
  5629                           
  5630 ;; *************** function _isspace *****************
  5631 ;; Defined at:
  5632 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;  c               2    0[COMRAM] int 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;		None
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  2    0[COMRAM] int 
  5639 ;; Registers used:
  5640 ;;		wreg, status,2, status,0
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5648 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5649 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;Total ram usage:        7 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; Hardware stack levels required when called:    1
  5653 ;; This function calls:
  5654 ;;		Nothing
  5655 ;; This function is called by:
  5656 ;;		_atoi
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text26
  5661  001748                     __ptext26:
  5662                           	opt callstack 0
  5663  001748                     _isspace:
  5664                           	opt callstack 24
  5665                           
  5666                           ;incstack = 0
  5667  001748  0E01               	movlw	1
  5668  00174A  6E07               	movwf	_isspace$1034,c
  5669  00174C  0E20               	movlw	32
  5670  00174E  1801               	xorwf	isspace@c,w,c
  5671  001750  1002               	iorwf	isspace@c+1,w,c
  5672  001752  B4D8               	btfsc	status,2,c
  5673  001754  D014               	goto	l2361
  5674  001756  0EF7               	movlw	247
  5675  001758  6E03               	movwf	??_isspace& (0+255),c
  5676  00175A  0EFF               	movlw	255
  5677  00175C  6E04               	movwf	(??_isspace+1)& (0+255),c
  5678  00175E  C001  F005         	movff	isspace@c,??_isspace+2
  5679  001762  C002  F006         	movff	isspace@c+1,??_isspace+3
  5680  001766  5003               	movf	??_isspace,w,c
  5681  001768  2605               	addwf	??_isspace+2,f,c
  5682  00176A  5004               	movf	??_isspace+1,w,c
  5683  00176C  2206               	addwfc	??_isspace+3,f,c
  5684  00176E  5006               	movf	??_isspace+3,w,c
  5685  001770  E104               	bnz	u1800
  5686  001772  0E05               	movlw	5
  5687  001774  5C05               	subwf	??_isspace+2,w,c
  5688  001776  A0D8               	btfss	status,0,c
  5689  001778  D002               	goto	l2361
  5690  00177A                     u1800:
  5691  00177A  0E00               	movlw	0
  5692  00177C  6E07               	movwf	_isspace$1034,c
  5693  00177E                     l2361:
  5694  00177E  C007  F001         	movff	_isspace$1034,?_isspace
  5695  001782  6A02               	clrf	?_isspace+1,c
  5696  001784  0012               	return		;funcret
  5697  001786                     __end_of_isspace:
  5698                           	opt callstack 0
  5699                           
  5700 ;; *************** function _isdigit *****************
  5701 ;; Defined at:
  5702 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  5703 ;; Parameters:    Size  Location     Type
  5704 ;;  c               2    0[COMRAM] int 
  5705 ;; Auto vars:     Size  Location     Type
  5706 ;;		None
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  2    0[COMRAM] int 
  5709 ;; Registers used:
  5710 ;;		wreg, status,2, status,0
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5716 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5718 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5719 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5720 ;;Total ram usage:        6 bytes
  5721 ;; Hardware stack levels used:    1
  5722 ;; Hardware stack levels required when called:    1
  5723 ;; This function calls:
  5724 ;;		Nothing
  5725 ;; This function is called by:
  5726 ;;		_vfpfcnvrt
  5727 ;;		_atoi
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           	psect	text27
  5732  001884                     __ptext27:
  5733                           	opt callstack 0
  5734  001884                     _isdigit:
  5735                           	opt callstack 25
  5736                           
  5737                           ;incstack = 0
  5738  001884  0ED0               	movlw	208
  5739  001886  6E03               	movwf	??_isdigit& (0+255),c
  5740  001888  0EFF               	movlw	255
  5741  00188A  6E04               	movwf	(??_isdigit+1)& (0+255),c
  5742  00188C  C001  F005         	movff	isdigit@c,??_isdigit+2
  5743  001890  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  5744  001894  5003               	movf	??_isdigit,w,c
  5745  001896  2605               	addwf	??_isdigit+2,f,c
  5746  001898  5004               	movf	??_isdigit+1,w,c
  5747  00189A  2206               	addwfc	??_isdigit+3,f,c
  5748  00189C  5006               	movf	??_isdigit+3,w,c
  5749  00189E  E106               	bnz	u1640
  5750  0018A0  0E0A               	movlw	10
  5751  0018A2  5C05               	subwf	??_isdigit+2,w,c
  5752  0018A4  B0D8               	btfsc	status,0,c
  5753  0018A6  D002               	goto	u1640
  5754  0018A8  0E01               	movlw	1
  5755  0018AA  D001               	goto	u1650
  5756  0018AC                     u1640:
  5757  0018AC  0E00               	movlw	0
  5758  0018AE                     u1650:
  5759  0018AE  6E01               	movwf	?_isdigit,c
  5760  0018B0  6A02               	clrf	?_isdigit+1,c
  5761  0018B2  0012               	return		;funcret
  5762  0018B4                     __end_of_isdigit:
  5763                           	opt callstack 0
  5764                           
  5765 ;; *************** function ___wmul *****************
  5766 ;; Defined at:
  5767 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;  multiplier      2    0[COMRAM] unsigned int 
  5770 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  product         2    4[COMRAM] unsigned int 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  2    0[COMRAM] unsigned int 
  5775 ;; Registers used:
  5776 ;;		wreg, status,2, status,0, prodl, prodh
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5783 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;Total ram usage:        6 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    1
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_scrDonePoleDet
  5793 ;;		_atoi
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           	psect	text28
  5798  001954                     __ptext28:
  5799                           	opt callstack 0
  5800  001954                     ___wmul:
  5801                           	opt callstack 24
  5802                           
  5803                           ;incstack = 0
  5804  001954  5001               	movf	___wmul@multiplier,w,c
  5805  001956  0203               	mulwf	___wmul@multiplicand,c
  5806  001958  CFF3 F005          	movff	prodl,___wmul@product
  5807  00195C  CFF4 F006          	movff	prodh,___wmul@product+1
  5808  001960  5001               	movf	___wmul@multiplier,w,c
  5809  001962  0204               	mulwf	___wmul@multiplicand+1,c
  5810  001964  50F3               	movf	prodl,w,c
  5811  001966  2606               	addwf	___wmul@product+1,f,c
  5812  001968  5002               	movf	___wmul@multiplier+1,w,c
  5813  00196A  0203               	mulwf	___wmul@multiplicand,c
  5814  00196C  50F3               	movf	prodl,w,c
  5815  00196E  2606               	addwf	___wmul@product+1,f,c
  5816  001970  C005  F001         	movff	___wmul@product,?___wmul
  5817  001974  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5818  001978  0012               	return		;funcret
  5819  00197A                     __end_of___wmul:
  5820                           	opt callstack 0
  5821                           
  5822 ;; *************** function _initLCD *****************
  5823 ;; Defined at:
  5824 ;;		line 69 in file "lcd.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;		None
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1    wreg      void 
  5831 ;; Registers used:
  5832 ;;		wreg, status,2, status,0, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;Total ram usage:        1 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    5
  5845 ;; This function calls:
  5846 ;;		_lcdInst
  5847 ;;		_send_byte
  5848 ;;		_send_nibble
  5849 ;; This function is called by:
  5850 ;;		_main
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854                           	psect	text29
  5855  00151E                     __ptext29:
  5856                           	opt callstack 0
  5857  00151E                     _initLCD:
  5858                           	opt callstack 25
  5859                           
  5860                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  5861                           
  5862                           ;incstack = 0
  5863  00151E  0E31               	movlw	49
  5864  001520  6E05               	movwf	??_initLCD& (0+255),c
  5865  001522  0EB2               	movlw	178
  5866  001524                     u2927:
  5867  001524  2EE8               	decfsz	wreg,f,c
  5868  001526  D7FE               	bra	u2927
  5869  001528  2E05               	decfsz	??_initLCD& (0+255),f,c
  5870  00152A  D7FC               	bra	u2927
  5871  00152C  D000               	nop2	
  5872                           
  5873                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  5874  00152E  948C               	bcf	3980,2,c	;volatile
  5875                           
  5876                           ;lcd.c: 74:     send_nibble(0b0011);
  5877  001530  0E03               	movlw	3
  5878  001532  ECCF  F00C         	call	_send_nibble
  5879                           
  5880                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  5881  001536  0E11               	movlw	17
  5882  001538  6E05               	movwf	??_initLCD& (0+255),c
  5883  00153A  0E3A               	movlw	58
  5884  00153C                     u2937:
  5885  00153C  2EE8               	decfsz	wreg,f,c
  5886  00153E  D7FE               	bra	u2937
  5887  001540  2E05               	decfsz	??_initLCD& (0+255),f,c
  5888  001542  D7FC               	bra	u2937
  5889  001544  D000               	nop2	
  5890                           
  5891                           ;lcd.c: 76:     send_nibble(0b0011);
  5892  001546  0E03               	movlw	3
  5893  001548  ECCF  F00C         	call	_send_nibble
  5894                           
  5895                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  5896  00154C  0E7D               	movlw	125
  5897  00154E                     u2947:
  5898  00154E  2EE8               	decfsz	wreg,f,c
  5899  001550  D7FE               	bra	u2947
  5900                           
  5901                           ;lcd.c: 78:     send_byte(0b00110010);
  5902  001552  0E32               	movlw	50
  5903  001554  ECDA  F00C         	call	_send_byte
  5904                           
  5905                           ;lcd.c: 80:     send_byte(0b00101000);
  5906  001558  0E28               	movlw	40
  5907  00155A  ECDA  F00C         	call	_send_byte
  5908                           
  5909                           ;lcd.c: 81:     send_byte(0b00001000);
  5910  00155E  0E08               	movlw	8
  5911  001560  ECDA  F00C         	call	_send_byte
  5912                           
  5913                           ;lcd.c: 82:     send_byte(0b00000001);
  5914  001564  0E01               	movlw	1
  5915  001566  ECDA  F00C         	call	_send_byte
  5916                           
  5917                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  5918  00156A  0E11               	movlw	17
  5919  00156C  6E05               	movwf	??_initLCD& (0+255),c
  5920  00156E  0E3A               	movlw	58
  5921  001570                     u2957:
  5922  001570  2EE8               	decfsz	wreg,f,c
  5923  001572  D7FE               	bra	u2957
  5924  001574  2E05               	decfsz	??_initLCD& (0+255),f,c
  5925  001576  D7FC               	bra	u2957
  5926  001578  D000               	nop2	
  5927                           
  5928                           ;lcd.c: 84:     send_byte(0b00000110);
  5929  00157A  0E06               	movlw	6
  5930  00157C  ECDA  F00C         	call	_send_byte
  5931                           
  5932                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  5933  001580  0E0F               	movlw	15
  5934  001582  ECFB  F00C         	call	_lcdInst
  5935  001586  0012               	return		;funcret
  5936  001588                     __end_of_initLCD:
  5937                           	opt callstack 0
  5938                           
  5939 ;; *************** function _lcdInst *****************
  5940 ;; Defined at:
  5941 ;;		line 64 in file "lcd.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  data            1    wreg     unsigned char 
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;  data            1    3[COMRAM] unsigned char 
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  1    wreg      void 
  5948 ;; Registers used:
  5949 ;;		wreg, status,2, status,0, cstack
  5950 ;; Tracked objects:
  5951 ;;		On entry : 0/0
  5952 ;;		On exit  : 0/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5959 ;;Total ram usage:        1 bytes
  5960 ;; Hardware stack levels used:    1
  5961 ;; Hardware stack levels required when called:    4
  5962 ;; This function calls:
  5963 ;;		_send_byte
  5964 ;; This function is called by:
  5965 ;;		_showTime
  5966 ;;		_scrRunning
  5967 ;;		_scrDoneMain
  5968 ;;		_scrDoneGen
  5969 ;;		_scrDonePoleDet
  5970 ;;		_initLCD
  5971 ;;		_lcd_shift_cursor
  5972 ;;		_lcd_shift_display
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text30
  5977  0019F6                     __ptext30:
  5978                           	opt callstack 0
  5979  0019F6                     _lcdInst:
  5980                           	opt callstack 25
  5981                           
  5982                           ;incstack = 0
  5983                           ;lcdInst@data stored from wreg
  5984  0019F6  6E04               	movwf	lcdInst@data,c
  5985                           
  5986                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  5987  0019F8  948C               	bcf	3980,2,c	;volatile
  5988                           
  5989                           ;lcd.c: 66:     send_byte(data);
  5990  0019FA  5004               	movf	lcdInst@data,w,c
  5991  0019FC  ECDA  F00C         	call	_send_byte
  5992  001A00  0012               	return		;funcret
  5993  001A02                     __end_of_lcdInst:
  5994                           	opt callstack 0
  5995                           
  5996 ;; *************** function _send_byte *****************
  5997 ;; Defined at:
  5998 ;;		line 55 in file "lcd.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;  data            1    wreg     unsigned char 
  6001 ;; Auto vars:     Size  Location     Type
  6002 ;;  data            1    2[COMRAM] unsigned char 
  6003 ;; Return value:  Size  Location     Type
  6004 ;;                  1    wreg      void 
  6005 ;; Registers used:
  6006 ;;		wreg, status,2, status,0, cstack
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6013 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6015 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6016 ;;Total ram usage:        1 bytes
  6017 ;; Hardware stack levels used:    1
  6018 ;; Hardware stack levels required when called:    3
  6019 ;; This function calls:
  6020 ;;		_send_nibble
  6021 ;; This function is called by:
  6022 ;;		_lcdInst
  6023 ;;		_initLCD
  6024 ;;		_putch
  6025 ;; This function uses a non-reentrant model
  6026 ;;
  6027                           
  6028                           	psect	text31
  6029  0019B4                     __ptext31:
  6030                           	opt callstack 0
  6031  0019B4                     _send_byte:
  6032                           	opt callstack 18
  6033                           
  6034                           ;incstack = 0
  6035                           ;send_byte@data stored from wreg
  6036  0019B4  6E03               	movwf	send_byte@data,c
  6037                           
  6038                           ;lcd.c: 57:     send_nibble(data >> 4);
  6039  0019B6  3803               	swapf	send_byte@data,w,c
  6040  0019B8  0B0F               	andlw	15
  6041  0019BA  ECCF  F00C         	call	_send_nibble
  6042                           
  6043                           ;lcd.c: 60:     send_nibble(data);
  6044  0019BE  5003               	movf	send_byte@data,w,c
  6045  0019C0  ECCF  F00C         	call	_send_nibble
  6046  0019C4  0012               	return		;funcret
  6047  0019C6                     __end_of_send_byte:
  6048                           	opt callstack 0
  6049                           
  6050 ;; *************** function _send_nibble *****************
  6051 ;; Defined at:
  6052 ;;		line 44 in file "lcd.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;  data            1    wreg     unsigned char 
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;  data            1    1[COMRAM] unsigned char 
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      void 
  6059 ;; Registers used:
  6060 ;;		wreg, status,2, status,0, cstack
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6067 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6069 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6070 ;;Total ram usage:        1 bytes
  6071 ;; Hardware stack levels used:    1
  6072 ;; Hardware stack levels required when called:    2
  6073 ;; This function calls:
  6074 ;;		_pulse_e
  6075 ;; This function is called by:
  6076 ;;		_send_byte
  6077 ;;		_initLCD
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           
  6081                           	psect	text32
  6082  00199E                     __ptext32:
  6083                           	opt callstack 0
  6084  00199E                     _send_nibble:
  6085                           	opt callstack 18
  6086                           
  6087                           ;incstack = 0
  6088                           ;send_nibble@data stored from wreg
  6089  00199E  6E02               	movwf	send_nibble@data,c
  6090                           
  6091                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  6092  0019A0  508C               	movf	3980,w,c	;volatile
  6093  0019A2  0B0F               	andlw	15
  6094  0019A4  6E8C               	movwf	3980,c	;volatile
  6095                           
  6096                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  6097  0019A6  3802               	swapf	send_nibble@data,w,c
  6098  0019A8  0BF0               	andlw	240
  6099  0019AA  108C               	iorwf	3980,w,c	;volatile
  6100  0019AC  6E8C               	movwf	3980,c	;volatile
  6101                           
  6102                           ;lcd.c: 48:     pulse_e();
  6103  0019AE  EC6F  F00C         	call	_pulse_e	;wreg free
  6104  0019B2  0012               	return		;funcret
  6105  0019B4                     __end_of_send_nibble:
  6106                           	opt callstack 0
  6107                           
  6108 ;; *************** function _pulse_e *****************
  6109 ;; Defined at:
  6110 ;;		line 28 in file "lcd.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;		None
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  interruptSta    1    0[COMRAM] unsigned char 
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  1    wreg      void 
  6117 ;; Registers used:
  6118 ;;		wreg
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6127 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;Total ram usage:        1 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:    1
  6131 ;; This function calls:
  6132 ;;		Nothing
  6133 ;; This function is called by:
  6134 ;;		_send_nibble
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           	psect	text33
  6139  0018DE                     __ptext33:
  6140                           	opt callstack 0
  6141  0018DE                     _pulse_e:
  6142                           	opt callstack 18
  6143                           
  6144                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  6145                           
  6146                           ;incstack = 0
  6147  0018DE  0E00               	movlw	0
  6148  0018E0  BEF2               	btfsc	4082,7,c	;volatile
  6149  0018E2  0E01               	movlw	1
  6150  0018E4  6E01               	movwf	pulse_e@interruptState,c
  6151                           
  6152                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  6153  0018E6  9EF2               	bcf	4082,7,c	;volatile
  6154                           
  6155                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  6156  0018E8  868C               	bsf	3980,3,c	;volatile
  6157                           
  6158                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  6159  0018EA  0E14               	movlw	20
  6160  0018EC                     u2967:
  6161  0018EC  2EE8               	decfsz	wreg,f,c
  6162  0018EE  D7FE               	bra	u2967
  6163  0018F0  D000               	nop2	
  6164                           
  6165                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  6166  0018F2  968C               	bcf	3980,3,c	;volatile
  6167                           
  6168                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  6169  0018F4  0E53               	movlw	83
  6170  0018F6                     u2977:
  6171  0018F6  2EE8               	decfsz	wreg,f,c
  6172  0018F8  D7FE               	bra	u2977
  6173  0018FA  F000               	nop	
  6174                           
  6175                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  6176  0018FC  B001               	btfsc	pulse_e@interruptState,0,c
  6177  0018FE  D002               	bra	u1435
  6178  001900  9EF2               	bcf	4082,7,c	;volatile
  6179  001902  D001               	bra	u1436
  6180  001904                     u1435:
  6181  001904  8EF2               	bsf	4082,7,c	;volatile
  6182  001906                     u1436:
  6183  001906  0012               	return		;funcret
  6184  001908                     __end_of_pulse_e:
  6185                           	opt callstack 0
  6186                           
  6187 ;; *************** function _getTime *****************
  6188 ;; Defined at:
  6189 ;;		line 7 in file "./getTime.h"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  pTime           2    3[COMRAM] PTR unsigned char 
  6192 ;;		 -> main@time(7), 
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;  i               1    5[COMRAM] unsigned char 
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  1    wreg      void 
  6197 ;; Registers used:
  6198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6207 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6208 ;;Total ram usage:        3 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; Hardware stack levels required when called:    3
  6211 ;; This function calls:
  6212 ;;		_I2C_Master_Read
  6213 ;;		_I2C_Master_Start
  6214 ;;		_I2C_Master_Stop
  6215 ;;		_I2C_Master_Write
  6216 ;; This function is called by:
  6217 ;;		_main
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           
  6221                           	psect	text34
  6222  001588                     __ptext34:
  6223                           	opt callstack 0
  6224  001588                     _getTime:
  6225                           	opt callstack 27
  6226                           
  6227                           ;./getTime.h: 9:     I2C_Master_Start();
  6228                           
  6229                           ;incstack = 0
  6230  001588  EC0A  F00D         	call	_I2C_Master_Start	;wreg free
  6231                           
  6232                           ;./getTime.h: 10:     I2C_Master_Write(0b11010000);
  6233  00158C  0E00               	movlw	0
  6234  00158E  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  6235  001590  0ED0               	movlw	208
  6236  001592  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  6237  001594  EC01  F00D         	call	_I2C_Master_Write	;wreg free
  6238                           
  6239                           ;./getTime.h: 11:     I2C_Master_Write(0x00);
  6240  001598  0E00               	movlw	0
  6241  00159A  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  6242  00159C  0E00               	movlw	0
  6243  00159E  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  6244  0015A0  EC01  F00D         	call	_I2C_Master_Write	;wreg free
  6245                           
  6246                           ;./getTime.h: 12:     I2C_Master_Stop();
  6247  0015A4  EC06  F00D         	call	_I2C_Master_Stop	;wreg free
  6248                           
  6249                           ;./getTime.h: 15:     I2C_Master_Start();
  6250  0015A8  EC0A  F00D         	call	_I2C_Master_Start	;wreg free
  6251                           
  6252                           ;./getTime.h: 16:     I2C_Master_Write(0b11010001);
  6253  0015AC  0E00               	movlw	0
  6254  0015AE  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  6255  0015B0  0ED1               	movlw	209
  6256  0015B2  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  6257  0015B4  EC01  F00D         	call	_I2C_Master_Write	;wreg free
  6258                           
  6259                           ;./getTime.h: 17:     for(unsigned char i = 0; i < 2; i++){
  6260  0015B8  0E00               	movlw	0
  6261  0015BA  6E06               	movwf	getTime@i,c
  6262  0015BC                     l2941:
  6263                           
  6264                           ;./getTime.h: 18:         pTime[i] = I2C_Master_Read(0);
  6265  0015BC  5006               	movf	getTime@i,w,c
  6266  0015BE  2404               	addwf	getTime@pTime,w,c
  6267  0015C0  6ED9               	movwf	fsr2l,c
  6268  0015C2  0E00               	movlw	0
  6269  0015C4  2005               	addwfc	getTime@pTime+1,w,c
  6270  0015C6  6EDA               	movwf	fsr2h,c
  6271  0015C8  0E00               	movlw	0
  6272  0015CA  ECBD  F00C         	call	_I2C_Master_Read
  6273  0015CE  6EDF               	movwf	indf2,c
  6274                           
  6275                           ;./getTime.h: 19:     }
  6276  0015D0  2A06               	incf	getTime@i,f,c
  6277  0015D2  0E01               	movlw	1
  6278  0015D4  6406               	cpfsgt	getTime@i,c
  6279  0015D6  D7F2               	goto	l2941
  6280                           
  6281                           ;./getTime.h: 20:     pTime[2] = I2C_Master_Read(1);
  6282  0015D8  EE20 F002          	lfsr	2,2
  6283  0015DC  5004               	movf	getTime@pTime,w,c
  6284  0015DE  26D9               	addwf	fsr2l,f,c
  6285  0015E0  5005               	movf	getTime@pTime+1,w,c
  6286  0015E2  22DA               	addwfc	fsr2h,f,c
  6287  0015E4  0E01               	movlw	1
  6288  0015E6  ECBD  F00C         	call	_I2C_Master_Read
  6289  0015EA  6EDF               	movwf	indf2,c
  6290                           
  6291                           ;./getTime.h: 21:     I2C_Master_Stop();
  6292  0015EC  EC06  F00D         	call	_I2C_Master_Stop	;wreg free
  6293  0015F0  0012               	return		;funcret
  6294  0015F2                     __end_of_getTime:
  6295                           	opt callstack 0
  6296                           
  6297 ;; *************** function _I2C_Master_Write *****************
  6298 ;; Defined at:
  6299 ;;		line 70 in file "I2C.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  byteToWrite     2    1[COMRAM] unsigned int 
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;		None
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  1    wreg      void 
  6306 ;; Registers used:
  6307 ;;		wreg, status,2, status,0, cstack
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6316 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6317 ;;Total ram usage:        2 bytes
  6318 ;; Hardware stack levels used:    1
  6319 ;; Hardware stack levels required when called:    2
  6320 ;; This function calls:
  6321 ;;		_I2C_Master_Wait
  6322 ;; This function is called by:
  6323 ;;		_showTime
  6324 ;;		_getTime
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           	psect	text35
  6329  001A02                     __ptext35:
  6330                           	opt callstack 0
  6331  001A02                     _I2C_Master_Write:
  6332                           	opt callstack 27
  6333                           
  6334                           ;I2C.c: 71:     I2C_Master_Wait();
  6335                           
  6336                           ;incstack = 0
  6337  001A02  ECE3  F00C         	call	_I2C_Master_Wait	;wreg free
  6338                           
  6339                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  6340  001A06  C002  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  6341  001A0A  0012               	return		;funcret
  6342  001A0C                     __end_of_I2C_Master_Write:
  6343                           	opt callstack 0
  6344                           
  6345 ;; *************** function _I2C_Master_Stop *****************
  6346 ;; Defined at:
  6347 ;;		line 65 in file "I2C.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;		None
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;		None
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  1    wreg      void 
  6354 ;; Registers used:
  6355 ;;		wreg, status,2, status,0, cstack
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6365 ;;Total ram usage:        0 bytes
  6366 ;; Hardware stack levels used:    1
  6367 ;; Hardware stack levels required when called:    2
  6368 ;; This function calls:
  6369 ;;		_I2C_Master_Wait
  6370 ;; This function is called by:
  6371 ;;		_showTime
  6372 ;;		_getTime
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text36
  6377  001A0C                     __ptext36:
  6378                           	opt callstack 0
  6379  001A0C                     _I2C_Master_Stop:
  6380                           	opt callstack 27
  6381                           
  6382                           ;I2C.c: 66:     I2C_Master_Wait();
  6383                           
  6384                           ;incstack = 0
  6385  001A0C  ECE3  F00C         	call	_I2C_Master_Wait	;wreg free
  6386                           
  6387                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  6388  001A10  84C5               	bsf	4037,2,c	;volatile
  6389  001A12  0012               	return		;funcret
  6390  001A14                     __end_of_I2C_Master_Stop:
  6391                           	opt callstack 0
  6392                           
  6393 ;; *************** function _I2C_Master_Start *****************
  6394 ;; Defined at:
  6395 ;;		line 55 in file "I2C.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;		None
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;		None
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  1    wreg      void 
  6402 ;; Registers used:
  6403 ;;		wreg, status,2, status,0, cstack
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6413 ;;Total ram usage:        0 bytes
  6414 ;; Hardware stack levels used:    1
  6415 ;; Hardware stack levels required when called:    2
  6416 ;; This function calls:
  6417 ;;		_I2C_Master_Wait
  6418 ;; This function is called by:
  6419 ;;		_showTime
  6420 ;;		_getTime
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           	psect	text37
  6425  001A14                     __ptext37:
  6426                           	opt callstack 0
  6427  001A14                     _I2C_Master_Start:
  6428                           	opt callstack 27
  6429                           
  6430                           ;I2C.c: 56:     I2C_Master_Wait();
  6431                           
  6432                           ;incstack = 0
  6433  001A14  ECE3  F00C         	call	_I2C_Master_Wait	;wreg free
  6434                           
  6435                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  6436  001A18  80C5               	bsf	4037,0,c	;volatile
  6437  001A1A  0012               	return		;funcret
  6438  001A1C                     __end_of_I2C_Master_Start:
  6439                           	opt callstack 0
  6440                           
  6441 ;; *************** function _I2C_Master_Read *****************
  6442 ;; Defined at:
  6443 ;;		line 77 in file "I2C.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  ackBit          1    wreg     unsigned char 
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;  ackBit          1    1[COMRAM] unsigned char 
  6448 ;;  receivedByte    1    2[COMRAM] unsigned char 
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  1    wreg      unsigned char 
  6451 ;; Registers used:
  6452 ;;		wreg, status,2, status,0, cstack
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6462 ;;Total ram usage:        2 bytes
  6463 ;; Hardware stack levels used:    1
  6464 ;; Hardware stack levels required when called:    2
  6465 ;; This function calls:
  6466 ;;		_I2C_Master_Wait
  6467 ;; This function is called by:
  6468 ;;		_showTime
  6469 ;;		_getTime
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473                           	psect	text38
  6474  00197A                     __ptext38:
  6475                           	opt callstack 0
  6476  00197A                     _I2C_Master_Read:
  6477                           	opt callstack 27
  6478                           
  6479                           ;incstack = 0
  6480                           ;I2C_Master_Read@ackBit stored from wreg
  6481  00197A  6E02               	movwf	I2C_Master_Read@ackBit,c
  6482                           
  6483                           ;I2C.c: 78:     I2C_Master_Wait();
  6484  00197C  ECE3  F00C         	call	_I2C_Master_Wait	;wreg free
  6485                           
  6486                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  6487  001980  86C5               	bsf	4037,3,c	;volatile
  6488                           
  6489                           ;I2C.c: 81:     I2C_Master_Wait();
  6490  001982  ECE3  F00C         	call	_I2C_Master_Wait	;wreg free
  6491                           
  6492                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  6493  001986  CFC9 F003          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  6494                           
  6495                           ;I2C.c: 86:     I2C_Master_Wait();
  6496  00198A  ECE3  F00C         	call	_I2C_Master_Wait	;wreg free
  6497                           
  6498                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  6499  00198E  B002               	btfsc	I2C_Master_Read@ackBit,0,c
  6500  001990  D002               	bra	u2365
  6501  001992  9AC5               	bcf	4037,5,c	;volatile
  6502  001994  D001               	bra	u2366
  6503  001996                     u2365:
  6504  001996  8AC5               	bsf	4037,5,c	;volatile
  6505  001998                     u2366:
  6506                           
  6507                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  6508  001998  88C5               	bsf	4037,4,c	;volatile
  6509                           
  6510                           ;I2C.c: 90:     return receivedByte;
  6511  00199A  5003               	movf	I2C_Master_Read@receivedByte,w,c
  6512  00199C  0012               	return		;funcret
  6513  00199E                     __end_of_I2C_Master_Read:
  6514                           	opt callstack 0
  6515                           
  6516 ;; *************** function _I2C_Master_Wait *****************
  6517 ;; Defined at:
  6518 ;;		line 21 in file "I2C.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;		None
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;		None
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  1    wreg      void 
  6525 ;; Registers used:
  6526 ;;		wreg, status,2, status,0
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6534 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;Total ram usage:        1 bytes
  6537 ;; Hardware stack levels used:    1
  6538 ;; Hardware stack levels required when called:    1
  6539 ;; This function calls:
  6540 ;;		Nothing
  6541 ;; This function is called by:
  6542 ;;		_I2C_Master_Start
  6543 ;;		_I2C_Master_Stop
  6544 ;;		_I2C_Master_Write
  6545 ;;		_I2C_Master_Read
  6546 ;;		_I2C_Master_RepeatedStart
  6547 ;; This function uses a non-reentrant model
  6548 ;;
  6549                           
  6550                           	psect	text39
  6551  0019C6                     __ptext39:
  6552                           	opt callstack 0
  6553  0019C6                     _I2C_Master_Wait:
  6554                           	opt callstack 27
  6555                           
  6556                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  6557                           
  6558                           ;I2C.c: 28:     }
  6559                           
  6560                           ;incstack = 0
  6561  0019C6  B4C7               	btfsc	4039,2,c	;volatile
  6562  0019C8  D7FE               	goto	_I2C_Master_Wait
  6563  0019CA  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  6564  0019CE  0E1F               	movlw	31
  6565  0019D0  1601               	andwf	??_I2C_Master_Wait,f,c
  6566  0019D2  B4D8               	btfsc	status,2,c
  6567  0019D4  0012               	return	
  6568  0019D6  D7F7               	goto	_I2C_Master_Wait
  6569  0019D8                     __end_of_I2C_Master_Wait:
  6570                           	opt callstack 0
  6571                           
  6572 ;; *************** function _I2C_Master_Init *****************
  6573 ;; Defined at:
  6574 ;;		line 32 in file "I2C.c"
  6575 ;; Parameters:    Size  Location     Type
  6576 ;;  clockFreq       4   13[COMRAM] const unsigned long 
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;		None
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  1    wreg      void 
  6581 ;; Registers used:
  6582 ;;		wreg, status,2, status,0, cstack
  6583 ;; Tracked objects:
  6584 ;;		On entry : 0/0
  6585 ;;		On exit  : 0/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6588 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6590 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6591 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6592 ;;Total ram usage:        8 bytes
  6593 ;; Hardware stack levels used:    1
  6594 ;; Hardware stack levels required when called:    2
  6595 ;; This function calls:
  6596 ;;		___lldiv
  6597 ;; This function is called by:
  6598 ;;		_main
  6599 ;; This function uses a non-reentrant model
  6600 ;;
  6601                           
  6602                           	psect	text40
  6603  0015F2                     __ptext40:
  6604                           	opt callstack 0
  6605  0015F2                     _I2C_Master_Init:
  6606                           	opt callstack 28
  6607                           
  6608                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  6609                           
  6610                           ;incstack = 0
  6611  0015F2  9AC6               	bcf	4038,5,c	;volatile
  6612                           
  6613                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  6614  0015F4  8694               	bsf	3988,3,c	;volatile
  6615                           
  6616                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  6617  0015F6  8894               	bsf	3988,4,c	;volatile
  6618                           
  6619                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  6620  0015F8  0E80               	movlw	128
  6621  0015FA  6E01               	movwf	___lldiv@dividend,c
  6622  0015FC  0E96               	movlw	150
  6623  0015FE  6E02               	movwf	___lldiv@dividend+1,c
  6624  001600  0E98               	movlw	152
  6625  001602  6E03               	movwf	___lldiv@dividend+2,c
  6626  001604  0E00               	movlw	0
  6627  001606  6E04               	movwf	___lldiv@dividend+3,c
  6628  001608  C00E  F012         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  6629  00160C  C00F  F013         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  6630  001610  C010  F014         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  6631  001614  C011  F015         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  6632  001618  0E02               	movlw	2
  6633  00161A                     u2565:
  6634  00161A  90D8               	bcf	status,0,c
  6635  00161C  3612               	rlcf	??_I2C_Master_Init,f,c
  6636  00161E  3613               	rlcf	??_I2C_Master_Init+1,f,c
  6637  001620  3614               	rlcf	??_I2C_Master_Init+2,f,c
  6638  001622  3615               	rlcf	??_I2C_Master_Init+3,f,c
  6639  001624  2EE8               	decfsz	wreg,f,c
  6640  001626  D7F9               	goto	u2565
  6641  001628  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  6642  00162C  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  6643  001630  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  6644  001634  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  6645  001638  ECA9  F009         	call	___lldiv	;wreg free
  6646  00163C  0401               	decf	?___lldiv,w,c
  6647  00163E  6EC8               	movwf	4040,c	;volatile
  6648                           
  6649                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  6650  001640  0E80               	movlw	128
  6651  001642  6EC7               	movwf	4039,c	;volatile
  6652                           
  6653                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  6654  001644  0E28               	movlw	40
  6655  001646  6EC6               	movwf	4038,c	;volatile
  6656                           
  6657                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  6658  001648  0E00               	movlw	0
  6659  00164A  6EC5               	movwf	4037,c	;volatile
  6660  00164C  0012               	return		;funcret
  6661  00164E                     __end_of_I2C_Master_Init:
  6662                           	opt callstack 0
  6663                           
  6664 ;; *************** function ___lldiv *****************
  6665 ;; Defined at:
  6666 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;  dividend        4    0[COMRAM] unsigned long 
  6669 ;;  divisor         4    4[COMRAM] unsigned long 
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;  quotient        4    8[COMRAM] unsigned long 
  6672 ;;  counter         1   12[COMRAM] unsigned char 
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  4    0[COMRAM] unsigned long 
  6675 ;; Registers used:
  6676 ;;		wreg, status,2, status,0
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6682 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6683 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6685 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6686 ;;Total ram usage:       13 bytes
  6687 ;; Hardware stack levels used:    1
  6688 ;; Hardware stack levels required when called:    1
  6689 ;; This function calls:
  6690 ;;		Nothing
  6691 ;; This function is called by:
  6692 ;;		_I2C_Master_Init
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           	psect	text41
  6697  001352                     __ptext41:
  6698                           	opt callstack 0
  6699  001352                     ___lldiv:
  6700                           	opt callstack 28
  6701                           
  6702                           ;incstack = 0
  6703  001352  0E00               	movlw	0
  6704  001354  6E09               	movwf	___lldiv@quotient,c
  6705  001356  0E00               	movlw	0
  6706  001358  6E0A               	movwf	___lldiv@quotient+1,c
  6707  00135A  0E00               	movlw	0
  6708  00135C  6E0B               	movwf	___lldiv@quotient+2,c
  6709  00135E  0E00               	movlw	0
  6710  001360  6E0C               	movwf	___lldiv@quotient+3,c
  6711  001362  5005               	movf	___lldiv@divisor,w,c
  6712  001364  1006               	iorwf	___lldiv@divisor+1,w,c
  6713  001366  1007               	iorwf	___lldiv@divisor+2,w,c
  6714  001368  1008               	iorwf	___lldiv@divisor+3,w,c
  6715  00136A  B4D8               	btfsc	status,2,c
  6716  00136C  D02A               	goto	l387
  6717  00136E  0E01               	movlw	1
  6718  001370  6E0D               	movwf	___lldiv@counter,c
  6719  001372  D006               	goto	l2703
  6720  001374                     l2701:
  6721  001374  90D8               	bcf	status,0,c
  6722  001376  3605               	rlcf	___lldiv@divisor,f,c
  6723  001378  3606               	rlcf	___lldiv@divisor+1,f,c
  6724  00137A  3607               	rlcf	___lldiv@divisor+2,f,c
  6725  00137C  3608               	rlcf	___lldiv@divisor+3,f,c
  6726  00137E  2A0D               	incf	___lldiv@counter,f,c
  6727  001380                     l2703:
  6728  001380  AE08               	btfss	___lldiv@divisor+3,7,c
  6729  001382  D7F8               	goto	l2701
  6730  001384                     u2380:
  6731  001384  90D8               	bcf	status,0,c
  6732  001386  3609               	rlcf	___lldiv@quotient,f,c
  6733  001388  360A               	rlcf	___lldiv@quotient+1,f,c
  6734  00138A  360B               	rlcf	___lldiv@quotient+2,f,c
  6735  00138C  360C               	rlcf	___lldiv@quotient+3,f,c
  6736  00138E  5005               	movf	___lldiv@divisor,w,c
  6737  001390  5C01               	subwf	___lldiv@dividend,w,c
  6738  001392  5006               	movf	___lldiv@divisor+1,w,c
  6739  001394  5802               	subwfb	___lldiv@dividend+1,w,c
  6740  001396  5007               	movf	___lldiv@divisor+2,w,c
  6741  001398  5803               	subwfb	___lldiv@dividend+2,w,c
  6742  00139A  5008               	movf	___lldiv@divisor+3,w,c
  6743  00139C  5804               	subwfb	___lldiv@dividend+3,w,c
  6744  00139E  A0D8               	btfss	status,0,c
  6745  0013A0  D009               	goto	l2713
  6746  0013A2  5005               	movf	___lldiv@divisor,w,c
  6747  0013A4  5E01               	subwf	___lldiv@dividend,f,c
  6748  0013A6  5006               	movf	___lldiv@divisor+1,w,c
  6749  0013A8  5A02               	subwfb	___lldiv@dividend+1,f,c
  6750  0013AA  5007               	movf	___lldiv@divisor+2,w,c
  6751  0013AC  5A03               	subwfb	___lldiv@dividend+2,f,c
  6752  0013AE  5008               	movf	___lldiv@divisor+3,w,c
  6753  0013B0  5A04               	subwfb	___lldiv@dividend+3,f,c
  6754  0013B2  8009               	bsf	___lldiv@quotient,0,c
  6755  0013B4                     l2713:
  6756  0013B4  90D8               	bcf	status,0,c
  6757  0013B6  3208               	rrcf	___lldiv@divisor+3,f,c
  6758  0013B8  3207               	rrcf	___lldiv@divisor+2,f,c
  6759  0013BA  3206               	rrcf	___lldiv@divisor+1,f,c
  6760  0013BC  3205               	rrcf	___lldiv@divisor,f,c
  6761  0013BE  2E0D               	decfsz	___lldiv@counter,f,c
  6762  0013C0  D7E1               	goto	u2380
  6763  0013C2                     l387:
  6764  0013C2  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6765  0013C6  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6766  0013CA  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6767  0013CE  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6768  0013D2  0012               	return		;funcret
  6769  0013D4                     __end_of___lldiv:
  6770                           	opt callstack 0
  6771                           
  6772 ;; *************** function _interruptHandler *****************
  6773 ;; Defined at:
  6774 ;;		line 152 in file "main.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;		None
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;		None
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  1    wreg      void 
  6781 ;; Registers used:
  6782 ;;		wreg, status,2
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6792 ;;Total ram usage:        0 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; This function calls:
  6795 ;;		Nothing
  6796 ;; This function is called by:
  6797 ;;		Interrupt level 2
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           	psect	intcode
  6802  000008                     __pintcode:
  6803                           	opt callstack 0
  6804  000008                     _interruptHandler:
  6805                           	opt callstack 18
  6806                           
  6807                           ;incstack = 0
  6808  000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6809  00000A  EDEC  F00C         	call	int_func,f	;refresh shadow registers
  6810                           
  6811                           	psect	intcode_body
  6812  0019D8                     __pintcode_body:
  6813                           	opt callstack 18
  6814  0019D8                     int_func:
  6815                           	opt callstack 18
  6816  0019D8  0006               	pop		; remove dummy address from shadow register refresh
  6817                           
  6818                           ;main.c: 154:     if(INT1IF){
  6819  0019DA  A0F0               	btfss	4080,0,c	;volatile
  6820  0019DC  D004               	goto	i2l132
  6821                           
  6822                           ;main.c: 157:         key_was_pressed = 1;
  6823  0019DE  0E01               	movlw	1
  6824  0019E0  0100               	movlb	0	; () banked
  6825  0019E2  6F8D               	movwf	_key_was_pressed& (0+255),b	;volatile
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;main.c: 158:         INT1IF = 0;
  6829  0019E4  90F0               	bcf	4080,0,c	;volatile
  6830  0019E6                     i2l132:
  6831  0019E6  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6832  0019E8  0011               	retfie		f
  6833  0019EA                     __end_of_interruptHandler:
  6834                           	opt callstack 0
  6835                           
  6836                           	psect	rparam
  6837  0000                     
  6838                           	psect	temp
  6839  00007F                     btemp:
  6840                           	opt callstack 0
  6841  00007F                     	ds	1
  6842  0000                     int$flags	set	btemp
  6843  0000                     wtemp8	set	btemp+1
  6844  0000                     ttemp5	set	btemp+1
  6845  0000                     ttemp6	set	btemp+4
  6846  0000                     ttemp7	set	btemp+8
  6847                           tosu	equ	0xFFF
  6848                           tosh	equ	0xFFE
  6849                           tosl	equ	0xFFD
  6850                           stkptr	equ	0xFFC
  6851                           pclatu	equ	0xFFB
  6852                           pclath	equ	0xFFA
  6853                           pcl	equ	0xFF9
  6854                           tblptru	equ	0xFF8
  6855                           tblptrh	equ	0xFF7
  6856                           tblptrl	equ	0xFF6
  6857                           tablat	equ	0xFF5
  6858                           prodh	equ	0xFF4
  6859                           prodl	equ	0xFF3
  6860                           indf0	equ	0xFEF
  6861                           postinc0	equ	0xFEE
  6862                           postdec0	equ	0xFED
  6863                           preinc0	equ	0xFEC
  6864                           plusw0	equ	0xFEB
  6865                           fsr0h	equ	0xFEA
  6866                           fsr0l	equ	0xFE9
  6867                           wreg	equ	0xFE8
  6868                           indf1	equ	0xFE7
  6869                           postinc1	equ	0xFE6
  6870                           postdec1	equ	0xFE5
  6871                           preinc1	equ	0xFE4
  6872                           plusw1	equ	0xFE3
  6873                           fsr1h	equ	0xFE2
  6874                           fsr1l	equ	0xFE1
  6875                           bsr	equ	0xFE0
  6876                           indf2	equ	0xFDF
  6877                           postinc2	equ	0xFDE
  6878                           postdec2	equ	0xFDD
  6879                           preinc2	equ	0xFDC
  6880                           plusw2	equ	0xFDB
  6881                           fsr2h	equ	0xFDA
  6882                           fsr2l	equ	0xFD9
  6883                           status	equ	0xFD8


Data Sizes:
    Strings     357
    Constant    30
    Data        0
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    126     126
    BANK0           128     28      74
    BANK1           256      0      75
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_22(CODE[17]), STR_21(CODE[20]), STR_20(CODE[20]), STR_19(CODE[23]), 
		 -> STR_18(CODE[17]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[18]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), 
		 -> STR_10(CODE[2]), STR_9(CODE[5]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[23]), 
		 -> STR_2(CODE[23]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1047_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_22(CODE[17]), STR_21(CODE[20]), STR_20(CODE[20]), STR_19(CODE[23]), 
		 -> STR_18(CODE[17]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[18]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), 
		 -> STR_10(CODE[2]), STR_9(CODE[5]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[23]), 
		 -> STR_2(CODE[23]), STR_1(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_22(CODE[17]), STR_21(CODE[20]), STR_20(CODE[20]), STR_19(CODE[23]), 
		 -> STR_18(CODE[17]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[18]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), 
		 -> STR_10(CODE[2]), STR_9(CODE[5]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[23]), 
		 -> STR_2(CODE[23]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 23
		 -> STR_22(CODE[17]), STR_21(CODE[20]), STR_20(CODE[20]), STR_19(CODE[23]), 
		 -> STR_18(CODE[17]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[18]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), 
		 -> STR_10(CODE[2]), STR_9(CODE[5]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[23]), 
		 -> STR_2(CODE[23]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    getTime@pTime	PTR unsigned char  size(2) Largest target is 7
		 -> main@time(BANK0[7]), 

    scrDonePoleDet@poleData	PTR struct poleInfo size(2) Largest target is 75
		 -> poleInfoArr(BANK1[75]), 

    scrRunning@time	PTR unsigned char  size(2) Largest target is 3
		 -> main@startTimeInt(BANK0[3]), 

    showTime@pTime	PTR unsigned char  size(2) Largest target is 7
		 -> main@time(BANK0[7]), 


Critical Paths under _main in COMRAM

    _main->_scrDoneGen
    _main->_showTime
    _showTime->_printf
    _scrRunning->_printf
    _scrDonePoleDet->_printf
    ___awmod->___wmul
    ___awdiv->___wmul
    _scrDoneMain->_printf
    _scrDoneGen->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _getTime->_I2C_Master_Read
    _getTime->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _interruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_scrDonePoleDet

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   85023
                                              9 BANK0     19    19      0
                    _I2C_Master_Init
                            _getTime
                            _initLCD
                         _scrDoneGen
                        _scrDoneMain
                     _scrDonePoleDet
                         _scrRunning
                           _showTime
 ---------------------------------------------------------------------------------
 (1) _showTime                                             6     4      2   16602
                                            121 COMRAM     5     3      2
                                              0 BANK0      1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _scrRunning                                           6     4      2   15947
                                            121 COMRAM     4     2      2
                                              0 BANK0      2     2      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _scrDonePoleDet                                      13     9      4   18597
                                            121 COMRAM     4     0      4
                                              0 BANK0      9     9      0
                            ___awdiv
                            ___awmod
                             ___wmul
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     394
                                              6 COMRAM     6     2      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     398
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _scrDoneMain                                          1     1      0   15759
                                            121 COMRAM     1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _scrDoneGen                                           5     1      4   16053
                                            121 COMRAM     5     1      4
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              12     4      8   15648
                                            109 COMRAM    12     4      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   13918
                                            101 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   13540
                                             70 COMRAM    31    25      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    4581
                                             31 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4676
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3027
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1280
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     879
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2096
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1255
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     245
                                              4 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (10) _send_byte                                           1     1      0      89
                                              2 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (11) _send_nibble                                         1     1      0      45
                                              1 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (12) _pulse_e                                             1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _getTime                                              3     1      2     711
                                              3 COMRAM     3     1      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     478
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      45
                                              1 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _interruptHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _getTime
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _scrDoneGen
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _scrDoneMain
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _scrDonePoleDet
     ___awdiv
       ___wmul (ARG)
     ___awmod
       ___wmul (ARG)
     ___wmul
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _scrRunning
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _showTime
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       ___awdiv (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower

 _interruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      4B       7       29.3%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1C      4A       5       57.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7E      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     113      34        0.0%
DATA                 0      0     113       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Feb 01 16:27:57 2019

                         l84 0454                  __CFG_CPD$ON 000000                 ___awdiv@sign 000C  
        ___wmul@multiplicand 0003                  __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000  
                __CFG_OSC$HS 000000                          l116 0620                          l270 06B8  
                        l257 1264                          l268 06B0                          l293 08A0  
                        l295 08A8                          l387 13C2                 __CFG_CPB$OFF 000000  
                        _abs 17F2                          _pad 1234                 ___awmod@sign 000C  
                        wreg 000FE8                 __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000  
                       l1035 181A                         ?_abs 0013                         l1133 173E  
                       l1066 1038                         l2203 17A6                         l2207 18BE  
                       l2223 124E                         l3007 048E                         l3015 04C2  
                       l2313 0D9A                         l2305 0D5E                         l2209 18C2  
                       l2233 1286                         l3025 04EA                         l3033 0508  
                       l2227 125C                         l3019 04D2                         l2309 0D74  
                       l2341 1108                         l2333 10AC                         l2325 106E  
                       l2237 12B4                         l2229 126E                         l3061 0576  
                       l3045 0536                         l3029 04F8                         l3053 054E  
                       l2511 0F6E                         l2335 10C0                         l2423 0858  
                       l3063 057C                         l3039 051C                         l2361 177E  
                       l2521 0FD8                         l2513 0F76                         l2505 0F5E  
                       l2281 0CA0                         l2345 111E                         l2329 1092  
                       l2515 0F7C                         l2419 0840                         l2371 0692  
                       l2451 090C                         l2443 08EA                         l2603 0262  
                       l3083 05F0                         l3075 05B2                         l2701 1374  
                       l2517 0FA4                         l2293 0CEE                         l2349 1144  
                       l2189 14CA                         l2437 08BC                         l3093 060A  
                       l3069 059C                         l2703 1380                         l2295 0D02  
                       l2287 0CC8                         l2199 1790                         l2623 036C  
                       l3079 05D2                         l2713 13B4                         l2385 06D2  
                       l2465 099A                         l2473 0A10                         l2617 0330  
                       l2561 007E                         l2553 0072                         l2545 0058  
                       l2633 038E                         l3089 0600                         l2627 0376  
                       l2547 005C                         l2571 00D0                         l2731 12F2  
                       l2389 06E0                         l2565 0084                         l2557 0078  
                       l2549 006C                         l2725 12E2                         l2805 0DF2  
                       l2495 0F14                         l2399 07D8                         l2583 013E  
                       l2655 16BC                         l2497 0F18                         l2489 0A88  
                       l2585 015C                         l2569 008E                         l2657 16E2  
                       l2737 1308                         l2753 133A                         l2587 016A  
                       l2739 1310                         l2941 15BC                         l2757 1348  
                       l2749 1330                         l2773 13F4                         ?_pad 0015  
                       l2863 11FC                         l2793 143A                         l2785 1422  
                       l2777 1402                         l2769 13E8                         l2779 140A  
                       l2859 11CE                         l2789 142C                         STR_1 FFE8  
                       STR_2 FE99                         STR_3 FEB0                         STR_4 FFA4  
                       STR_5 FF71                         STR_6 FF60                         STR_7 FF4F  
                       STR_8 FF3E                         STR_9 FFF9                         u2000 093E  
                       u2010 0940                         u2100 0A50                         u2110 0A56  
                       u2030 0978                         u2040 097A                         u2140 0F5A  
                       u1500 184C                         u2060 09EC                         u1510 184E  
                       u2070 0A20                         u2310 0296                         u2160 1008  
                       u1600 17EC                         _LATD 000F8C                         u2065 09DA  
                       u2170 100A                         u1450 14C2                         u1610 1726  
                       u2090 0A42                         u2250 01A2                         u1435 1904  
                       u2091 0A40                         u1436 1906                         u1700 0D06  
                       u1620 1728                         u2260 01A4                         u1470 150A  
                       u2270 01B0                         u2430 1314                         u1640 18AC  
                       u1800 177A                         u1560 1800                         u2600 04BA  
                       u1650 18AE                         u1810 0664                         u1570 187C  
                       u2290 01E4                         u2610 04CA                         u2380 1384  
                       u1900 0808                         u1820 0666                         u1580 187E  
                       u2540 1232                         u2365 1996                         u1901 0806  
                       u2366 1998                         u1910 0816                         u1590 17EA  
                       u1760 10C4                         u1920 081C                         u1681 0CCE  
                       u1850 06A6                         u2490 140E                         u1940 082A  
                       u2565 161A                         u1870 06CC                         u1880 07E6  
                       u1970 0896                         u2770 05DC                         u2907 165A  
                       u2917 1450                         u1990 0908                         u2927 1524  
                       u2937 153C                         u2857 062C                         u2947 154E  
                       u2867 0E34                         u2957 1570                         u2877 1172  
                       u2967 18EC                         u2887 1206                         u2977 18F6  
                       u2897 0AC0                         abs@a 0013                         _dbuf 008E  
                       _atoi 0F02                         _main 03C2                         _dtoa 063C  
   __end_of_interruptHandler 19EA                         _keys FE7B                         _prec 0084  
                       _nout 0080                         pad@i 001C                         pad@p 0019  
                       fsr1h 000FE2                         fsr2h 000FDA                         indf1 000FE7  
                       indf2 000FDF                         fsr1l 000FE1                         pad@w 001E  
                       fsr2l 000FD9                         btemp 007F                         _xtoa 0882  
                       prodh 000FF4                         prodl 000FF3                         start 000E  
              __CFG_IESO$OFF 000000                __CFG_MCLRE$ON 000000                 ___param_bank 000000  
                      ??_abs 0015                        ??_pad 001B        I2C_Master_Read@ackBit 0002  
           ?_I2C_Master_Init 000E             ?_I2C_Master_Read 0001             ?_I2C_Master_Wait 0001  
               main@dispMode 00C8             ?_I2C_Master_Stop 0001              __end_of___aodiv 0DBC  
                      ?_atoi 0008                        ?_main 0001                        ?_dtoa 0020  
            __end_of___aomod 1166              __end_of___awdiv 1352                        STR_10 FFB3  
                      STR_11 FF82                        STR_12 FF93                        STR_20 FEDE  
                      STR_13 FF3E                        STR_21 FEF2                        STR_22 FFD7  
                      STR_14 FFB5                        STR_15 FF2C                        STR_16 FF06  
                      STR_17 FF19                        STR_18 FFC6                        STR_19 FEC7  
            __end_of___awmod 1444              __end_of___lldiv 13D4              ___awdiv@divisor 0009  
                      ?_xtoa 0020                        i2l132 19E6              ___awdiv@counter 000B  
               vfpfcnvrt@fmt 0049                 vfpfcnvrt@llu 0059                        _PORTB 000F81  
                      _TRISD 000F95                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
            __end_of_lcdInst 1A02               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
            __end_of_getTime 15F2               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
               main@keypress 00C7               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000              __end_of_initLCD 1588  
             __CFG_EBTRB$OFF 000000                        _flags 0086                        _fputc 14B2  
            __end_of_isalpha 17F2                        _fputs 1786              __end_of_isdigit 18B4  
                      atoi@n 0015                        pad@fp 0015                        atoi@s 0008  
                      _width 0082                        _putch 19EA                        main@i 00C5  
                      dtoa@d 0022                        dtoa@i 0042                        dtoa@n 003A  
                      dtoa@p 0034                        dtoa@s 0038                        dtoa@w 0036  
            __end_of_islower 1854              __end_of_isspace 1786              __end_of_isupper 1884  
                      tablat 000FF5              send_nibble@data 0002              __end_of_pulse_e 1908  
               ?_scrDoneMain 0001                        ttemp5 0080                        ttemp6 0083  
                      ttemp7 0087                        status 000FD8  I2C_Master_Read@receivedByte 0003  
                      wtemp8 0080                        xtoa@c 0045                        xtoa@d 0022  
                      xtoa@i 0043                        xtoa@n 003B                        xtoa@p 0037  
                      xtoa@w 0039                        xtoa@x 002A              __end_of_toupper 1748  
             __CFG_PBADEN$ON 000000                 _toupper$1099 000D              __initialization 1908  
               __end_of_atoi 1042                 __end_of_main 063C                 __end_of_dtoa 0882  
               __end_of_keys FE8C                 __end_of_xtoa 0AB2                       ??_atoi 000A  
                     ??_main 00B7                       ??_dtoa 002A                       ??_xtoa 002B  
              __activetblptr 000002            ?_I2C_Master_Start 0001            ?_I2C_Master_Write 0002  
         ??_I2C_Master_Start 0002                       _ADCON1 000FC1           ??_I2C_Master_Write 0004  
             scrDoneGen@time 007A                 ?_send_nibble 0001                       ?_fputc 0005  
                     ?_fputs 000E             ___awdiv@dividend 0007                       ?_putch 0001  
                     _INT1IE 007F83                       _INT1IF 007F80                vfpfcnvrt@done 0061  
                     _SSPADD 000FC8                       _SSPBUF 000FC9               __CFG_XINST$OFF 000000  
               vfprintf@cfmt 006C                    ??___aodiv 0011                    ??___aomod 0011  
                     ___wmul 1954                    ??___awdiv 000B               __CFG_STVREN$ON 000000  
                  ??___awmod 000B                    ??___lldiv 0009             ??_scrDonePoleDet 00AE  
                     clear_0 190E                       clear_1 191A             ___awdiv@quotient 000D  
            ___awmod@divisor 0009              ___awmod@counter 000B                    ??_lcdInst 0004  
                     _printf 192E                       pad@buf 0017                    ??_getTime 0006  
                     dtoa@fp 0020                       _strlen 18B4                    ??_initLCD 0005  
                     fputc@c 0005                       fputs@c 0012                       fputs@i 0013  
                     fputs@s 000E                    ??_isalpha 0003                    ??_isdigit 0003  
                  ??_islower 0003             __end_of_showTime 0F02                 __mediumconst FE7A  
                  ??_isspace 0003                       tblptrh 000FF7                    ??_isupper 0003  
                     tblptrl 000FF6                       tblptru 000FF8             __end_of_vfprintf 16FE  
                  ??_pulse_e 0001                       xtoa@fp 0020                    ??_toupper 0009  
      pulse_e@interruptState 0001                   __accesstop 0080      __end_of__initialization 1920  
              ___rparam_used 000001         __end_of_happynewyear FE93               __pcstackCOMRAM 0001  
              __end_of_fputc 151E                __end_of_fputs 17BE                __end_of_putch 19F6  
            _key_was_pressed 008D                      ??_fputc 0009                      ??_fputs 0012  
                    ??_putch 0004                   __pbssBANK0 0080                   __pbssBANK1 0100  
          ?_interruptHandler 0001         __size_of_scrDoneMain 005A           ??_interruptHandler 0001  
                    ?___wmul 0001           __size_of_send_byte 0012              scrDoneGen@poles 007D  
                    ?_printf 006E                      ?_strlen 0001                  scrRunning@i 00AE  
         __size_of_vfpfcnvrt 03B0                      _SSPCON1 000FC6                      _SSPCON2 000FC5  
                    _SSPSTAT 000FC7         __size_of_send_nibble 0016                      __Hparam 0000  
                    __Lparam 0000                    ?_showTime 007A                      ___aodiv 0C74  
                    ___aomod 1042                      ___awdiv 12CE                      ___awmod 13D4  
                    ___lldiv 1352              __size_of___wmul 0026                    ?_vfprintf 0066  
                    __pcinit 1908                      __ramtop 1000                      _lcdInst 19F6  
                    __ptext0 03C2                      __ptext1 0DBC                      __ptext2 1166  
                    __ptext3 0AB2                      _getTime 1588                      __ptext4 13D4  
                    __ptext5 12CE                      __ptext6 164E                      __ptext7 1444  
                    __ptext8 192E                      __ptext9 16A8              __size_of_printf 0026  
            __size_of_strlen 002A                      _initLCD 151E       scrDonePoleDet@currPole 007C  
               __size_of_abs 0032                   _scrDoneGen 1444                 __size_of_pad 009A  
                    _isalpha 17BE                      _isdigit 1884             ___awmod@dividend 0007  
                    _islower 1824                      _isspace 1748                      _isupper 1854  
   __size_of_I2C_Master_Init 005C     __size_of_I2C_Master_Read 0024     __size_of_I2C_Master_Wait 0012  
   __size_of_I2C_Master_Stop 0008       scrDonePoleDet@poleData 007A                      atoi@neg 000E  
                    _pulse_e 18DE               __pintcode_body 19D8                      _toupper 16FE  
       end_of_initialization 1920        __end_of_LCD_SIZE_HORZ FE96            __end_of_send_byte 19C6  
                 _scrRunning 1166        __end_of_LCD_SIZE_VERT FE95                      fputc@fp 0007  
              __Lmediumconst FE7A                      int_func 19D8                      fputs@fp 0010  
  __size_of_I2C_Master_Start 0008    __size_of_I2C_Master_Write 000A              ___lldiv@divisor 0005  
            ___lldiv@counter 000D            __end_of_vfpfcnvrt 03C2                   ??_showTime 007C  
                    postdec2 000FDD                      postinc0 000FEE                      postinc1 000FE6  
                    postinc2 000FDE                   ??_vfprintf 006C                      strlen@a 0003  
                    strlen@s 0001                    _TRISCbits 000F94                 _happynewyear FE8C  
              send_byte@data 0003                  vfpfcnvrt@ap 004B                  vfpfcnvrt@fp 0047  
                vfpfcnvrt@ll 0051          scrDoneGen@tireCount 007C               __end_of___wmul 197A  
             __end_of_printf 1954                  ?_scrDoneGen 007A               __end_of_strlen 18DE  
        start_initialization 1908                  __end_of_abs 1824                  __end_of_pad 12CE  
                ?_scrRunning 007A            ??_I2C_Master_Init 0012            ??_I2C_Master_Read 0002  
          ??_I2C_Master_Wait 0001            ??_I2C_Master_Stop 0002                  vfprintf@fmt 0068  
                   ??___wmul 0005     I2C_Master_Init@clockFreq 000E             __CFG_LPT1OSC$OFF 000000  
        _scrDonePoleDet$1343 00B5          _scrDonePoleDet$1344 00B1          _scrDonePoleDet$1345 00B3  
                   ??_printf 0076    __size_of_interruptHandler 19E2                     ??_strlen 0003  
              __pcstackBANK0 00AE             ___aodiv@dividend 0001      __size_of_scrDonePoleDet 01C2  
              ??_scrDoneMain 007A                    _atoi$1007 0010                    _atoi$1008 0014  
                  _atoi$1009 0012             _I2C_Master_Start 1A14             _I2C_Master_Write 1A02  
        __size_of_scrDoneGen 006E            __CFG_CCP2MX$PORTC 000000                    __pintcode 0008  
              __pmediumconst FE7A                     ?___aodiv 0001                     ?___aomod 0001  
                   ?___awdiv 0007             ___aodiv@quotient 0013                     ?___awmod 0007  
                   ?___lldiv 0001            __size_of_showTime 0146                     ?_lcdInst 0001  
        __size_of_scrRunning 00CE                     ?_getTime 0004            __size_of_vfprintf 0056  
                   ?_initLCD 0001                     ?_isalpha 0001                     ?_isdigit 0001  
                   ?_islower 0001                     ?_isspace 0001                     ?_isupper 0001  
              ??_send_nibble 0002                     ?_pulse_e 0001               __size_of_fputc 006C  
             __size_of_fputs 0038                     ?_toupper 0007               __size_of_putch 000C  
             ___wmul@product 0005                     _LATDbits 000F8C                    _send_byte 19B4  
                  _poleCount 008B               _LCD_LINE1_ADDR FE93               _LCD_LINE2_ADDR FE98  
             _LCD_LINE3_ADDR FE97               _LCD_LINE4_ADDR FE96          __end_of_scrDoneMain 16A8  
           __CFG_WDTPS$32768 000000                    _tiresSupp 008C                    _vfpfcnvrt 0012  
          ___wmul@multiplier 0001                    _totalTime 0088                    main@ticks 00C3  
               _isspace$1034 0007                   vfpfcnvrt@c 0065       __end_of_LCD_LINE1_ADDR FE94  
     __end_of_LCD_LINE2_ADDR FE99       __end_of_LCD_LINE3_ADDR FE98       __end_of_LCD_LINE4_ADDR FE97  
        __end_of_send_nibble 19B4                   ?_send_byte 0001                     __Hrparam 0000  
                 vfprintf@ap 006A                     __Lrparam 0000                   vfprintf@fp 0066  
         __CFG_BOREN$SBORDIS 000000             __size_of___aodiv 0148             __size_of___aomod 0124  
           __size_of___awdiv 0084             __size_of___awmod 0070             __size_of___lldiv 0082  
                 ?_vfpfcnvrt 0047              ___aodiv@divisor 0009             _interruptHandler 0008  
            ___aodiv@counter 0011             __size_of_lcdInst 000C             __size_of_getTime 006A  
               ??_scrDoneGen 007E              _I2C_Master_Init 15F2              _I2C_Master_Read 197A  
           __size_of_initLCD 006A              _I2C_Master_Wait 19C6              _I2C_Master_Stop 1A0C  
           __size_of_isalpha 0034             __size_of_isdigit 0030               _scrDonePoleDet 0AB2  
                   _dtoa$523 0032             __size_of_islower 0030             __size_of_isspace 003E  
                   __ptext10 0012                     __ptext11 0882                     __ptext20 14B2  
                   __ptext12 16FE                     __ptext21 19EA                     __ptext13 1824  
                   __ptext30 19F6                     __ptext22 17F2                     __ptext14 1854  
                   __ptext31 19B4                     __ptext23 1042                     __ptext15 17BE  
                   __ptext40 15F2                     __ptext32 199E                     __ptext24 0C74  
                   __ptext16 063C                     __ptext41 1352                     __ptext33 18DE  
                   __ptext25 0F02                     __ptext17 1234                     __ptext34 1588  
                   __ptext26 1748                     __ptext18 18B4                     __ptext35 1A02  
                   __ptext27 1884                     __ptext19 1786                     __ptext36 1A0C  
                   __ptext28 1954                     __ptext37 1A14                     __ptext29 151E  
                   __ptext38 197A                     __ptext39 19C6             __size_of_isupper 0030  
           __size_of_pulse_e 002A                 ??_scrRunning 007C             __size_of_toupper 004A  
                   _currPole 008A                  _scrDoneMain 164E                __size_of_atoi 0140  
              __size_of_main 027A                __size_of_dtoa 0246                __size_of_xtoa 0230  
             scrRunning@time 007A           __end_of_scrDoneGen 14B2                     _showTime 0DBC  
                   getTime@i 0006                    showTime@i 00AE                     int$flags 007F  
                   _xtoa$534 0033                     _xtoa$535 0035                     _vfprintf 16A8  
                  printf@fmt 006E                     main@time 00B9  I2C_Master_Write@byteToWrite 0002  
           ___aomod@dividend 0001           __end_of_scrRunning 1234       __end_of_scrDonePoleDet 0C74  
                  putch@data 0004     __end_of_I2C_Master_Start 1A1C     __end_of_I2C_Master_Write 1A0C  
                 _INTCONbits 000FF2             main@startTimeInt 00C0                     isalpha@c 0001  
                   isdigit@c 0001                  _send_nibble 199E                  _poleInfoArr 0100  
                   intlevel2 0000                _LCD_SIZE_HORZ FE95                     islower@c 0001  
              _LCD_SIZE_VERT FE94                     isspace@c 0001             ___lldiv@dividend 0001  
                ??_send_byte 0003                     isupper@c 0001                 getTime@pTime 0004  
                   printf@ap 0078      __end_of_I2C_Master_Init 164E              ___aomod@divisor 0009  
    __end_of_I2C_Master_Read 199E      __end_of_I2C_Master_Wait 19D8      __end_of_I2C_Master_Stop 1A14  
                ??_vfpfcnvrt 004D                  lcdInst@data 0004              ___aomod@counter 0011  
              _vfpfcnvrt$549 0063              ?_scrDonePoleDet 007A             ___lldiv@quotient 0009  
                   toupper@c 0007                showTime@pTime 007A                  _SSPCON1bits 000FC6  
                _SSPCON2bits 000FC5                 ___aodiv@sign 0012                 ___aomod@sign 0012  
