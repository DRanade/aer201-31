Version 4.0 HI-TECH Software Intermediate Code
"44 ./I2C.h
[; ;./I2C.h: 44: void I2C_Master_Start(void);
[v _I2C_Master_Start `(v ~T0 @X0 0 ef ]
"59
[; ;./I2C.h: 59: void I2C_Master_Write(unsigned byteToWrite);
[v _I2C_Master_Write `(v ~T0 @X0 0 ef1`ui ]
"56
[; ;./I2C.h: 56: void I2C_Master_Stop(void);
[v _I2C_Master_Stop `(v ~T0 @X0 0 ef ]
"68
[; ;./I2C.h: 68: unsigned char I2C_Master_Read(unsigned char ackBit);
[v _I2C_Master_Read `(uc ~T0 @X0 0 ef1`uc ]
"88 ./lcd.h
[; ;./lcd.h: 88: void lcdInst(char data);
[v _lcdInst `(v ~T0 @X0 0 ef1`uc ]
[v F2424 `(v ~T0 @X0 1 tf1`ul ]
"183 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18.h
[v __delay `JF2424 ~T0 @X0 0 e ]
[p i __delay ]
"113 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\c99\stdio.h
[v _printf `(i ~T0 @X0 0 ev`*Cuc ]
"72 ./lcd.h
[; ;./lcd.h: 72: extern const unsigned char LCD_LINE2_ADDR;
[v _LCD_LINE2_ADDR `Cuc ~T0 @X0 0 e ]
"73
[; ;./lcd.h: 73: extern const unsigned char LCD_LINE3_ADDR;
[v _LCD_LINE3_ADDR `Cuc ~T0 @X0 0 e ]
"74
[; ;./lcd.h: 74: extern const unsigned char LCD_LINE4_ADDR;
[v _LCD_LINE4_ADDR `Cuc ~T0 @X0 0 e ]
"9 ./helpers.h
[; ;./helpers.h: 9: struct poleInfo {
[s S272 `uc 1 `i 1 `uc 1 `uc 1 ]
[n S272 poleInfo id pos tiresSupp tiresPresent ]
"45
[; ;./helpers.h: 45: unsigned char read_EEPROM(unsigned char address);
[v _read_EEPROM `(uc ~T0 @X0 0 ef1`uc ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 54: __asm("PORTA equ 0F80h");
[; <" PORTA equ 0F80h ;# ">
"191
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 191: __asm("PORTB equ 0F81h");
[; <" PORTB equ 0F81h ;# ">
"362
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 362: __asm("PORTC equ 0F82h");
[; <" PORTC equ 0F82h ;# ">
"537
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 537: __asm("PORTD equ 0F83h");
[; <" PORTD equ 0F83h ;# ">
"679
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 679: __asm("PORTE equ 0F84h");
[; <" PORTE equ 0F84h ;# ">
"882
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 882: __asm("LATA equ 0F89h");
[; <" LATA equ 0F89h ;# ">
"994
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 994: __asm("LATB equ 0F8Ah");
[; <" LATB equ 0F8Ah ;# ">
"1106
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 1106: __asm("LATC equ 0F8Bh");
[; <" LATC equ 0F8Bh ;# ">
"1218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 1218: __asm("LATD equ 0F8Ch");
[; <" LATD equ 0F8Ch ;# ">
"1330
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 1330: __asm("LATE equ 0F8Dh");
[; <" LATE equ 0F8Dh ;# ">
"1382
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 1382: __asm("TRISA equ 0F92h");
[; <" TRISA equ 0F92h ;# ">
"1387
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 1387: __asm("DDRA equ 0F92h");
[; <" DDRA equ 0F92h ;# ">
"1604
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 1604: __asm("TRISB equ 0F93h");
[; <" TRISB equ 0F93h ;# ">
"1609
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 1609: __asm("DDRB equ 0F93h");
[; <" DDRB equ 0F93h ;# ">
"1826
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 1826: __asm("TRISC equ 0F94h");
[; <" TRISC equ 0F94h ;# ">
"1831
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 1831: __asm("DDRC equ 0F94h");
[; <" DDRC equ 0F94h ;# ">
"2048
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2048: __asm("TRISD equ 0F95h");
[; <" TRISD equ 0F95h ;# ">
"2053
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2053: __asm("DDRD equ 0F95h");
[; <" DDRD equ 0F95h ;# ">
"2270
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2270: __asm("TRISE equ 0F96h");
[; <" TRISE equ 0F96h ;# ">
"2275
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2275: __asm("DDRE equ 0F96h");
[; <" DDRE equ 0F96h ;# ">
"2434
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2434: __asm("OSCTUNE equ 0F9Bh");
[; <" OSCTUNE equ 0F9Bh ;# ">
"2499
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2499: __asm("PIE1 equ 0F9Dh");
[; <" PIE1 equ 0F9Dh ;# ">
"2576
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2576: __asm("PIR1 equ 0F9Eh");
[; <" PIR1 equ 0F9Eh ;# ">
"2653
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2653: __asm("IPR1 equ 0F9Fh");
[; <" IPR1 equ 0F9Fh ;# ">
"2730
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2730: __asm("PIE2 equ 0FA0h");
[; <" PIE2 equ 0FA0h ;# ">
"2796
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2796: __asm("PIR2 equ 0FA1h");
[; <" PIR2 equ 0FA1h ;# ">
"2862
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2862: __asm("IPR2 equ 0FA2h");
[; <" IPR2 equ 0FA2h ;# ">
"2928
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2928: __asm("EECON1 equ 0FA6h");
[; <" EECON1 equ 0FA6h ;# ">
"2994
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 2994: __asm("EECON2 equ 0FA7h");
[; <" EECON2 equ 0FA7h ;# ">
"3001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3001: __asm("EEDATA equ 0FA8h");
[; <" EEDATA equ 0FA8h ;# ">
"3008
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3008: __asm("EEADR equ 0FA9h");
[; <" EEADR equ 0FA9h ;# ">
"3015
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3015: __asm("EEADRH equ 0FAAh");
[; <" EEADRH equ 0FAAh ;# ">
"3022
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3022: __asm("RCSTA equ 0FABh");
[; <" RCSTA equ 0FABh ;# ">
"3027
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3027: __asm("RCSTA1 equ 0FABh");
[; <" RCSTA1 equ 0FABh ;# ">
"3232
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3232: __asm("TXSTA equ 0FACh");
[; <" TXSTA equ 0FACh ;# ">
"3237
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3237: __asm("TXSTA1 equ 0FACh");
[; <" TXSTA1 equ 0FACh ;# ">
"3488
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3488: __asm("TXREG equ 0FADh");
[; <" TXREG equ 0FADh ;# ">
"3493
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3493: __asm("TXREG1 equ 0FADh");
[; <" TXREG1 equ 0FADh ;# ">
"3500
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3500: __asm("RCREG equ 0FAEh");
[; <" RCREG equ 0FAEh ;# ">
"3505
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3505: __asm("RCREG1 equ 0FAEh");
[; <" RCREG1 equ 0FAEh ;# ">
"3512
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3512: __asm("SPBRG equ 0FAFh");
[; <" SPBRG equ 0FAFh ;# ">
"3517
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3517: __asm("SPBRG1 equ 0FAFh");
[; <" SPBRG1 equ 0FAFh ;# ">
"3524
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3524: __asm("SPBRGH equ 0FB0h");
[; <" SPBRGH equ 0FB0h ;# ">
"3531
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3531: __asm("T3CON equ 0FB1h");
[; <" T3CON equ 0FB1h ;# ">
"3643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3643: __asm("TMR3 equ 0FB2h");
[; <" TMR3 equ 0FB2h ;# ">
"3650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3650: __asm("TMR3L equ 0FB2h");
[; <" TMR3L equ 0FB2h ;# ">
"3657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3657: __asm("TMR3H equ 0FB3h");
[; <" TMR3H equ 0FB3h ;# ">
"3664
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3664: __asm("CMCON equ 0FB4h");
[; <" CMCON equ 0FB4h ;# ">
"3754
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3754: __asm("CVRCON equ 0FB5h");
[; <" CVRCON equ 0FB5h ;# ">
"3833
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3833: __asm("ECCP1AS equ 0FB6h");
[; <" ECCP1AS equ 0FB6h ;# ">
"3915
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3915: __asm("PWM1CON equ 0FB7h");
[; <" PWM1CON equ 0FB7h ;# ">
"3985
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3985: __asm("BAUDCON equ 0FB8h");
[; <" BAUDCON equ 0FB8h ;# ">
"3990
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 3990: __asm("BAUDCTL equ 0FB8h");
[; <" BAUDCTL equ 0FB8h ;# ">
"4157
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4157: __asm("CCP2CON equ 0FBAh");
[; <" CCP2CON equ 0FBAh ;# ">
"4236
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4236: __asm("CCPR2 equ 0FBBh");
[; <" CCPR2 equ 0FBBh ;# ">
"4243
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4243: __asm("CCPR2L equ 0FBBh");
[; <" CCPR2L equ 0FBBh ;# ">
"4250
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4250: __asm("CCPR2H equ 0FBCh");
[; <" CCPR2H equ 0FBCh ;# ">
"4257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4257: __asm("CCP1CON equ 0FBDh");
[; <" CCP1CON equ 0FBDh ;# ">
"4354
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4354: __asm("CCPR1 equ 0FBEh");
[; <" CCPR1 equ 0FBEh ;# ">
"4361
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4361: __asm("CCPR1L equ 0FBEh");
[; <" CCPR1L equ 0FBEh ;# ">
"4368
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4368: __asm("CCPR1H equ 0FBFh");
[; <" CCPR1H equ 0FBFh ;# ">
"4375
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4375: __asm("ADCON2 equ 0FC0h");
[; <" ADCON2 equ 0FC0h ;# ">
"4446
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4446: __asm("ADCON1 equ 0FC1h");
[; <" ADCON1 equ 0FC1h ;# ">
"4531
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4531: __asm("ADCON0 equ 0FC2h");
[; <" ADCON0 equ 0FC2h ;# ">
"4650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4650: __asm("ADRES equ 0FC3h");
[; <" ADRES equ 0FC3h ;# ">
"4657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4657: __asm("ADRESL equ 0FC3h");
[; <" ADRESL equ 0FC3h ;# ">
"4664
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4664: __asm("ADRESH equ 0FC4h");
[; <" ADRESH equ 0FC4h ;# ">
"4671
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4671: __asm("SSPCON2 equ 0FC5h");
[; <" SSPCON2 equ 0FC5h ;# ">
"4733
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4733: __asm("SSPCON1 equ 0FC6h");
[; <" SSPCON1 equ 0FC6h ;# ">
"4803
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 4803: __asm("SSPSTAT equ 0FC7h");
[; <" SSPSTAT equ 0FC7h ;# ">
"5024
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5024: __asm("SSPADD equ 0FC8h");
[; <" SSPADD equ 0FC8h ;# ">
"5031
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5031: __asm("SSPBUF equ 0FC9h");
[; <" SSPBUF equ 0FC9h ;# ">
"5038
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5038: __asm("T2CON equ 0FCAh");
[; <" T2CON equ 0FCAh ;# ">
"5109
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5109: __asm("PR2 equ 0FCBh");
[; <" PR2 equ 0FCBh ;# ">
"5114
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5114: __asm("MEMCON equ 0FCBh");
[; <" MEMCON equ 0FCBh ;# ">
"5219
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5219: __asm("TMR2 equ 0FCCh");
[; <" TMR2 equ 0FCCh ;# ">
"5226
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5226: __asm("T1CON equ 0FCDh");
[; <" T1CON equ 0FCDh ;# ">
"5329
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5329: __asm("TMR1 equ 0FCEh");
[; <" TMR1 equ 0FCEh ;# ">
"5336
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5336: __asm("TMR1L equ 0FCEh");
[; <" TMR1L equ 0FCEh ;# ">
"5343
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5343: __asm("TMR1H equ 0FCFh");
[; <" TMR1H equ 0FCFh ;# ">
"5350
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5350: __asm("RCON equ 0FD0h");
[; <" RCON equ 0FD0h ;# ">
"5483
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5483: __asm("WDTCON equ 0FD1h");
[; <" WDTCON equ 0FD1h ;# ">
"5511
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5511: __asm("HLVDCON equ 0FD2h");
[; <" HLVDCON equ 0FD2h ;# ">
"5516
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5516: __asm("LVDCON equ 0FD2h");
[; <" LVDCON equ 0FD2h ;# ">
"5781
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5781: __asm("OSCCON equ 0FD3h");
[; <" OSCCON equ 0FD3h ;# ">
"5858
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5858: __asm("T0CON equ 0FD5h");
[; <" T0CON equ 0FD5h ;# ">
"5935
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5935: __asm("TMR0 equ 0FD6h");
[; <" TMR0 equ 0FD6h ;# ">
"5942
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5942: __asm("TMR0L equ 0FD6h");
[; <" TMR0L equ 0FD6h ;# ">
"5949
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5949: __asm("TMR0H equ 0FD7h");
[; <" TMR0H equ 0FD7h ;# ">
"5956
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 5956: __asm("STATUS equ 0FD8h");
[; <" STATUS equ 0FD8h ;# ">
"6027
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6027: __asm("FSR2 equ 0FD9h");
[; <" FSR2 equ 0FD9h ;# ">
"6034
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6034: __asm("FSR2L equ 0FD9h");
[; <" FSR2L equ 0FD9h ;# ">
"6041
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6041: __asm("FSR2H equ 0FDAh");
[; <" FSR2H equ 0FDAh ;# ">
"6048
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6048: __asm("PLUSW2 equ 0FDBh");
[; <" PLUSW2 equ 0FDBh ;# ">
"6055
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6055: __asm("PREINC2 equ 0FDCh");
[; <" PREINC2 equ 0FDCh ;# ">
"6062
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6062: __asm("POSTDEC2 equ 0FDDh");
[; <" POSTDEC2 equ 0FDDh ;# ">
"6069
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6069: __asm("POSTINC2 equ 0FDEh");
[; <" POSTINC2 equ 0FDEh ;# ">
"6076
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6076: __asm("INDF2 equ 0FDFh");
[; <" INDF2 equ 0FDFh ;# ">
"6083
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6083: __asm("BSR equ 0FE0h");
[; <" BSR equ 0FE0h ;# ">
"6090
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6090: __asm("FSR1 equ 0FE1h");
[; <" FSR1 equ 0FE1h ;# ">
"6097
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6097: __asm("FSR1L equ 0FE1h");
[; <" FSR1L equ 0FE1h ;# ">
"6104
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6104: __asm("FSR1H equ 0FE2h");
[; <" FSR1H equ 0FE2h ;# ">
"6111
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6111: __asm("PLUSW1 equ 0FE3h");
[; <" PLUSW1 equ 0FE3h ;# ">
"6118
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6118: __asm("PREINC1 equ 0FE4h");
[; <" PREINC1 equ 0FE4h ;# ">
"6125
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6125: __asm("POSTDEC1 equ 0FE5h");
[; <" POSTDEC1 equ 0FE5h ;# ">
"6132
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6132: __asm("POSTINC1 equ 0FE6h");
[; <" POSTINC1 equ 0FE6h ;# ">
"6139
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6139: __asm("INDF1 equ 0FE7h");
[; <" INDF1 equ 0FE7h ;# ">
"6146
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6146: __asm("WREG equ 0FE8h");
[; <" WREG equ 0FE8h ;# ">
"6158
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6158: __asm("FSR0 equ 0FE9h");
[; <" FSR0 equ 0FE9h ;# ">
"6165
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6165: __asm("FSR0L equ 0FE9h");
[; <" FSR0L equ 0FE9h ;# ">
"6172
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6172: __asm("FSR0H equ 0FEAh");
[; <" FSR0H equ 0FEAh ;# ">
"6179
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6179: __asm("PLUSW0 equ 0FEBh");
[; <" PLUSW0 equ 0FEBh ;# ">
"6186
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6186: __asm("PREINC0 equ 0FECh");
[; <" PREINC0 equ 0FECh ;# ">
"6193
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6193: __asm("POSTDEC0 equ 0FEDh");
[; <" POSTDEC0 equ 0FEDh ;# ">
"6200
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6200: __asm("POSTINC0 equ 0FEEh");
[; <" POSTINC0 equ 0FEEh ;# ">
"6207
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6207: __asm("INDF0 equ 0FEFh");
[; <" INDF0 equ 0FEFh ;# ">
"6214
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6214: __asm("INTCON3 equ 0FF0h");
[; <" INTCON3 equ 0FF0h ;# ">
"6306
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6306: __asm("INTCON2 equ 0FF1h");
[; <" INTCON2 equ 0FF1h ;# ">
"6376
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6376: __asm("INTCON equ 0FF2h");
[; <" INTCON equ 0FF2h ;# ">
"6493
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6493: __asm("PROD equ 0FF3h");
[; <" PROD equ 0FF3h ;# ">
"6500
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6500: __asm("PRODL equ 0FF3h");
[; <" PRODL equ 0FF3h ;# ">
"6507
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6507: __asm("PRODH equ 0FF4h");
[; <" PRODH equ 0FF4h ;# ">
"6514
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6514: __asm("TABLAT equ 0FF5h");
[; <" TABLAT equ 0FF5h ;# ">
"6523
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6523: __asm("TBLPTR equ 0FF6h");
[; <" TBLPTR equ 0FF6h ;# ">
"6530
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6530: __asm("TBLPTRL equ 0FF6h");
[; <" TBLPTRL equ 0FF6h ;# ">
"6537
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6537: __asm("TBLPTRH equ 0FF7h");
[; <" TBLPTRH equ 0FF7h ;# ">
"6544
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6544: __asm("TBLPTRU equ 0FF8h");
[; <" TBLPTRU equ 0FF8h ;# ">
"6553
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6553: __asm("PCLAT equ 0FF9h");
[; <" PCLAT equ 0FF9h ;# ">
"6560
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6560: __asm("PC equ 0FF9h");
[; <" PC equ 0FF9h ;# ">
"6567
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6567: __asm("PCL equ 0FF9h");
[; <" PCL equ 0FF9h ;# ">
"6574
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6574: __asm("PCLATH equ 0FFAh");
[; <" PCLATH equ 0FFAh ;# ">
"6581
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6581: __asm("PCLATU equ 0FFBh");
[; <" PCLATU equ 0FFBh ;# ">
"6588
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6588: __asm("STKPTR equ 0FFCh");
[; <" STKPTR equ 0FFCh ;# ">
"6694
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6694: __asm("TOS equ 0FFDh");
[; <" TOS equ 0FFDh ;# ">
"6701
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6701: __asm("TOSL equ 0FFDh");
[; <" TOSL equ 0FFDh ;# ">
"6708
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6708: __asm("TOSH equ 0FFEh");
[; <" TOSH equ 0FFEh ;# ">
"6715
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic18f4620.h: 6715: __asm("TOSU equ 0FFFh");
[; <" TOSU equ 0FFFh ;# ">
"14 ./configBits.h
[p x OSC = HS ]
"15
[p x FCMEN = OFF ]
"17
[p x IESO = OFF ]
"21
[p x PWRT = OFF ]
"22
[p x BOREN = SBORDIS ]
"24
[p x BORV = 3 ]
"27
[p x WDT = OFF ]
"29
[p x WDTPS = 32768 ]
"32
[p x CCP2MX = PORTC ]
"34
[p x PBADEN = ON ]
"36
[p x LPT1OSC = OFF ]
"38
[p x MCLRE = ON ]
"42
[p x STVREN = ON ]
"44
[p x LVP = OFF ]
"46
[p x XINST = OFF ]
"51
[p x CP0 = OFF ]
"53
[p x CP1 = OFF ]
"55
[p x CP2 = OFF ]
"57
[p x CP3 = OFF ]
"61
[p x CPB = OFF ]
"63
[p x CPD = ON ]
"67
[p x WRT0 = OFF ]
"69
[p x WRT1 = OFF ]
"71
[p x WRT2 = OFF ]
"73
[p x WRT3 = OFF ]
"77
[p x WRTC = OFF ]
"80
[p x WRTB = OFF ]
"82
[p x WRTD = OFF ]
"86
[p x EBTR0 = OFF ]
"89
[p x EBTR1 = OFF ]
"92
[p x EBTR2 = OFF ]
"95
[p x EBTR3 = OFF ]
"100
[p x EBTRB = OFF ]
"3 lcdCode.c
[; ;lcdCode.c: 3: void showTime(unsigned char pTime[7]){
[v _showTime `(v ~T0 @X0 1 ef1`*uc ]
{
[e :U _showTime ]
[v _pTime `*uc ~T0 @X0 1 r1 ]
[f ]
"5
[; ;lcdCode.c: 5:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"6
[; ;lcdCode.c: 6:     I2C_Master_Write(0b11010000);
[e ( _I2C_Master_Write (1 -> -> 208 `i `ui ]
"7
[; ;lcdCode.c: 7:     I2C_Master_Write(0x00);
[e ( _I2C_Master_Write (1 -> -> 0 `i `ui ]
"8
[; ;lcdCode.c: 8:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"11
[; ;lcdCode.c: 11:     I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"12
[; ;lcdCode.c: 12:     I2C_Master_Write(0b11010001);
[e ( _I2C_Master_Write (1 -> -> 209 `i `ui ]
"13
[; ;lcdCode.c: 13:     for(unsigned char i = 0; i < 6; i++){
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 274  ]
[e $U 275  ]
[e :U 274 ]
{
"14
[; ;lcdCode.c: 14:         pTime[i] = I2C_Master_Read(0);
[e = *U + _pTime * -> _i `ux -> -> # *U _pTime `ui `ux ( _I2C_Master_Read (1 -> -> 0 `i `uc ]
"15
[; ;lcdCode.c: 15:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 274  ]
[e :U 275 ]
}
"16
[; ;lcdCode.c: 16:     pTime[6] = I2C_Master_Read(1);
[e = *U + _pTime * -> -> 6 `i `x -> -> # *U _pTime `i `x ( _I2C_Master_Read (1 -> -> 1 `i `uc ]
"17
[; ;lcdCode.c: 17:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"20
[; ;lcdCode.c: 20:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 128 `i `uc ]
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"21
[; ;lcdCode.c: 21:     printf("TEAM 31     TIRE");
[e ( _printf :s 1C ]
"22
[; ;lcdCode.c: 22:     { lcdInst(0x80 | LCD_LINE2_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE2_ADDR `i `uc ]
}
"24
[; ;lcdCode.c: 24:     printf("    %02x/%02x/%02x    ", pTime[6],pTime[5],pTime[4]);
[e ( _printf , , , (. :s 2C -> *U + _pTime * -> -> 6 `i `x -> -> # *U _pTime `i `x `i -> *U + _pTime * -> -> 5 `i `x -> -> # *U _pTime `i `x `i -> *U + _pTime * -> -> 4 `i `x -> -> # *U _pTime `i `x `i ]
"25
[; ;lcdCode.c: 25:     { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"27
[; ;lcdCode.c: 27:     printf("    %02x:%02x:%02x    ", pTime[2],pTime[1],pTime[0]);
[e ( _printf , , , (. :s 3C -> *U + _pTime * -> -> 2 `i `x -> -> # *U _pTime `i `x `i -> *U + _pTime * -> -> 1 `i `x -> -> # *U _pTime `i `x `i -> *U + _pTime * -> -> 0 `i `x -> -> # *U _pTime `i `x `i ]
"28
[; ;lcdCode.c: 28:     { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"29
[; ;lcdCode.c: 29:     printf("0:START   8:LOGS");
[e ( _printf :s 4C ]
"30
[; ;lcdCode.c: 30: }
[e :UE 273 ]
}
"32
[; ;lcdCode.c: 32: void scrDoneMain(void){
[v _scrDoneMain `(v ~T0 @X0 1 ef ]
{
[e :U _scrDoneMain ]
[f ]
"33
[; ;lcdCode.c: 33:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 128 `i `uc ]
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"34
[; ;lcdCode.c: 34:     printf("--RUN COMPLETE--");
[e ( _printf :s 5C ]
"35
[; ;lcdCode.c: 35:     { lcdInst(0x80 | LCD_LINE2_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE2_ADDR `i `uc ]
}
"36
[; ;lcdCode.c: 36:     printf("7: GENERAL INFO ");
[e ( _printf :s 6C ]
"37
[; ;lcdCode.c: 37:     { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"38
[; ;lcdCode.c: 38:     printf("9: POLE DETAILS ");
[e ( _printf :s 7C ]
"39
[; ;lcdCode.c: 39:     { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"40
[; ;lcdCode.c: 40:     printf("-----0:DONE-----");
[e ( _printf :s 8C ]
"41
[; ;lcdCode.c: 41: }
[e :UE 277 ]
}
"43
[; ;lcdCode.c: 43: void scrDoneGen(unsigned int time, unsigned char tireCount,
[v _scrDoneGen `(v ~T0 @X0 1 ef3`ui`uc`uc ]
"44
[; ;lcdCode.c: 44:         unsigned char poles){
{
[e :U _scrDoneGen ]
"43
[; ;lcdCode.c: 43: void scrDoneGen(unsigned int time, unsigned char tireCount,
[v _time `ui ~T0 @X0 1 r1 ]
[v _tireCount `uc ~T0 @X0 1 r2 ]
"44
[; ;lcdCode.c: 44:         unsigned char poles){
[v _poles `uc ~T0 @X0 1 r3 ]
[f ]
"46
[; ;lcdCode.c: 46:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 128 `i `uc ]
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"47
[; ;lcdCode.c: 47:     printf("TOTAL TIME: %3ds",time);
[e ( _printf , (. :s 9C _time ]
"48
[; ;lcdCode.c: 48:     { lcdInst(0x80 | LCD_LINE2_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE2_ADDR `i `uc ]
}
"49
[; ;lcdCode.c: 49:     printf("TIRES SUPP:  %2d ",tireCount);
[e ( _printf , (. :s 10C -> _tireCount `i ]
"50
[; ;lcdCode.c: 50:     { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"51
[; ;lcdCode.c: 51:     printf("POLE COUNT:  %2d ",poles);
[e ( _printf , (. :s 11C -> _poles `i ]
"52
[; ;lcdCode.c: 52:     { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"53
[; ;lcdCode.c: 53:     printf("-----0:MENU-----");
[e ( _printf :s 12C ]
"54
[; ;lcdCode.c: 54: }
[e :UE 278 ]
}
"56
[; ;lcdCode.c: 56: void scrDonePoleDet(poleInfo poleData[15],int currPole){
[v _scrDonePoleDet `(v ~T0 @X0 1 ef2`*S272`i ]
{
[e :U _scrDonePoleDet ]
[v _poleData `*S272 ~T0 @X0 1 r1 ]
[v _currPole `i ~T0 @X0 1 r2 ]
[f ]
"58
[; ;lcdCode.c: 58:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 128 `i `uc ]
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"59
[; ;lcdCode.c: 59:     printf("POLE%1x POS: %1d.%02dm",
[e ( _printf , , , (. :s 13C -> . *U + _poleData * -> _currPole `x -> -> # *U _poleData `i `x 0 `i / . *U + _poleData * -> _currPole `x -> -> # *U _poleData `i `x 1 -> 1000 `i / % . *U + _poleData * -> _currPole `x -> -> # *U _poleData `i `x 1 -> 1000 `i -> 10 `i ]
"62
[; ;lcdCode.c: 62:     { lcdInst(0x80 | LCD_LINE2_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE2_ADDR `i `uc ]
}
"63
[; ;lcdCode.c: 63:     printf("TIRES SUPP:   %1d ",poleData[currPole].tiresSupp);
[e ( _printf , (. :s 14C -> . *U + _poleData * -> _currPole `x -> -> # *U _poleData `i `x 2 `i ]
"64
[; ;lcdCode.c: 64:     { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"65
[; ;lcdCode.c: 65:     printf("TIRES ON POLE:%1d ",poleData[currPole].tiresPresent);
[e ( _printf , (. :s 15C -> . *U + _poleData * -> _currPole `x -> -> # *U _poleData `i `x 3 `i ]
"66
[; ;lcdCode.c: 66:     { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"67
[; ;lcdCode.c: 67:     printf("<*   0:MENU   #>");
[e ( _printf :s 16C ]
"68
[; ;lcdCode.c: 68: }
[e :UE 279 ]
}
"70
[; ;lcdCode.c: 70: void dispOpProg(void){
[v _dispOpProg `(v ~T0 @X0 1 ef ]
{
[e :U _dispOpProg ]
[f ]
"71
[; ;lcdCode.c: 71:     unsigned int i;
[v _i `ui ~T0 @X0 1 a ]
"72
[; ;lcdCode.c: 72:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 128 `i `uc ]
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"73
[; ;lcdCode.c: 73:     printf("  THE OPERATION ");
[e ( _printf :s 17C ]
"74
[; ;lcdCode.c: 74:     { lcdInst(0x80 | LCD_LINE2_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE2_ADDR `i `uc ]
}
"75
[; ;lcdCode.c: 75:     printf("  IS CURRENTLY  ");
[e ( _printf :s 18C ]
"76
[; ;lcdCode.c: 76:     { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"77
[; ;lcdCode.c: 77:     printf("   IN PROGRESS  ");
[e ( _printf :s 19C ]
"78
[; ;lcdCode.c: 78:     { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"79
[; ;lcdCode.c: 79:     printf("                ");
[e ( _printf :s 20C ]
"80
[; ;lcdCode.c: 80: }
[e :UE 280 ]
}
"82
[; ;lcdCode.c: 82: void dispProcMode(unsigned char mode){
[v _dispProcMode `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _dispProcMode ]
[v _mode `uc ~T0 @X0 1 r1 ]
[f ]
"84
[; ;lcdCode.c: 84:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 128 `i `uc ]
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"85
[; ;lcdCode.c: 85:     printf("                ");
[e ( _printf :s 21C ]
"86
[; ;lcdCode.c: 86:     { lcdInst(0x80 | LCD_LINE2_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE2_ADDR `i `uc ]
}
"87
[; ;lcdCode.c: 87:     printf("                ");
[e ( _printf :s 22C ]
"88
[; ;lcdCode.c: 88:     if (mode == 0){
[e $ ! == -> _mode `i -> 0 `i 282  ]
{
"89
[; ;lcdCode.c: 89:         { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"90
[; ;lcdCode.c: 90:         printf("                ");
[e ( _printf :s 23C ]
"91
[; ;lcdCode.c: 91:         { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"92
[; ;lcdCode.c: 92:         printf(" I AM GOING OUT ");
[e ( _printf :s 24C ]
"93
[; ;lcdCode.c: 93:     } else if (mode == 1){
}
[e $U 283  ]
[e :U 282 ]
[e $ ! == -> _mode `i -> 1 `i 284  ]
{
"94
[; ;lcdCode.c: 94:         { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"95
[; ;lcdCode.c: 95:         printf("   BASE FOUND   ");
[e ( _printf :s 25C ]
"96
[; ;lcdCode.c: 96:         { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"97
[; ;lcdCode.c: 97:         printf("LOOKING FOR POLE");
[e ( _printf :s 26C ]
"98
[; ;lcdCode.c: 98:     } else if (mode == 2){
}
[e $U 285  ]
[e :U 284 ]
[e $ ! == -> _mode `i -> 2 `i 286  ]
{
"99
[; ;lcdCode.c: 99:         { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"100
[; ;lcdCode.c: 100:         printf("   POLE FOUND   ");
[e ( _printf :s 27C ]
"101
[; ;lcdCode.c: 101:         { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"102
[; ;lcdCode.c: 102:         printf("DEPLOYING  TIRES");
[e ( _printf :s 28C ]
"103
[; ;lcdCode.c: 103:     } else if (mode == 3){
}
[e $U 287  ]
[e :U 286 ]
[e $ ! == -> _mode `i -> 3 `i 288  ]
{
"104
[; ;lcdCode.c: 104:         { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"105
[; ;lcdCode.c: 105:         printf(" TIRES  ARRIVED ");
[e ( _printf :s 29C ]
"106
[; ;lcdCode.c: 106:         { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"107
[; ;lcdCode.c: 107:         printf("MOVING + RAMP IN");
[e ( _printf :s 30C ]
"108
[; ;lcdCode.c: 108:     } else {
}
[e $U 289  ]
[e :U 288 ]
{
"109
[; ;lcdCode.c: 109:         { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"110
[; ;lcdCode.c: 110:         printf("  MAX DISTANCE  ");
[e ( _printf :s 31C ]
"111
[; ;lcdCode.c: 111:         { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"112
[; ;lcdCode.c: 112:         printf("I AM COMING HOME");
[e ( _printf :s 32C ]
"113
[; ;lcdCode.c: 113:     }
}
[e :U 289 ]
[e :U 287 ]
[e :U 285 ]
[e :U 283 ]
"114
[; ;lcdCode.c: 114: }
[e :UE 281 ]
}
"116
[; ;lcdCode.c: 116: void detectFeedback(void){
[v _detectFeedback `(v ~T0 @X0 1 ef ]
{
[e :U _detectFeedback ]
[f ]
"117
[; ;lcdCode.c: 117:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 128 `i `uc ]
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"118
[; ;lcdCode.c: 118:     printf("!!!!! POLE !!!!!");
[e ( _printf :s 33C ]
"119
[; ;lcdCode.c: 119:     { lcdInst(0x80 | LCD_LINE2_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE2_ADDR `i `uc ]
}
"120
[; ;lcdCode.c: 120:     printf("! SUCCESSFULLY !");
[e ( _printf :s 34C ]
"121
[; ;lcdCode.c: 121:     { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"122
[; ;lcdCode.c: 122:     printf("!   DETECTED   !");
[e ( _printf :s 35C ]
"123
[; ;lcdCode.c: 123:     { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"124
[; ;lcdCode.c: 124:     printf("!!!!!!!!!!!!!!!!");
[e ( _printf :s 36C ]
"125
[; ;lcdCode.c: 125: }
[e :UE 290 ]
}
"127
[; ;lcdCode.c: 127: void tooManyTires(void){
[v _tooManyTires `(v ~T0 @X0 1 ef ]
{
[e :U _tooManyTires ]
[f ]
"129
[; ;lcdCode.c: 129:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 128 `i `uc ]
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"130
[; ;lcdCode.c: 130:     printf("!!!!!ERROR!!!!!!");
[e ( _printf :s 37C ]
"131
[; ;lcdCode.c: 131:     { lcdInst(0x80 | LCD_LINE2_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE2_ADDR `i `uc ]
}
"132
[; ;lcdCode.c: 132:     printf("!  THIS  POLE  !");
[e ( _printf :s 38C ]
"133
[; ;lcdCode.c: 133:     { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"134
[; ;lcdCode.c: 134:     printf("! HAS TOO MANY !");
[e ( _printf :s 39C ]
"135
[; ;lcdCode.c: 135:     { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"136
[; ;lcdCode.c: 136:     printf("! TIRES ON IT  !");
[e ( _printf :s 40C ]
"137
[; ;lcdCode.c: 137: }
[e :UE 291 ]
}
"139
[; ;lcdCode.c: 139: void lcdNorm(void){
[v _lcdNorm `(v ~T0 @X0 1 ef ]
{
[e :U _lcdNorm ]
[f ]
"140
[; ;lcdCode.c: 140:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 128 `i `uc ]
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"141
[; ;lcdCode.c: 141:     printf("  THE OPERATION ");
[e ( _printf :s 41C ]
"142
[; ;lcdCode.c: 142:     { lcdInst(0x80 | LCD_LINE2_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE2_ADDR `i `uc ]
}
"143
[; ;lcdCode.c: 143:     printf("  IS CURRENTLY  ");
[e ( _printf :s 42C ]
"144
[; ;lcdCode.c: 144:     { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"145
[; ;lcdCode.c: 145:     printf("   IN PROGRESS  ");
[e ( _printf :s 43C ]
"146
[; ;lcdCode.c: 146:     { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"147
[; ;lcdCode.c: 147:     printf("                ");
[e ( _printf :s 44C ]
"148
[; ;lcdCode.c: 148: }
[e :UE 292 ]
}
"150
[; ;lcdCode.c: 150: void dispShowLogs(void){
[v _dispShowLogs `(v ~T0 @X0 1 ef ]
{
[e :U _dispShowLogs ]
[f ]
"151
[; ;lcdCode.c: 151:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 128 `i `uc ]
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"152
[; ;lcdCode.c: 152:     printf("CHOOSE WHICH LOG");
[e ( _printf :s 45C ]
"153
[; ;lcdCode.c: 153:     { lcdInst(0x80 | LCD_LINE2_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE2_ADDR `i `uc ]
}
"154
[; ;lcdCode.c: 154:     printf("TO SEE ( 1 - 4 )");
[e ( _printf :s 46C ]
"155
[; ;lcdCode.c: 155:     { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"156
[; ;lcdCode.c: 156:     printf("1:NEW      4:OLD");
[e ( _printf :s 47C ]
"157
[; ;lcdCode.c: 157:     { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"158
[; ;lcdCode.c: 158:     printf("-----0:DONE-----");
[e ( _printf :s 48C ]
"159
[; ;lcdCode.c: 159: }
[e :UE 293 ]
}
"161
[; ;lcdCode.c: 161: void dispLogMain(unsigned char log){
[v _dispLogMain `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _dispLogMain ]
[v _log `uc ~T0 @X0 1 r1 ]
[f ]
"163
[; ;lcdCode.c: 163:     if (read_EEPROM(log*64+1) > 128){
[e $ ! > -> ( _read_EEPROM (1 -> + * -> _log `i -> 64 `i -> 1 `i `uc `i -> 128 `i 295  ]
{
"164
[; ;lcdCode.c: 164:         { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 128 `i `uc ]
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"165
[; ;lcdCode.c: 165:         printf("      ERROR      ");
[e ( _printf :s 49C ]
"166
[; ;lcdCode.c: 166:         { lcdInst(0x80 | LCD_LINE2_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE2_ADDR `i `uc ]
}
"167
[; ;lcdCode.c: 167:         printf(" NO  INFORMATION ");
[e ( _printf :s 50C ]
"168
[; ;lcdCode.c: 168:         { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"169
[; ;lcdCode.c: 169:         printf("      STORED     ",read_EEPROM(log*64+1));
[e ( _printf , (. :s 51C -> ( _read_EEPROM (1 -> + * -> _log `i -> 64 `i -> 1 `i `uc `i ]
"170
[; ;lcdCode.c: 170:         { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"171
[; ;lcdCode.c: 171:         printf("-----0:MENU-----");
[e ( _printf :s 52C ]
"172
[; ;lcdCode.c: 172:     } else {
}
[e $U 296  ]
[e :U 295 ]
{
"173
[; ;lcdCode.c: 173:         { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 128 `i `uc ]
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"174
[; ;lcdCode.c: 174:         printf("--SHOWING  LOG--");
[e ( _printf :s 53C ]
"175
[; ;lcdCode.c: 175:         { lcdInst(0x80 | LCD_LINE2_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE2_ADDR `i `uc ]
}
"176
[; ;lcdCode.c: 176:         printf("7: GENERAL INFO ");
[e ( _printf :s 54C ]
"177
[; ;lcdCode.c: 177:         { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"178
[; ;lcdCode.c: 178:         printf("9: POLE DETAILS ");
[e ( _printf :s 55C ]
"179
[; ;lcdCode.c: 179:         { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"180
[; ;lcdCode.c: 180:         printf("-----0:DONE-----");
[e ( _printf :s 56C ]
"181
[; ;lcdCode.c: 181:     }
}
[e :U 296 ]
"182
[; ;lcdCode.c: 182: }
[e :UE 294 ]
}
"184
[; ;lcdCode.c: 184: void dispLogGen(unsigned char log){
[v _dispLogGen `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _dispLogGen ]
[v _log `uc ~T0 @X0 1 r1 ]
[f ]
"185
[; ;lcdCode.c: 185:     if (read_EEPROM(log*64+1) > 128){
[e $ ! > -> ( _read_EEPROM (1 -> + * -> _log `i -> 64 `i -> 1 `i `uc `i -> 128 `i 298  ]
{
"186
[; ;lcdCode.c: 186:         { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 128 `i `uc ]
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"187
[; ;lcdCode.c: 187:         printf("      ERROR      ");
[e ( _printf :s 57C ]
"188
[; ;lcdCode.c: 188:         { lcdInst(0x80 | LCD_LINE2_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE2_ADDR `i `uc ]
}
"189
[; ;lcdCode.c: 189:         printf(" NO  INFORMATION ");
[e ( _printf :s 58C ]
"190
[; ;lcdCode.c: 190:         { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"191
[; ;lcdCode.c: 191:         printf("      STORED     ",read_EEPROM(log*64+1));
[e ( _printf , (. :s 59C -> ( _read_EEPROM (1 -> + * -> _log `i -> 64 `i -> 1 `i `uc `i ]
"192
[; ;lcdCode.c: 192:         { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"193
[; ;lcdCode.c: 193:         printf("-----0:MENU-----");
[e ( _printf :s 60C ]
"194
[; ;lcdCode.c: 194:     } else {
}
[e $U 299  ]
[e :U 298 ]
{
"195
[; ;lcdCode.c: 195:         { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 128 `i `uc ]
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"196
[; ;lcdCode.c: 196:         printf("TOTAL TIME: %3ds", read_EEPROM(log*64));
[e ( _printf , (. :s 61C -> ( _read_EEPROM (1 -> * -> _log `i -> 64 `i `uc `i ]
"197
[; ;lcdCode.c: 197:         { lcdInst(0x80 | LCD_LINE2_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE2_ADDR `i `uc ]
}
"198
[; ;lcdCode.c: 198:         printf("TIRES SUPP:  %2d ",read_EEPROM(log*64+2));
[e ( _printf , (. :s 62C -> ( _read_EEPROM (1 -> + * -> _log `i -> 64 `i -> 2 `i `uc `i ]
"199
[; ;lcdCode.c: 199:         { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"200
[; ;lcdCode.c: 200:         printf("POLE COUNT:  %2d ",read_EEPROM(log*64+1));
[e ( _printf , (. :s 63C -> ( _read_EEPROM (1 -> + * -> _log `i -> 64 `i -> 1 `i `uc `i ]
"201
[; ;lcdCode.c: 201:         { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"202
[; ;lcdCode.c: 202:         printf("-----0:MENU-----");
[e ( _printf :s 64C ]
"203
[; ;lcdCode.c: 203:     }
}
[e :U 299 ]
"204
[; ;lcdCode.c: 204: }
[e :UE 297 ]
}
"206
[; ;lcdCode.c: 206: void dispLogPoleDet(unsigned char log, unsigned char currPole){
[v _dispLogPoleDet `(v ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _dispLogPoleDet ]
[v _log `uc ~T0 @X0 1 r1 ]
[v _currPole `uc ~T0 @X0 1 r2 ]
[f ]
"208
[; ;lcdCode.c: 208:     if (read_EEPROM(log*64+1) > 128){
[e $ ! > -> ( _read_EEPROM (1 -> + * -> _log `i -> 64 `i -> 1 `i `uc `i -> 128 `i 301  ]
{
"209
[; ;lcdCode.c: 209:         { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 128 `i `uc ]
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"210
[; ;lcdCode.c: 210:         printf("      ERROR      ");
[e ( _printf :s 65C ]
"211
[; ;lcdCode.c: 211:         { lcdInst(0x80 | LCD_LINE2_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE2_ADDR `i `uc ]
}
"212
[; ;lcdCode.c: 212:         printf(" NO  INFORMATION ");
[e ( _printf :s 66C ]
"213
[; ;lcdCode.c: 213:         { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"214
[; ;lcdCode.c: 214:         printf("      STORED     ",read_EEPROM(log*64+1));
[e ( _printf , (. :s 67C -> ( _read_EEPROM (1 -> + * -> _log `i -> 64 `i -> 1 `i `uc `i ]
"215
[; ;lcdCode.c: 215:         { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"216
[; ;lcdCode.c: 216:         printf("-----0:MENU-----");
[e ( _printf :s 68C ]
"217
[; ;lcdCode.c: 217:     } else {
}
[e $U 302  ]
[e :U 301 ]
{
"218
[; ;lcdCode.c: 218:         if (read_EEPROM(log*64+1) == 0){
[e $ ! == -> ( _read_EEPROM (1 -> + * -> _log `i -> 64 `i -> 1 `i `uc `i -> 0 `i 303  ]
{
"219
[; ;lcdCode.c: 219:             { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 128 `i `uc ]
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"220
[; ;lcdCode.c: 220:             printf("  THIS RUN HAD  ");
[e ( _printf :s 69C ]
"221
[; ;lcdCode.c: 221:             { lcdInst(0x80 | LCD_LINE2_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE2_ADDR `i `uc ]
}
"222
[; ;lcdCode.c: 222:             printf("    NO POLES    ");
[e ( _printf :s 70C ]
"223
[; ;lcdCode.c: 223:             { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"224
[; ;lcdCode.c: 224:             printf("    DETECTED    ");
[e ( _printf :s 71C ]
"225
[; ;lcdCode.c: 225:             { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"226
[; ;lcdCode.c: 226:             printf("-----0:MENU-----");
[e ( _printf :s 72C ]
"227
[; ;lcdCode.c: 227:         } else {
}
[e $U 304  ]
[e :U 303 ]
{
"228
[; ;lcdCode.c: 228:             int pos = ((int)read_EEPROM(log*64+3+4*currPole))<<8 |
[v _pos `i ~T0 @X0 1 a ]
[e = _pos | << -> ( _read_EEPROM (1 -> + + * -> _log `i -> 64 `i -> 3 `i * -> 4 `i -> _currPole `i `uc `i -> 8 `i -> ( _read_EEPROM (1 -> + + * -> _log `i -> 64 `i -> 4 `i * -> 4 `i -> _currPole `i `uc `i ]
"230
[; ;lcdCode.c: 230:             { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
{
[e ( _lcdInst (1 -> -> 128 `i `uc ]
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 10000000 `l `d .4000.0 `ul ]
}
"231
[; ;lcdCode.c: 231:             printf("POLE%1x POS: %1d.%02dm",
[e ( _printf , , , (. :s 73C + -> _currPole `i -> 1 `i / _pos -> 1000 `i / % _pos -> 1000 `i -> 10 `i ]
"233
[; ;lcdCode.c: 233:             { lcdInst(0x80 | LCD_LINE2_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE2_ADDR `i `uc ]
}
"234
[; ;lcdCode.c: 234:             printf("TIRES SUPP:   %1d ",read_EEPROM(log*64+5+4*currPole));
[e ( _printf , (. :s 74C -> ( _read_EEPROM (1 -> + + * -> _log `i -> 64 `i -> 5 `i * -> 4 `i -> _currPole `i `uc `i ]
"235
[; ;lcdCode.c: 235:             { lcdInst(0x80 | LCD_LINE3_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE3_ADDR `i `uc ]
}
"236
[; ;lcdCode.c: 236:             printf("TIRES ON POLE:%1d ",read_EEPROM(log*64+6+4*currPole));
[e ( _printf , (. :s 75C -> ( _read_EEPROM (1 -> + + * -> _log `i -> 64 `i -> 6 `i * -> 4 `i -> _currPole `i `uc `i ]
"237
[; ;lcdCode.c: 237:             { lcdInst(0x80 | LCD_LINE4_ADDR);};
{
[e ( _lcdInst (1 -> | -> 128 `i -> _LCD_LINE4_ADDR `i `uc ]
}
"238
[; ;lcdCode.c: 238:             printf("<*   0:MENU   #>");
[e ( _printf :s 76C ]
"239
[; ;lcdCode.c: 239:         }
}
[e :U 304 ]
"240
[; ;lcdCode.c: 240:     }
}
[e :U 302 ]
"241
[; ;lcdCode.c: 241: }
[e :UE 300 ]
}
[p f _printf 12615812 ]
[a 9C 84 79 84 65 76 32 84 73 77 69 58 32 37 51 100 115 0 ]
[a 61C 84 79 84 65 76 32 84 73 77 69 58 32 37 51 100 115 0 ]
[a 13C 80 79 76 69 37 49 120 32 80 79 83 58 32 37 49 100 46 37 48 50 100 109 0 ]
[a 73C 80 79 76 69 37 49 120 32 80 79 83 58 32 37 49 100 46 37 48 50 100 109 0 ]
[a 4C 48 58 83 84 65 82 84 32 32 32 56 58 76 79 71 83 0 ]
[a 28C 68 69 80 76 79 89 73 78 71 32 32 84 73 82 69 83 0 ]
[a 30C 77 79 86 73 78 71 32 43 32 82 65 77 80 32 73 78 0 ]
[a 45C 67 72 79 79 83 69 32 87 72 73 67 72 32 76 79 71 0 ]
[a 1C 84 69 65 77 32 51 49 32 32 32 32 32 84 73 82 69 0 ]
[a 32C 73 32 65 77 32 67 79 77 73 78 71 32 72 79 77 69 0 ]
[a 26C 76 79 79 75 73 78 71 32 70 79 82 32 80 79 76 69 0 ]
[a 47C 49 58 78 69 87 32 32 32 32 32 32 52 58 79 76 68 0 ]
[a 16C 60 42 32 32 32 48 58 77 69 78 85 32 32 32 35 62 0 ]
[a 76C 60 42 32 32 32 48 58 77 69 78 85 32 32 32 35 62 0 ]
[a 53C 45 45 83 72 79 87 73 78 71 32 32 76 79 71 45 45 0 ]
[a 5C 45 45 82 85 78 32 67 79 77 80 76 69 84 69 45 45 0 ]
[a 12C 45 45 45 45 45 48 58 77 69 78 85 45 45 45 45 45 0 ]
[a 52C 45 45 45 45 45 48 58 77 69 78 85 45 45 45 45 45 0 ]
[a 60C 45 45 45 45 45 48 58 77 69 78 85 45 45 45 45 45 0 ]
[a 64C 45 45 45 45 45 48 58 77 69 78 85 45 45 45 45 45 0 ]
[a 68C 45 45 45 45 45 48 58 77 69 78 85 45 45 45 45 45 0 ]
[a 72C 45 45 45 45 45 48 58 77 69 78 85 45 45 45 45 45 0 ]
[a 8C 45 45 45 45 45 48 58 68 79 78 69 45 45 45 45 45 0 ]
[a 48C 45 45 45 45 45 48 58 68 79 78 69 45 45 45 45 45 0 ]
[a 56C 45 45 45 45 45 48 58 68 79 78 69 45 45 45 45 45 0 ]
[a 46C 84 79 32 83 69 69 32 40 32 49 32 45 32 52 32 41 0 ]
[a 37C 33 33 33 33 33 69 82 82 79 82 33 33 33 33 33 33 0 ]
[a 36C 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 0 ]
[a 33C 33 33 33 33 33 32 80 79 76 69 32 33 33 33 33 33 0 ]
[a 39C 33 32 72 65 83 32 84 79 79 32 77 65 78 89 32 33 0 ]
[a 34C 33 32 83 85 67 67 69 83 83 70 85 76 76 89 32 33 0 ]
[a 40C 33 32 84 73 82 69 83 32 79 78 32 73 84 32 32 33 0 ]
[a 38C 33 32 32 84 72 73 83 32 32 80 79 76 69 32 32 33 0 ]
[a 35C 33 32 32 32 68 69 84 69 67 84 69 68 32 32 32 33 0 ]
[a 11C 80 79 76 69 32 67 79 85 78 84 58 32 32 37 50 100 32 0 ]
[a 63C 80 79 76 69 32 67 79 85 78 84 58 32 32 37 50 100 32 0 ]
[a 10C 84 73 82 69 83 32 83 85 80 80 58 32 32 37 50 100 32 0 ]
[a 62C 84 73 82 69 83 32 83 85 80 80 58 32 32 37 50 100 32 0 ]
[a 15C 84 73 82 69 83 32 79 78 32 80 79 76 69 58 37 49 100 32 0 ]
[a 75C 84 73 82 69 83 32 79 78 32 80 79 76 69 58 37 49 100 32 0 ]
[a 14C 84 73 82 69 83 32 83 85 80 80 58 32 32 32 37 49 100 32 0 ]
[a 74C 84 73 82 69 83 32 83 85 80 80 58 32 32 32 37 49 100 32 0 ]
[a 24C 32 73 32 65 77 32 71 79 73 78 71 32 79 85 84 32 0 ]
[a 7C 57 58 32 80 79 76 69 32 68 69 84 65 73 76 83 32 0 ]
[a 55C 57 58 32 80 79 76 69 32 68 69 84 65 73 76 83 32 0 ]
[a 6C 55 58 32 71 69 78 69 82 65 76 32 73 78 70 79 32 0 ]
[a 54C 55 58 32 71 69 78 69 82 65 76 32 73 78 70 79 32 0 ]
[a 17C 32 32 84 72 69 32 79 80 69 82 65 84 73 79 78 32 0 ]
[a 41C 32 32 84 72 69 32 79 80 69 82 65 84 73 79 78 32 0 ]
[a 50C 32 78 79 32 32 73 78 70 79 82 77 65 84 73 79 78 32 0 ]
[a 58C 32 78 79 32 32 73 78 70 79 82 77 65 84 73 79 78 32 0 ]
[a 66C 32 78 79 32 32 73 78 70 79 82 77 65 84 73 79 78 32 0 ]
[a 29C 32 84 73 82 69 83 32 32 65 82 82 73 86 69 68 32 0 ]
[a 18C 32 32 73 83 32 67 85 82 82 69 78 84 76 89 32 32 0 ]
[a 42C 32 32 73 83 32 67 85 82 82 69 78 84 76 89 32 32 0 ]
[a 19C 32 32 32 73 78 32 80 82 79 71 82 69 83 83 32 32 0 ]
[a 43C 32 32 32 73 78 32 80 82 79 71 82 69 83 83 32 32 0 ]
[a 31C 32 32 77 65 88 32 68 73 83 84 65 78 67 69 32 32 0 ]
[a 69C 32 32 84 72 73 83 32 82 85 78 32 72 65 68 32 32 0 ]
[a 25C 32 32 32 66 65 83 69 32 70 79 85 78 68 32 32 32 0 ]
[a 27C 32 32 32 80 79 76 69 32 70 79 85 78 68 32 32 32 0 ]
[a 3C 32 32 32 32 37 48 50 120 58 37 48 50 120 58 37 48 50 120 32 32 32 32 0 ]
[a 2C 32 32 32 32 37 48 50 120 47 37 48 50 120 47 37 48 50 120 32 32 32 32 0 ]
[a 70C 32 32 32 32 78 79 32 80 79 76 69 83 32 32 32 32 0 ]
[a 71C 32 32 32 32 68 69 84 69 67 84 69 68 32 32 32 32 0 ]
[a 51C 32 32 32 32 32 32 83 84 79 82 69 68 32 32 32 32 32 0 ]
[a 59C 32 32 32 32 32 32 83 84 79 82 69 68 32 32 32 32 32 0 ]
[a 67C 32 32 32 32 32 32 83 84 79 82 69 68 32 32 32 32 32 0 ]
[a 49C 32 32 32 32 32 32 69 82 82 79 82 32 32 32 32 32 32 0 ]
[a 57C 32 32 32 32 32 32 69 82 82 79 82 32 32 32 32 32 32 0 ]
[a 65C 32 32 32 32 32 32 69 82 82 79 82 32 32 32 32 32 32 0 ]
[a 20C 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 0 ]
[a 21C 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 0 ]
[a 22C 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 0 ]
[a 23C 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 0 ]
[a 44C 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 0 ]
